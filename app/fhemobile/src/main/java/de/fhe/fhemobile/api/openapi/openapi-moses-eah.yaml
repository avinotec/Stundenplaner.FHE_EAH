openapi: 3.1.0
info:
  title: "[WIP] Stundenplan API"
  description: "[WIP] Eine API für den Stundenplan der EAH Jena."
  version: 0.0.0

servers:
  - url: https://stundenplan.eah-jena.de/moses/api/v1

tags:
  - name: Buchung
    description: Informationen zu Buchungen
  - name: Hochschule
    description: Informationen über Gebäude und Räume
  - name: Studiengang
    description: Informationen zu einem Studiengang oder dessen Prüfungsordnung
  - name: Veranstaltung
    description: Veranstaltungen, Verlaufspläne und Fachsemesterzuordnungen
  - name: Studien- und Prüfungsordnung
    description: Studien- und Prüfungsordnung

components:
  schemas:
    ###
    # Schemas to be used inside other schemas
    ###
    lvVorlage:
      required:
        - id
      type: object
      properties:
        id:
          type: integer
          format: int32
        endpointPath:
            type: string
            enum:
              - "/lvvorlage"
            description: ""
    organisationseinheit:
      required:
        - id
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: Datenbank-ID in Moses
          format: int32
        eidFromImport:
          type: string
          description: "Extern-ID, wird beim Import aus anderen Systemen gesetzt. Muss keine Zahl sein, da intern als Zeichenkette gespeichert."
        name:
          type: string
          description: "Name: Beste menschenlesbare Darstellung des Objekts."
        kurzname:
          type: string
          description: "Wenn es einen abgekürzten Namen gibt, wird dieser hier zurückgegeben. Ansonsten wird der normale Name zurückgegeben."
        mosesTypeCode:
          type: string
          enum:
            - "oe"
          description: ""
        endpointPath:
          type: string
          enum:
            - "/organisationseinheit"
          description: ""
    buchungsgruppe:
      type: object
    semester:
      required:
        - id
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: Datenbank-ID in Moses
          format: int32
        eidFromImport:
          type: string
          description: "Extern-ID, wird beim Import aus anderen Systemen gesetzt. Muss keine Zahl sein, da intern als Zeichenkette gespeichert."
        endpointPath:
          type: string
          enum:
            - "/semester"
          description: ""
    entity:
      type: object
    ###
    # Main schemas to be used as return types
    ###
    calVeranstaltung:
      required:
        -  id
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: Datenbank-ID in Moses
          format: int32
        name:
          type: string
          description: "Name: Beste menschenlesbare Darstellung des Objekts."
        kurzname:
          type: string
          description: "Wenn es einen abgekürzten Namen gibt, wird dieser hier zurückgegeben. Ansonsten wird der normale Name zurückgegeben."
        mosesTypeCode:
          type: string
          description: ""
        endpointPath:
          type: string
          enum:
            - "/calveranstaltung"
          description: ""
        calVeranstaltungstyp:
          type: string
          enum:
            - "PRUEFUNG"
            - "LEHRVERANSTALTUNG"
            - "EVENT"
        lvVorlage:
          $ref: "#/components/schemas/lvVorlage"
        oeList:
          type: array
          items:
            $ref: "#/components/schemas/organisationseinheit"
        buchungsgruppeList:
          type: array
          items:
            $ref: "#/components/schemas/buchungsgruppe"
          description: CONTENT NOT KNOWN USE WITH CAUTION
        vplGruppeList:
          type: array
          items:
            type: object
          description: CONTENT NOT KNOWN USE WITH CAUTION
        lvNummer:
          type: string
        veroeffentlicht:
          type: boolean
        semester:
          $ref: "#/components/schemas/semester"
        veranstaltungsformat:
          type: object
          properties:
            id:
              minimum: 1
              type: integer
              description: Datenbank-ID in Moses
              format: int32
            eidFromImport:
              type: string
              description: "Extern-ID, wird beim Import aus anderen Systemen gesetzt. Muss keine Zahl sein, da intern als Zeichenkette gespeichert."
            name:
              type: string
              description: "Name: Beste menschenlesbare Darstellung des Objekts."
            mosesTypeCode:
              type: string
              description: ""
        pruefendeList:
          type: array
          items:
            $ref: "#/components/schemas/entity"
        new:
          type: boolean
        geaendert:
          type: boolean
    calVeranstaltungReponse:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
          minimum: 1
          description: Die Gesamtzahl der Seiten mit Veranstaltungen
        pageNumber:
          type: integer
          format: int32
          minimum: 1
          description: Die aktuelle Seitennummer
        pageSize:
          type: integer
          format: int32
          minimum: 1
          description: Die Anzahl der Veranstaltungen pro Seite
        data:
          type: array
          items:
            $ref: "#/components/schemas/calVeranstaltung"
    studiengang:
      required:
        - id
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: Datenbank-ID in Moses
          format: int32
        eidFromImport:
          type: string
          description: "Extern-ID, wird beim Import aus anderen Systemen gesetzt. Muss keine Zahl sein, da intern als Zeichenkette gespeichert."
        name:
          type: string
          description: "Name: Beste menschenlesbare Darstellung des Objekts."
        kurzname:
          type: string
          description: "Wenn es einen abgekürzten Namen gibt, wird dieser hier zurückgegeben. Ansonsten wird der normale Name zurückgegeben."
        mosesTypeCode:
          type: string
          enum:
            - "studiengang"
          description: ""
        endpointPath:
          type: string
          enum:
            - "/studiengang"
          description: ""
        visible:
          type: boolean
        studiengangart:
          type: object
          properties:
            id:
              minimum: 1
              type: integer
              description: Datenbank-ID in Moses
              format: int32
            eidFromImport:
              type: string
              description: "Extern-ID, wird beim Import aus anderen Systemen gesetzt. Muss keine Zahl sein, da intern als Zeichenkette gespeichert."
            name:
              type: string
              description: "Name: Beste menschenlesbare Darstellung des Objekts."
            mosesTypeCode:
              type: string
              enum:
                - "studiengangart"
              description: ""
            endpointPath:
              type: string
              enum:
                - "/studiengangart"
              description: ""
        makroturnus:
          type: object
          properties:
            id:
              minimum: 1
              type: integer
              description: Datenbank-ID in Moses
              format: int32
            eidFromImport:
              type: string
              description: "Extern-ID, wird beim Import aus anderen Systemen gesetzt. Muss keine Zahl sein, da intern als Zeichenkette gespeichert."
            name:
              type: string
              description: "Name: Beste menschenlesbare Darstellung des Objekts."
            mosesTypeCode:
              type: string
              enum:
                - "semesterturnus"
              description: ""
            endpointPath:
              type: string
              enum:
                - "/makroturnus"
              description: ""
        organisationseinheit:
          $ref: "#/components/schemas/organisationseinheit"
        stupoList:
          type: array
          items:
            properties:
              id:
                minimum: 1
                type: integer
                description: Datenbank-ID in Moses
                format: int32
              eidFromImport:
                type: string
                description: "Extern-ID, wird beim Import aus anderen Systemen gesetzt. Muss keine Zahl sein, da intern als Zeichenkette gespeichert."
              name:
                type: string
                description: "Name: Beste menschenlesbare Darstellung des Objekts."
              kurzname:
                type: string
                description: "Wenn es einen abgekürzten Namen gibt, wird dieser hier zurückgegeben. Ansonsten wird der normale Name zurückgegeben."
              mosesTypeCode:
                type: string
                enum:
                  - "stupo"
                description: ""
              endpointPath:
                type: string
                enum:
                  - "/stupo"
                description: ""
        studiengangTitelList:
          type: array
    studiengangReponse:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
          minimum: 1
          description: Die Gesamtzahl der Seiten mit Studiengängen
        pageNumber:
          type: integer
          format: int32
          minimum: 1
          description: Die aktuelle Seitennummer
        pageSize:
          type: integer
          format: int32
          minimum: 1
          description: Die Anzahl der Studiengänge pro Seite
        data:
          type: array
          items:
            $ref: "#/components/schemas/studiengang"
    studiengangByIdReponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/studiengang"
    stupo:
      required:
        - id
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: Datenbank-ID in Moses
          format: int32
        eidFromImport:
          type: string
          description: "Extern-ID, wird beim Import aus anderen Systemen gesetzt. Muss keine Zahl sein, da intern als Zeichenkette gespeichert."
        name:
          type: string
          description: "Name: Beste menschenlesbare Darstellung des Objekts."
        kurzname:
          type: string
          description: "Wenn es einen abgekürzten Namen gibt, wird dieser hier zurückgegeben. Ansonsten wird der normale Name zurückgegeben."
        mosesTypeCode:
          type: string
          enum:
            - "stupo"
          description: ""
        endpointPath:
          type: string
          enum:
            - "/stupo"
          description: ""
        ausgelaufen:
          type: boolean
        ausland:
          type: string
        beschreibung:
          type: string
        gueltigkeitStartdatum:
          type: string
          format: date
        inhalt:
          type: string
        jahr:
          type: integer
          format: int32
        kompetenzen:
          type: string
        numerusclausus:
          type: boolean
        perspektiven:
          type: string
        praktika:
          type: string
        studiengang:
          $ref: "#/components/schemas/studiengang"
        typkuerzel:
          type: string
          enum:
            - "PO"
        typname:
          type: string
          enum:
            - "Prüfungsordnung"
        verlauf:
          type: string
        vertiefungsrichtungList:
          type: array
          items:
            $ref: "#/components/schemas/entity"
        visible:
          type: boolean
        voraussetzungen:
          type: string
        zusatzinfos:
          type: string
    stupoReponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/stupo"
    stupoByIdReponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/stupo"
    fachsemester:
      required:
        - fachsemester
        - id
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: Datenbank-ID in Moses
          format: int32
        eidFromImport:
          type: string
          description: "Extern-ID, wird beim Import aus anderen Systemen gesetzt. Muss keine Zahl sein, da intern als Zeichenkette gespeichert."
        mosesTypeCode:
          type: string
          enum:
            - "verlaufsplaneintrag"
          description: ""
        endpointPath:
          type: string
          enum:
            - "/fachsemesterzuordnung"
          description: ""
        lvVorlage:
          type: object
          properties:
            id:
              minimum: 1
              type: integer
              description: Datenbank-ID in Moses
              format: int32
            eidFromImport:
              type: string
              description: "Extern-ID, wird beim Import aus anderen Systemen gesetzt. Muss keine Zahl sein, da intern als Zeichenkette gespeichert."
            name:
              type: string
              description: "Name: Beste menschenlesbare Darstellung des Objekts."
            mosesTypeCode:
              type: string
              enum:
                - "veranstaltungsvorlage"
              description: ""
            endpointPath:
              type: string
              enum:
                - "/lvvorlage"
              description: ""
        metakursGruppe:
          type: object
          properties:
            id:
              minimum: 1
              type: integer
              description: Datenbank-ID in Moses
              format: int32
            eidFromImport:
              type: string
              description: "Extern-ID, wird beim Import aus anderen Systemen gesetzt. Muss keine Zahl sein, da intern als Zeichenkette gespeichert."
            name:
              type: string
              description: "Name: Beste menschenlesbare Darstellung des Objekts."
            mosesTypeCode:
              type: string
              enum:
                - "stupo"
              description: ""
            endpointPath:
              type: string
              enum:
                - "/stupo"
              description: ""
        semesterTyp:
          type: string
          enum:
            - WINTER
            - SOMMER
        fachsemester:
          type: integer
          format: int32
    fachsemesterResponse:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
          minimum: 1
          description: Die Gesamtzahl der Seiten mit Fachsemestern
        pageNumber:
          type: integer
          format: int32
          minimum: 1
          description: Die aktuelle Seitennummer
        pageSize:
          type: integer
          format: int32
          minimum: 1
          description: Die Anzahl der Fachsemester pro Seite
        data:
          type: array
          items:
            $ref: "#/components/schemas/fachsemester"
    fachsemesterByIdResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/fachsemester"

  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: Authorization
      description: API-Schlüssel für den Zugriff auf die Stundenplan-API.

  parameters:
    pageNumber:
      in: query
      name: pageNumber
      required: false
      schema:
        type: integer
        minimum: 1
    pageSize:
      in: query
      name: pageSize
      schema:
        maximum: 100000
        minimum: 1
        type: integer
        format: int32
        default: 50

security:
  - ApiKeyAuth: []

paths:
  /calveranstaltung:
    parameters:
      - $ref: '#/components/parameters/pageNumber'
      - $ref: '#/components/parameters/pageSize'
    get:
      operationId: "v1_calveranstaltung_getAll"
      summary: Alle Veranstaltungen abrufen
      tags:
        - Veranstaltung

      responses:
        '200':
          description: Erfolgreiche Abfrage der Veranstaltungen
          content:
            application/json:
              schema:
                 $ref: '#/components/schemas/calVeranstaltungReponse'
        default:
          description: Unexpected error

  /studiengang:
    parameters:
      - $ref: '#/components/parameters/pageNumber'
      - $ref: '#/components/parameters/pageSize'
    get:
      operationId: "v1_studiengang_getAll"
      summary: Suche und Informationen zu Studiengängen
      tags:
        - Studiengang
      responses:
        '200':
          description: Erfolgreiche Abfrage der Studiengänge
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/studiengangReponse'
        default:
          description: Unexpected error
  /studiengang/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
    get:
      operationId: "v1_studiengang_{id}_getById"
      summary: ""
      tags:
        - Studiengang
      responses:
        '200':
          description: Erfolgreiche Abfrage eines Studiengangs per ID/eId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/studiengangByIdReponse'
  /studiengang/eid/{eidFromImport}:
    parameters:
      - name: eidFromImport
        in: path
        required: true
        schema:
          type: string
    get:
      operationId: "v1_studiengang_getByEid"
      summary: ""
      tags:
        - Studiengang
      responses:
        '200':
          description: Erfolgreiche Abfrage eines Studiengangs per ID/eId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/studiengangByIdReponse'
  /stupo:
    parameters:
      - name: idlist
        in: query
        description: "A comma-separated list of URL-encoded EIDs. Each EID should be URL-encoded using percent-encoding."
        schema:
          type: array
          items:
            type: string
        example: "The EID \",!ö\" should be given as such \"%2C%21%C3%B6\". Hence the EID-list ,!ö, ,!ö becomes %2C%21%C3%B6, %2C%21%C3%B6"
      - name: eidlist
        in: query
        schema:
          type: string
      - name: name
        in: query
        schema:
          type: string
    get:
      operationId: "v1_stupo_getAll"
      summary: ""
      tags:
        - "Studien- und Prüfungsordnung"
      responses:
        '200':
          description: Erfolgreiche Abfrage der Prüfungsordnungen
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stupoReponse'
        default:
          description: Unexpected error
  /stupo/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
    get:
      operationId: "v1_stupo_getById"
      summary: ""
      responses:
        '200':
          description: Erfolgreiche Abfrage eines Studiengangs per ID/eId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stupoByIdReponse'
  /stupo/eid/{eidFromImport}:
    parameters:
      - name: eidFromImport
        in: path
        required: true
        schema:
          type: string
    get:
      operationId: "v1_stupo_getByEid"
      summary: ""
      tags:
        - "Studien- und Prüfungsordnung"
      responses:
        '200':
          description: Erfolgreiche Abfrage einer Studienordnung per ID/eId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stupoByIdReponse'
  /fachsemesterzuordnung:
    parameters:
      - name: stupoId
        in: query
        schema:
          type: integer
          format: int32
      - name: lvvId
        in: query
        schema:
          type: integer
          format: int32
      - name: vertiefungsrichtungId
        in: query
        schema:
          type: integer
          format: int32
      - name: idlist
        in: query
        description: "A comma-separated list of URL-encoded EIDs. Each EID should be URL-encoded using percent-encoding."
        schema:
          type: array
          items:
            type: string
          example: "The EID \",!ö\" should be given as such \"%2C%21%C3%B6\". Hence the EID-list ,!ö, ,!ö becomes %2C%21%C3%B6, %2C%21%C3%B6"
      - name: eidlist
        in: query
        schema:
          type: string
      - name: name
        in: query
        schema:
          type: string
    get:
      operationId: "v1_fachsemesterzuordnung_getAll"
      summary: ""
      tags:
        - Fachsemesterzuordnung
      responses:
        '200':
          description: Erfolgreiche Abfrage der Fachsemester
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/fachsemesterResponse'
        default:
          description: Unexpected error
  /fachsemesterzuordnung/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
    get:
      operationId: "v1_fachsemesterzuordnung_{id}_getById"
      summary: ""
      tags:
        - Fachsemesterzuordnung
      responses:
        '200':
          description: Erfolgreiche Abfrage der Fachsemester
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/fachsemesterByIdResponse'
        default:
          description: Unexpected error
  /fachsemesterzuordnung/eid/{eidFromImport}:
    parameters:
      - name: eidFromImport
        in: path
        required: true
        schema:
          type: integer
          format: int32
    get:
      operationId: "v1_fachsemesterzuordnung_getByEid"
      summary: ""
      tags:
        - Fachsemesterzuordnung
      responses:
        '200':
          description: Erfolgreiche Abfrage eines Fachsemesters mit E-ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/fachsemesterByIdResponse'
        default:
          description: Unexpected error