{
  "openapi": "3.0.1",
  "servers": [
    {
      "url": "https://stundenplan.eah-jena.de/moses/api"
    }
  ],
  "paths": {
    "/v1/ping": {
      "get": {
        "tags": [
          "Ping"
        ],
        "responses": {
          "200": {
            "description": "Ein einfaches \"pong\" als Lebenszeichen"
          }
        },
        "operationId": "v1_ping_get"
      }
    },
    "/v1/status": {
      "get": {
        "tags": [
          "Status"
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {},
              "application/xml": {}
            }
          }
        },
        "operationId": "v1_status_get"
      }
    },
    "/v1/timeslot": {
      "get": {
        "tags": [
          "Timeslot"
        ],
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "maximum": 100000,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "idlist",
            "in": "query",
            "description": "A comma-separated list of URL-encoded EIDs. Each EID should be URL-encoded using percent-encoding.",
            "schema": {
              "type": "string"
            },
            "example": "The EID \",!ö\" should be given as such \"%2C%21%C3%B6\". Hence the EID-list ,!ö, ,!ö becomes %2C%21%C3%B6, %2C%21%C3%B6"
          },
          {
            "name": "eidlist",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ETimeslot"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_timeslot_getAll"
      }
    },
    "/v1/timeslot/{id}": {
      "get": {
        "tags": [
          "Timeslot"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ETimeslot"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_timeslot_{id}_getById"
      }
    },
    "/v1/buchung": {
      "get": {
        "tags": [
          "Buchung"
        ],
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "veroeffentlicht",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "maximum": 100000,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "semesterId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "idlist",
            "in": "query",
            "description": "A comma-separated list of URL-encoded EIDs. Each EID should be URL-encoded using percent-encoding.",
            "schema": {
              "type": "string"
            },
            "example": "The EID \",!ö\" should be given as such \"%2C%21%C3%B6\". Hence the EID-list ,!ö, ,!ö becomes %2C%21%C3%B6, %2C%21%C3%B6"
          },
          {
            "name": "eidlist",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EBuchung"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_buchung_getAll"
      }
    },
    "/v1/buchung/eid/{eidFromImport}": {
      "get": {
        "tags": [
          "Buchung"
        ],
        "parameters": [
          {
            "name": "eidFromImport",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EBuchung"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_buchung_getByEid"
      }
    },
    "/v1/buchung/{id}": {
      "get": {
        "tags": [
          "Buchung"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EBuchung"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_buchung_{id}_getById"
      }
    },
    "/v1/buchungsgruppe": {
      "get": {
        "tags": [
          "Buchungsgruppe"
        ],
        "parameters": [
          {
            "name": "cvId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "semesterId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "veroeffentlicht",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "maximum": 100000,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "idlist",
            "in": "query",
            "description": "A comma-separated list of URL-encoded EIDs. Each EID should be URL-encoded using percent-encoding.",
            "schema": {
              "type": "string"
            },
            "example": "The EID \",!ö\" should be given as such \"%2C%21%C3%B6\". Hence the EID-list ,!ö, ,!ö becomes %2C%21%C3%B6, %2C%21%C3%B6"
          },
          {
            "name": "eidlist",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EBuchungsgruppe"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_buchungsgruppe_getAll"
      }
    },
    "/v1/buchungsgruppe/eid/{eidFromImport}": {
      "get": {
        "tags": [
          "Buchungsgruppe"
        ],
        "parameters": [
          {
            "name": "eidFromImport",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EBuchungsgruppe"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_buchungsgruppe_getByEid"
      }
    },
    "/v1/buchungsgruppe/{id}": {
      "get": {
        "tags": [
          "Buchungsgruppe"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EBuchungsgruppe"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_buchungsgruppe_{id}_getById"
      }
    },
    "/v1/llp/buchung/{semester}/{lveNummer}": {
      "get": {
        "tags": [
          "LlpBuchung"
        ],
        "parameters": [
          {
            "name": "semester",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lveNummer",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ELlpBuchung"
                },
                "example": "No example provided."
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ELlpBuchung"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_llp_buchung_{semester}_{lveNummer}_find"
      }
    },
    "/v1/llp/buchung/{semester}": {
      "get": {
        "tags": [
          "LlpBuchung"
        ],
        "parameters": [
          {
            "name": "semester",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ELlpBuchung"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_llp_buchung_{semester}_findAll"
      }
    },
    "/v1/llp/stundenplan/{semester}/{username}": {
      "get": {
        "tags": [
          "LlpStundenplan"
        ],
        "parameters": [
          {
            "name": "semester",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {}
            }
          }
        },
        "operationId": "v1_llp_stundenplan_{semester}_{username}_findAll"
      }
    },
    "/v1/stundenplan/{verlaufsplan}": {
      "get": {
        "tags": [
          "Stundenplan"
        ],
        "parameters": [
          {
            "name": "verlaufsplan",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "semesterId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {},
              "application/xml": {}
            }
          }
        },
        "operationId": "v1_stundenplan_{verlaufsplan}_findAll"
      }
    },
    "/v1/stundenplan/{verlaufsplan}/{fachsemester}": {
      "get": {
        "tags": [
          "Stundenplan"
        ],
        "parameters": [
          {
            "name": "verlaufsplan",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fachsemester",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "semesterId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {},
              "application/xml": {}
            }
          }
        },
        "operationId": "v1_stundenplan_{verlaufsplan}_{fachsemester}_findAll"
      }
    },
    "/v1/stundenplan/{verlaufsplan}/{fachsemester}/{gruppe}": {
      "get": {
        "tags": [
          "Stundenplan"
        ],
        "parameters": [
          {
            "name": "verlaufsplan",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fachsemester",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "gruppe",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "semesterId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {},
              "application/xml": {}
            }
          }
        },
        "operationId": "v1_stundenplan_{verlaufsplan}_{fachsemester}_{gruppe}_findAll"
      }
    },
    "/v1/calveranstaltung": {
      "get": {
        "tags": [
          "Veranstaltung"
        ],
        "parameters": [
          {
            "name": "lehrveranstaltungId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "semesterId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "organisationseinheitId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "veroeffentlicht",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "maximum": 100000,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "idlist",
            "in": "query",
            "description": "A comma-separated list of URL-encoded EIDs. Each EID should be URL-encoded using percent-encoding.",
            "schema": {
              "type": "string"
            },
            "example": "The EID \",!ö\" should be given as such \"%2C%21%C3%B6\". Hence the EID-list ,!ö, ,!ö becomes %2C%21%C3%B6, %2C%21%C3%B6"
          },
          {
            "name": "eidlist",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ECalVeranstaltung"
                  }
                },
                "example": "No example provided."
              }
            },
            "description": ""
          }
        },
        "operationId": "v1_calveranstaltung_getAll"
      }
    },
    "/v1/calveranstaltung/eid/{eidFromImport}": {
      "get": {
        "tags": [
          "Veranstaltung"
        ],
        "parameters": [
          {
            "name": "eidFromImport",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ECalVeranstaltung"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_calveranstaltung_getByEid"
      }
    },
    "/v1/calveranstaltung/{id}": {
      "get": {
        "tags": [
          "Veranstaltung"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ECalVeranstaltung"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_calveranstaltung_{id}_getById"
      }
    },
    "/v1/verlaufsplan": {
      "get": {
        "tags": [
          "Verlaufsplan"
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {},
              "application/xml": {}
            }
          }
        },
        "operationId": "v1_verlaufsplan_findAll"
      }
    },
    "/v1/vplgruppe/{verlaufsplan}": {
      "get": {
        "tags": [
          "VplGruppe"
        ],
        "parameters": [
          {
            "name": "verlaufsplan",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "semesterId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {},
              "application/xml": {}
            }
          }
        },
        "operationId": "v1_vplgruppe_{verlaufsplan}_findAll"
      }
    },
    "/v1/vplgruppe/{verlaufsplan}/{fachsemester}": {
      "get": {
        "tags": [
          "VplGruppe"
        ],
        "parameters": [
          {
            "name": "verlaufsplan",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fachsemester",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "semesterId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {},
              "application/xml": {}
            }
          }
        },
        "operationId": "v1_vplgruppe_{verlaufsplan}_{fachsemester}_findAll"
      }
    },
    "/v1/person": {
      "get": {
        "tags": [
          "Person"
        ],
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "maximum": 100000,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "idlist",
            "in": "query",
            "description": "A comma-separated list of URL-encoded EIDs. Each EID should be URL-encoded using percent-encoding.",
            "schema": {
              "type": "string"
            },
            "example": "The EID \",!ö\" should be given as such \"%2C%21%C3%B6\". Hence the EID-list ,!ö, ,!ö becomes %2C%21%C3%B6, %2C%21%C3%B6"
          },
          {
            "name": "eidlist",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EPerson"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_person_getAll"
      }
    },
    "/v1/person/eid/{eidFromImport}": {
      "get": {
        "tags": [
          "Person"
        ],
        "parameters": [
          {
            "name": "eidFromImport",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EPerson"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_person_getByEid"
      }
    },
    "/v1/person/{id}": {
      "get": {
        "tags": [
          "Person"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EPerson"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_person_{id}_getById"
      }
    },
    "/v1/person/benutzername/{benutzername}": {
      "get": {
        "tags": [
          "Person"
        ],
        "parameters": [
          {
            "name": "benutzername",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EPerson"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_person_benutzername_{benutzername}_getByUsername"
      }
    },
    "/v1/personessential": {
      "get": {
        "tags": [
          "PersonEssential"
        ],
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "maximum": 100000,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "idlist",
            "in": "query",
            "description": "A comma-separated list of URL-encoded EIDs. Each EID should be URL-encoded using percent-encoding.",
            "schema": {
              "type": "string"
            },
            "example": "The EID \",!ö\" should be given as such \"%2C%21%C3%B6\". Hence the EID-list ,!ö, ,!ö becomes %2C%21%C3%B6, %2C%21%C3%B6"
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EPerson"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_personessential_getAll"
      }
    },
    "/v1/personessential/{id}": {
      "get": {
        "tags": [
          "PersonEssential"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EPerson"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_personessential_{id}_getById"
      }
    },
    "/v1/campus": {
      "get": {
        "tags": [
          "Campus"
        ],
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "maximum": 100000,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "idlist",
            "in": "query",
            "description": "A comma-separated list of URL-encoded EIDs. Each EID should be URL-encoded using percent-encoding.",
            "schema": {
              "type": "string"
            },
            "example": "The EID \",!ö\" should be given as such \"%2C%21%C3%B6\". Hence the EID-list ,!ö, ,!ö becomes %2C%21%C3%B6, %2C%21%C3%B6"
          },
          {
            "name": "eidlist",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ECampus"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_campus_getAll"
      }
    },
    "/v1/campus/eid/{eidFromImport}": {
      "get": {
        "tags": [
          "Campus"
        ],
        "parameters": [
          {
            "name": "eidFromImport",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ECampus"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_campus_getByEid"
      }
    },
    "/v1/campus/{id}": {
      "get": {
        "tags": [
          "Campus"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ECampus"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_campus_{id}_getById"
      }
    },
    "/v1/gebaeude": {
      "get": {
        "tags": [
          "Gebaeude"
        ],
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "maximum": 100000,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "idlist",
            "in": "query",
            "description": "A comma-separated list of URL-encoded EIDs. Each EID should be URL-encoded using percent-encoding.",
            "schema": {
              "type": "string"
            },
            "example": "The EID \",!ö\" should be given as such \"%2C%21%C3%B6\". Hence the EID-list ,!ö, ,!ö becomes %2C%21%C3%B6, %2C%21%C3%B6"
          },
          {
            "name": "eidlist",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EGebaeude"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_gebaeude_getAll"
      }
    },
    "/v1/gebaeude/eid/{eidFromImport}": {
      "get": {
        "tags": [
          "Gebaeude"
        ],
        "parameters": [
          {
            "name": "eidFromImport",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EGebaeude"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_gebaeude_getByEid"
      }
    },
    "/v1/gebaeude/{id}": {
      "get": {
        "tags": [
          "Gebaeude"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EGebaeude"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_gebaeude_{id}_getById"
      }
    },
    "/v1/raum": {
      "get": {
        "tags": [
          "Raum"
        ],
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "maximum": 100000,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "idlist",
            "in": "query",
            "description": "A comma-separated list of URL-encoded EIDs. Each EID should be URL-encoded using percent-encoding.",
            "schema": {
              "type": "string"
            },
            "example": "The EID \",!ö\" should be given as such \"%2C%21%C3%B6\". Hence the EID-list ,!ö, ,!ö becomes %2C%21%C3%B6, %2C%21%C3%B6"
          },
          {
            "name": "eidlist",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ERaum"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_raum_getAll"
      }
    },
    "/v1/raum/eid/{eidFromImport}": {
      "get": {
        "tags": [
          "Raum"
        ],
        "parameters": [
          {
            "name": "eidFromImport",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ERaum"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_raum_getByEid"
      }
    },
    "/v1/raum/{id}": {
      "get": {
        "tags": [
          "Raum"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ERaum"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_raum_{id}_getById"
      }
    },
    "/v1/raumeigeschaft": {
      "get": {
        "tags": [
          "Raumeigeschaft"
        ],
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "maximum": 100000,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "idlist",
            "in": "query",
            "description": "A comma-separated list of URL-encoded EIDs. Each EID should be URL-encoded using percent-encoding.",
            "schema": {
              "type": "string"
            },
            "example": "The EID \",!ö\" should be given as such \"%2C%21%C3%B6\". Hence the EID-list ,!ö, ,!ö becomes %2C%21%C3%B6, %2C%21%C3%B6"
          },
          {
            "name": "eidlist",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EEntity"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_raumeigeschaft_getAll"
      }
    },
    "/v1/raumeigeschaft/eid/{eidFromImport}": {
      "get": {
        "tags": [
          "Raumeigeschaft"
        ],
        "parameters": [
          {
            "name": "eidFromImport",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EEntity"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_raumeigeschaft_getByEid"
      }
    },
    "/v1/raumeigeschaft/{id}": {
      "get": {
        "tags": [
          "Raumeigeschaft"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EEntity"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_raumeigeschaft_{id}_getById"
      }
    },
    "/v1/raumtyp": {
      "get": {
        "tags": [
          "Raumtyp"
        ],
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "maximum": 100000,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "idlist",
            "in": "query",
            "description": "A comma-separated list of URL-encoded EIDs. Each EID should be URL-encoded using percent-encoding.",
            "schema": {
              "type": "string"
            },
            "example": "The EID \",!ö\" should be given as such \"%2C%21%C3%B6\". Hence the EID-list ,!ö, ,!ö becomes %2C%21%C3%B6, %2C%21%C3%B6"
          },
          {
            "name": "eidlist",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EEntity"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_raumtyp_getAll"
      }
    },
    "/v1/raumtyp/eid/{eidFromImport}": {
      "get": {
        "tags": [
          "Raumtyp"
        ],
        "parameters": [
          {
            "name": "eidFromImport",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EEntity"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_raumtyp_getByEid"
      }
    },
    "/v1/raumtyp/{id}": {
      "get": {
        "tags": [
          "Raumtyp"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EEntity"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_raumtyp_{id}_getById"
      }
    },
    "/v1/spacingtype": {
      "get": {
        "tags": [
          "Spacingtype"
        ],
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "maximum": 100000,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "idlist",
            "in": "query",
            "description": "A comma-separated list of URL-encoded EIDs. Each EID should be URL-encoded using percent-encoding.",
            "schema": {
              "type": "string"
            },
            "example": "The EID \",!ö\" should be given as such \"%2C%21%C3%B6\". Hence the EID-list ,!ö, ,!ö becomes %2C%21%C3%B6, %2C%21%C3%B6"
          },
          {
            "name": "eidlist",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ESpacingType"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_spacingtype_getAll"
      }
    },
    "/v1/spacingtype/eid/{eidFromImport}": {
      "get": {
        "tags": [
          "Spacingtype"
        ],
        "parameters": [
          {
            "name": "eidFromImport",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ESpacingType"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_spacingtype_getByEid"
      }
    },
    "/v1/spacingtype/{id}": {
      "get": {
        "tags": [
          "Spacingtype"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ESpacingType"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_spacingtype_{id}_getById"
      }
    },
    "/v1/verlaufsplanzuordnung": {
      "get": {
        "tags": [
          "Verlaufsplanzuordnung"
        ],
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "maximum": 100000,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "metakursgruppeId",
            "in": "query",
            "description": "(VertiefungsrichtungId bzw. StupoId)",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "lvvId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "idlist",
            "in": "query",
            "description": "A comma-separated list of URL-encoded EIDs. Each EID should be URL-encoded using percent-encoding.",
            "schema": {
              "type": "string"
            },
            "example": "The EID \",!ö\" should be given as such \"%2C%21%C3%B6\". Hence the EID-list ,!ö, ,!ö becomes %2C%21%C3%B6, %2C%21%C3%B6"
          },
          {
            "name": "eidlist",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EMetakursGruppeMetakurs"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_verlaufsplanzuordnung_getAll"
      }
    },
    "/v1/verlaufsplanzuordnung/eid/{eidFromImport}": {
      "get": {
        "tags": [
          "Verlaufsplanzuordnung"
        ],
        "parameters": [
          {
            "name": "eidFromImport",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EMetakursGruppeMetakurs"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_verlaufsplanzuordnung_getByEid"
      }
    },
    "/v1/verlaufsplanzuordnung/{id}": {
      "get": {
        "tags": [
          "Verlaufsplanzuordnung"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EMetakursGruppeMetakurs"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_verlaufsplanzuordnung_{id}_getById"
      }
    },
    "/v1/fachsemesterzuordnung": {
      "get": {
        "tags": [
          "Fachsemesterzuordnung"
        ],
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "maximum": 100000,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "stupoId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "lvvId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "vertiefungsrichtungId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "idlist",
            "in": "query",
            "description": "A comma-separated list of URL-encoded EIDs. Each EID should be URL-encoded using percent-encoding.",
            "schema": {
              "type": "string"
            },
            "example": "The EID \",!ö\" should be given as such \"%2C%21%C3%B6\". Hence the EID-list ,!ö, ,!ö becomes %2C%21%C3%B6, %2C%21%C3%B6"
          },
          {
            "name": "eidlist",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EMetakursPlanEintrag"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_fachsemesterzuordnung_getAll"
      }
    },
    "/v1/fachsemesterzuordnung/eid/{eidFromImport}": {
      "get": {
        "tags": [
          "Fachsemesterzuordnung"
        ],
        "parameters": [
          {
            "name": "eidFromImport",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EMetakursPlanEintrag"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_fachsemesterzuordnung_getByEid"
      }
    },
    "/v1/fachsemesterzuordnung/{id}": {
      "get": {
        "tags": [
          "Fachsemesterzuordnung"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EMetakursPlanEintrag"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_fachsemesterzuordnung_{id}_getById"
      }
    },
    "/v1/studiengang": {
      "get": {
        "tags": [
          "Studiengang"
        ],
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "maximum": 100000,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "idlist",
            "in": "query",
            "description": "A comma-separated list of URL-encoded EIDs. Each EID should be URL-encoded using percent-encoding.",
            "schema": {
              "type": "string"
            },
            "example": "The EID \",!ö\" should be given as such \"%2C%21%C3%B6\". Hence the EID-list ,!ö, ,!ö becomes %2C%21%C3%B6, %2C%21%C3%B6"
          },
          {
            "name": "eidlist",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EStudiengang"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_studiengang_getAll"
      }
    },
    "/v1/studiengang/eid/{eidFromImport}": {
      "get": {
        "tags": [
          "Studiengang"
        ],
        "parameters": [
          {
            "name": "eidFromImport",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EStudiengang"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_studiengang_getByEid"
      }
    },
    "/v1/studiengang/{id}": {
      "get": {
        "tags": [
          "Studiengang"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EStudiengang"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_studiengang_{id}_getById"
      }
    },
    "/v1/studiengangart": {
      "get": {
        "tags": [
          "Studiengangart"
        ],
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "maximum": 100000,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "idlist",
            "in": "query",
            "description": "A comma-separated list of URL-encoded EIDs. Each EID should be URL-encoded using percent-encoding.",
            "schema": {
              "type": "string"
            },
            "example": "The EID \",!ö\" should be given as such \"%2C%21%C3%B6\". Hence the EID-list ,!ö, ,!ö becomes %2C%21%C3%B6, %2C%21%C3%B6"
          },
          {
            "name": "eidlist",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EEntity"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_studiengangart_getAll"
      }
    },
    "/v1/studiengangart/eid/{eidFromImport}": {
      "get": {
        "tags": [
          "Studiengangart"
        ],
        "parameters": [
          {
            "name": "eidFromImport",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EEntity"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_studiengangart_getByEid"
      }
    },
    "/v1/studiengangart/{id}": {
      "get": {
        "tags": [
          "Studiengangart"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EEntity"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_studiengangart_{id}_getById"
      }
    },
    "/v1/stupo": {
      "get": {
        "tags": [
          "Studien- und Prüfungsordnung"
        ],
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "maximum": 100000,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "idlist",
            "in": "query",
            "description": "A comma-separated list of URL-encoded EIDs. Each EID should be URL-encoded using percent-encoding.",
            "schema": {
              "type": "string"
            },
            "example": "The EID \",!ö\" should be given as such \"%2C%21%C3%B6\". Hence the EID-list ,!ö, ,!ö becomes %2C%21%C3%B6, %2C%21%C3%B6"
          },
          {
            "name": "eidlist",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EStupo"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_stupo_getAll"
      }
    },
    "/v1/stupo/eid/{eidFromImport}": {
      "get": {
        "tags": [
          "Studien- und Prüfungsordnung"
        ],
        "parameters": [
          {
            "name": "eidFromImport",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EStupo"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_stupo_getByEid"
      }
    },
    "/v1/stupo/{id}": {
      "get": {
        "tags": [
          "Studien- und Prüfungsordnung"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EStupo"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_stupo_{id}_getById"
      }
    },
    "/v1/vertiefungsrichtung": {
      "get": {
        "tags": [
          "Vertiefungsrichtung"
        ],
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "maximum": 100000,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "stupoId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "idlist",
            "in": "query",
            "description": "A comma-separated list of URL-encoded EIDs. Each EID should be URL-encoded using percent-encoding.",
            "schema": {
              "type": "string"
            },
            "example": "The EID \",!ö\" should be given as such \"%2C%21%C3%B6\". Hence the EID-list ,!ö, ,!ö becomes %2C%21%C3%B6, %2C%21%C3%B6"
          },
          {
            "name": "eidlist",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EVertiefungsrichtung"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_vertiefungsrichtung_getAll"
      }
    },
    "/v1/vertiefungsrichtung/eid/{eidFromImport}": {
      "get": {
        "tags": [
          "Vertiefungsrichtung"
        ],
        "parameters": [
          {
            "name": "eidFromImport",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EVertiefungsrichtung"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_vertiefungsrichtung_getByEid"
      }
    },
    "/v1/vertiefungsrichtung/{id}": {
      "get": {
        "tags": [
          "Vertiefungsrichtung"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EVertiefungsrichtung"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_vertiefungsrichtung_{id}_getById"
      }
    },
    "/v1/kurs": {
      "get": {
        "tags": [
          "Kurs"
        ],
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "maximum": 100000,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "idlist",
            "in": "query",
            "description": "A comma-separated list of URL-encoded EIDs. Each EID should be URL-encoded using percent-encoding.",
            "schema": {
              "type": "string"
            },
            "example": "The EID \",!ö\" should be given as such \"%2C%21%C3%B6\". Hence the EID-list ,!ö, ,!ö becomes %2C%21%C3%B6, %2C%21%C3%B6"
          },
          {
            "name": "eidlist",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EKurs"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_kurs_getAll"
      }
    },
    "/v1/kurs/eid/{eidFromImport}": {
      "get": {
        "tags": [
          "Kurs"
        ],
        "parameters": [
          {
            "name": "eidFromImport",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EKurs"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_kurs_getByEid"
      }
    },
    "/v1/kurs/{id}": {
      "get": {
        "tags": [
          "Kurs"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EKurs"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_kurs_{id}_getById"
      }
    },
    "/v1/makroturnus": {
      "get": {
        "tags": [
          "Makroturnus"
        ],
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "maximum": 100000,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "idlist",
            "in": "query",
            "description": "A comma-separated list of URL-encoded EIDs. Each EID should be URL-encoded using percent-encoding.",
            "schema": {
              "type": "string"
            },
            "example": "The EID \",!ö\" should be given as such \"%2C%21%C3%B6\". Hence the EID-list ,!ö, ,!ö becomes %2C%21%C3%B6, %2C%21%C3%B6"
          },
          {
            "name": "eidlist",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EEntity"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_makroturnus_getAll"
      }
    },
    "/v1/makroturnus/eid/{eidFromImport}": {
      "get": {
        "tags": [
          "Makroturnus"
        ],
        "parameters": [
          {
            "name": "eidFromImport",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EEntity"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_makroturnus_getByEid"
      }
    },
    "/v1/makroturnus/{id}": {
      "get": {
        "tags": [
          "Makroturnus"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EEntity"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_makroturnus_{id}_getById"
      }
    },
    "/v1/lehrveranstaltung": {
      "get": {
        "tags": [
          "Lehrveranstaltung"
        ],
        "parameters": [
          {
            "name": "lvvId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "semesterId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "maximum": 100000,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "idlist",
            "in": "query",
            "description": "A comma-separated list of URL-encoded EIDs. Each EID should be URL-encoded using percent-encoding.",
            "schema": {
              "type": "string"
            },
            "example": "The EID \",!ö\" should be given as such \"%2C%21%C3%B6\". Hence the EID-list ,!ö, ,!ö becomes %2C%21%C3%B6, %2C%21%C3%B6"
          },
          {
            "name": "eidlist",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ELehrveranstaltung"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_lehrveranstaltung_getAll"
      }
    },
    "/v1/lehrveranstaltung/eid/{eidFromImport}": {
      "get": {
        "tags": [
          "Lehrveranstaltung"
        ],
        "parameters": [
          {
            "name": "eidFromImport",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ELehrveranstaltung"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_lehrveranstaltung_getByEid"
      }
    },
    "/v1/lehrveranstaltung/{id}": {
      "get": {
        "tags": [
          "Lehrveranstaltung"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ELehrveranstaltung"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_lehrveranstaltung_{id}_getById"
      }
    },
    "/v1/veranstaltungsformat": {
      "get": {
        "tags": [
          "Veranstaltungsformat"
        ],
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "maximum": 100000,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "idlist",
            "in": "query",
            "description": "A comma-separated list of URL-encoded EIDs. Each EID should be URL-encoded using percent-encoding.",
            "schema": {
              "type": "string"
            },
            "example": "The EID \",!ö\" should be given as such \"%2C%21%C3%B6\". Hence the EID-list ,!ö, ,!ö becomes %2C%21%C3%B6, %2C%21%C3%B6"
          },
          {
            "name": "eidlist",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EEntity"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_veranstaltungsformat_getAll"
      }
    },
    "/v1/veranstaltungsformat/eid/{eidFromImport}": {
      "get": {
        "tags": [
          "Veranstaltungsformat"
        ],
        "parameters": [
          {
            "name": "eidFromImport",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EEntity"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_veranstaltungsformat_getByEid"
      }
    },
    "/v1/veranstaltungsformat/{id}": {
      "get": {
        "tags": [
          "Veranstaltungsformat"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EEntity"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_veranstaltungsformat_{id}_getById"
      }
    },
    "/v1/lvvorlage": {
      "get": {
        "tags": [
          "Lehrveranstaltungsvorlage"
        ],
        "parameters": [
          {
            "name": "kursId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "maximum": 100000,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "idlist",
            "in": "query",
            "description": "A comma-separated list of URL-encoded EIDs. Each EID should be URL-encoded using percent-encoding.",
            "schema": {
              "type": "string"
            },
            "example": "The EID \",!ö\" should be given as such \"%2C%21%C3%B6\". Hence the EID-list ,!ö, ,!ö becomes %2C%21%C3%B6, %2C%21%C3%B6"
          },
          {
            "name": "eidlist",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ELvVorlage"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_lvvorlage_getAll"
      }
    },
    "/v1/lvvorlage/eid/{eidFromImport}": {
      "get": {
        "tags": [
          "Lehrveranstaltungsvorlage"
        ],
        "parameters": [
          {
            "name": "eidFromImport",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ELvVorlage"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_lvvorlage_getByEid"
      }
    },
    "/v1/lvvorlage/{id}": {
      "get": {
        "tags": [
          "Lehrveranstaltungsvorlage"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ELvVorlage"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_lvvorlage_{id}_getById"
      }
    },
    "/v1/oetyp": {
      "get": {
        "tags": [
          "Organisationseinheitstyp"
        ],
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "maximum": 100000,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "idlist",
            "in": "query",
            "description": "A comma-separated list of URL-encoded EIDs. Each EID should be URL-encoded using percent-encoding.",
            "schema": {
              "type": "string"
            },
            "example": "The EID \",!ö\" should be given as such \"%2C%21%C3%B6\". Hence the EID-list ,!ö, ,!ö becomes %2C%21%C3%B6, %2C%21%C3%B6"
          },
          {
            "name": "eidlist",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EEntity"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_oetyp_getAll"
      }
    },
    "/v1/oetyp/eid/{eidFromImport}": {
      "get": {
        "tags": [
          "Organisationseinheitstyp"
        ],
        "parameters": [
          {
            "name": "eidFromImport",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EEntity"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_oetyp_getByEid"
      }
    },
    "/v1/oetyp/{id}": {
      "get": {
        "tags": [
          "Organisationseinheitstyp"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EEntity"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_oetyp_{id}_getById"
      }
    },
    "/v1/organisationseinheit": {
      "get": {
        "tags": [
          "Organisationseinheit"
        ],
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "maximum": 100000,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "idlist",
            "in": "query",
            "description": "A comma-separated list of URL-encoded EIDs. Each EID should be URL-encoded using percent-encoding.",
            "schema": {
              "type": "string"
            },
            "example": "The EID \",!ö\" should be given as such \"%2C%21%C3%B6\". Hence the EID-list ,!ö, ,!ö becomes %2C%21%C3%B6, %2C%21%C3%B6"
          },
          {
            "name": "eidlist",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EOrganisationseinheit"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_organisationseinheit_getAll"
      }
    },
    "/v1/organisationseinheit/eid/{eidFromImport}": {
      "get": {
        "tags": [
          "Organisationseinheit"
        ],
        "parameters": [
          {
            "name": "eidFromImport",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EOrganisationseinheit"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_organisationseinheit_getByEid"
      }
    },
    "/v1/organisationseinheit/{id}": {
      "get": {
        "tags": [
          "Organisationseinheit"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EOrganisationseinheit"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_organisationseinheit_{id}_getById"
      }
    },
    "/v1/verwaltungseinheit": {
      "get": {
        "tags": [
          "Verwaltungseinheit"
        ],
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "maximum": 100000,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "idlist",
            "in": "query",
            "description": "A comma-separated list of URL-encoded EIDs. Each EID should be URL-encoded using percent-encoding.",
            "schema": {
              "type": "string"
            },
            "example": "The EID \",!ö\" should be given as such \"%2C%21%C3%B6\". Hence the EID-list ,!ö, ,!ö becomes %2C%21%C3%B6, %2C%21%C3%B6"
          },
          {
            "name": "eidlist",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EVerwaltungseinheit"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_verwaltungseinheit_getAll"
      }
    },
    "/v1/verwaltungseinheit/eid/{eidFromImport}": {
      "get": {
        "tags": [
          "Verwaltungseinheit"
        ],
        "parameters": [
          {
            "name": "eidFromImport",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EVerwaltungseinheit"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_verwaltungseinheit_getByEid"
      }
    },
    "/v1/verwaltungseinheit/{id}": {
      "get": {
        "tags": [
          "Verwaltungseinheit"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EVerwaltungseinheit"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_verwaltungseinheit_{id}_getById"
      }
    },
    "/v1/dauer": {
      "get": {
        "tags": [
          "Dauer"
        ],
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "maximum": 100000,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "idlist",
            "in": "query",
            "description": "A comma-separated list of URL-encoded EIDs. Each EID should be URL-encoded using percent-encoding.",
            "schema": {
              "type": "string"
            },
            "example": "The EID \",!ö\" should be given as such \"%2C%21%C3%B6\". Hence the EID-list ,!ö, ,!ö becomes %2C%21%C3%B6, %2C%21%C3%B6"
          },
          {
            "name": "eidlist",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EDauer"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_dauer_getAll"
      }
    },
    "/v1/dauer/eid/{eidFromImport}": {
      "get": {
        "tags": [
          "Dauer"
        ],
        "parameters": [
          {
            "name": "eidFromImport",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EDauer"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_dauer_getByEid"
      }
    },
    "/v1/dauer/{id}": {
      "get": {
        "tags": [
          "Dauer"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EDauer"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_dauer_{id}_getById"
      }
    },
    "/v1/semester": {
      "get": {
        "tags": [
          "Semester"
        ],
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "maximum": 100000,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "idlist",
            "in": "query",
            "description": "A comma-separated list of URL-encoded EIDs. Each EID should be URL-encoded using percent-encoding.",
            "schema": {
              "type": "string"
            },
            "example": "The EID \",!ö\" should be given as such \"%2C%21%C3%B6\". Hence the EID-list ,!ö, ,!ö becomes %2C%21%C3%B6, %2C%21%C3%B6"
          },
          {
            "name": "eidlist",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ESemester"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_semester_getAll"
      }
    },
    "/v1/semester/eid/{eidFromImport}": {
      "get": {
        "tags": [
          "Semester"
        ],
        "parameters": [
          {
            "name": "eidFromImport",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ESemester"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_semester_getByEid"
      }
    },
    "/v1/semester/{id}": {
      "get": {
        "tags": [
          "Semester"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ESemester"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_semester_{id}_getById"
      }
    },
    "/v1/calbetreuungsplanung": {
      "get": {
        "tags": [
          "CalBetreuungsPlanung"
        ],
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "maximum": 100000,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "idlist",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "semesterId",
            "in": "query",
            "description": "Optionaler Semesterfilter",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "eidlist",
            "in": "query",
            "description": "A comma-separated list of URL-encoded EIDs. Each EID should be URL-encoded using percent-encoding.",
            "schema": {
              "type": "string"
            },
            "example": "The EID \",!ö\" should be given as such \"%2C%21%C3%B6\". Hence the EID-list ,!ö, ,!ö becomes %2C%21%C3%B6, %2C%21%C3%B6"
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ECalBetreuungsplanung"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_calbetreuungsplanung_getAll"
      }
    },
    "/v1/calbetreuungsplanung/eid/{eidFromImport}": {
      "get": {
        "tags": [
          "CalBetreuungsPlanung"
        ],
        "parameters": [
          {
            "name": "eidFromImport",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ECalBetreuungsplanung"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_calbetreuungsplanung_getByEid"
      }
    },
    "/v1/calbetreuungsplanung/{id}": {
      "get": {
        "tags": [
          "CalBetreuungsPlanung"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ECalBetreuungsplanung"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_calbetreuungsplanung_{id}_getById"
      }
    },
    "/v1/calplanung": {
      "get": {
        "tags": [
          "CalPlanung"
        ],
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "maximum": 100000,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "idlist",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "semesterId",
            "in": "query",
            "description": "Optionaler Semesterfilter",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "eidlist",
            "in": "query",
            "description": "A comma-separated list of URL-encoded EIDs. Each EID should be URL-encoded using percent-encoding.",
            "schema": {
              "type": "string"
            },
            "example": "The EID \",!ö\" should be given as such \"%2C%21%C3%B6\". Hence the EID-list ,!ö, ,!ö becomes %2C%21%C3%B6, %2C%21%C3%B6"
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ECalPlanung"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_calplanung_getAll"
      }
    },
    "/v1/calplanung/eid/{eidFromImport}": {
      "get": {
        "tags": [
          "CalPlanung"
        ],
        "parameters": [
          {
            "name": "eidFromImport",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ECalPlanung"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_calplanung_getByEid"
      }
    },
    "/v1/calplanung/{id}": {
      "get": {
        "tags": [
          "CalPlanung"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ECalPlanung"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_calplanung_{id}_getById"
      }
    },
    "/v1/calterminplanung": {
      "get": {
        "tags": [
          "CalTerminPlanung"
        ],
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "maximum": 100000,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "idlist",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "semesterId",
            "in": "query",
            "description": "Optionaler Semesterfilter",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "eidlist",
            "in": "query",
            "description": "A comma-separated list of URL-encoded EIDs. Each EID should be URL-encoded using percent-encoding.",
            "schema": {
              "type": "string"
            },
            "example": "The EID \",!ö\" should be given as such \"%2C%21%C3%B6\". Hence the EID-list ,!ö, ,!ö becomes %2C%21%C3%B6, %2C%21%C3%B6"
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ECalTerminplanung"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_calterminplanung_getAll"
      }
    },
    "/v1/calterminplanung/eid/{eidFromImport}": {
      "get": {
        "tags": [
          "CalTerminPlanung"
        ],
        "parameters": [
          {
            "name": "eidFromImport",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ECalTerminplanung"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_calterminplanung_getByEid"
      }
    },
    "/v1/calterminplanung/{id}": {
      "get": {
        "tags": [
          "CalTerminPlanung"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ECalTerminplanung"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_calterminplanung_{id}_getById"
      }
    },
    "/v1/kpl/ergebnis": {
      "get": {
        "tags": [
          "Klausurplanungergebnis"
        ],
        "description": "Gibt alle Ergebnisse der Klausurplanung (mit Paginierung) zu einem bestimmten Szenario zurück.",
        "parameters": [
          {
            "name": "szenarioId",
            "in": "query",
            "description": "Szenariofilter (erforderlich)",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "maximum": 100000,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "idlist",
            "in": "query",
            "description": "A comma-separated list of URL-encoded EIDs. Each EID should be URL-encoded using percent-encoding.",
            "schema": {
              "type": "string"
            },
            "example": "The EID \",!ö\" should be given as such \"%2C%21%C3%B6\". Hence the EID-list ,!ö, ,!ö becomes %2C%21%C3%B6, %2C%21%C3%B6"
          },
          {
            "name": "eidlist",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ECalVeranstaltungKplAuto"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_kpl_ergebnis_getAll"
      }
    },
    "/v1/kpl/ergebnis/all": {
      "get": {
        "tags": [
          "Klausurplanungergebnis"
        ],
        "description": "Gibt alle Ergebnisse der Klausurplanung (ohne Paginierung) zu einem bestimmten Szenario zurück.",
        "parameters": [
          {
            "name": "szenarioId",
            "in": "query",
            "description": "Szenariofilter (erforderlich)",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ECalVeranstaltungKplAuto"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_kpl_ergebnis_all_getAllUnpaginated"
      }
    },
    "/v1/kpl/periode": {
      "get": {
        "tags": [
          "Klausurplanungperiode"
        ],
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "maximum": 100000,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "idlist",
            "in": "query",
            "description": "A comma-separated list of URL-encoded EIDs. Each EID should be URL-encoded using percent-encoding.",
            "schema": {
              "type": "string"
            },
            "example": "The EID \",!ö\" should be given as such \"%2C%21%C3%B6\". Hence the EID-list ,!ö, ,!ö becomes %2C%21%C3%B6, %2C%21%C3%B6"
          },
          {
            "name": "eidlist",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EKlausurplanungPeriode"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_kpl_periode_getAll"
      }
    },
    "/v1/kpl/periode/eid/{eidFromImport}": {
      "get": {
        "tags": [
          "Klausurplanungperiode"
        ],
        "parameters": [
          {
            "name": "eidFromImport",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EKlausurplanungPeriode"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_kpl_periode_getByEid"
      }
    },
    "/v1/kpl/periode/{id}": {
      "get": {
        "tags": [
          "Klausurplanungperiode"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EKlausurplanungPeriode"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_kpl_periode_{id}_getById"
      }
    },
    "/v1/kpl/szenario": {
      "get": {
        "tags": [
          "Klausurplanungszenario"
        ],
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "maximum": 100000,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "semesterId",
            "in": "query",
            "description": "Optionaler Semesterfilter",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "veroeffentlicht",
            "in": "query",
            "description": "Optionaler Filter nach Veröffentlichungsstatus",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "idlist",
            "in": "query",
            "description": "A comma-separated list of URL-encoded EIDs. Each EID should be URL-encoded using percent-encoding.",
            "schema": {
              "type": "string"
            },
            "example": "The EID \",!ö\" should be given as such \"%2C%21%C3%B6\". Hence the EID-list ,!ö, ,!ö becomes %2C%21%C3%B6, %2C%21%C3%B6"
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EKlausurplanungSzenario"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_kpl_szenario_getAll"
      }
    },
    "/v1/kpl/szenario/{id}": {
      "get": {
        "tags": [
          "Klausurplanungszenario"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EKlausurplanungSzenario"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_kpl_szenario_{id}_getById"
      }
    },
    "/v1/kpl/planung": {
      "get": {
        "tags": [
          "Klausurplanung"
        ],
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "maximum": 100000,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "semesterId",
            "in": "query",
            "description": "Optionaler Semesterfilter",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "idlist",
            "in": "query",
            "description": "A comma-separated list of URL-encoded EIDs. Each EID should be URL-encoded using percent-encoding.",
            "schema": {
              "type": "string"
            },
            "example": "The EID \",!ö\" should be given as such \"%2C%21%C3%B6\". Hence the EID-list ,!ö, ,!ö becomes %2C%21%C3%B6, %2C%21%C3%B6"
          },
          {
            "name": "eidlist",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EKlausurplanung"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_kpl_planung_getAll"
      }
    },
    "/v1/kpl/planung/eid/{eidFromImport}": {
      "get": {
        "tags": [
          "Klausurplanung"
        ],
        "parameters": [
          {
            "name": "eidFromImport",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EKlausurplanung"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_kpl_planung_getByEid"
      }
    },
    "/v1/kpl/planung/{id}": {
      "get": {
        "tags": [
          "Klausurplanung"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EKlausurplanung"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_kpl_planung_{id}_getById"
      }
    },
    "/v1/kpl/mengeklausurplanungconstraint": {
      "get": {
        "tags": [
          "MengeKlausurplanungConstraint"
        ],
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "maximum": 100000,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "idlist",
            "in": "query",
            "description": "A comma-separated list of URL-encoded EIDs. Each EID should be URL-encoded using percent-encoding.",
            "schema": {
              "type": "string"
            },
            "example": "The EID \",!ö\" should be given as such \"%2C%21%C3%B6\". Hence the EID-list ,!ö, ,!ö becomes %2C%21%C3%B6, %2C%21%C3%B6"
          },
          {
            "name": "eidlist",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EMengeKlausurplanungConstraint"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_kpl_mengeklausurplanungconstraint_getAll"
      }
    },
    "/v1/kpl/mengeklausurplanungconstraint/{id}": {
      "get": {
        "tags": [
          "MengeKlausurplanungConstraint"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EMengeKlausurplanungConstraint"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_kpl_mengeklausurplanungconstraint_{id}_getById"
      }
    },
    "/v1/kpl/paarklausurplanungconstraint": {
      "get": {
        "tags": [
          "PaarKlausurplanungConstraint"
        ],
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "maximum": 100000,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "idlist",
            "in": "query",
            "description": "A comma-separated list of URL-encoded EIDs. Each EID should be URL-encoded using percent-encoding.",
            "schema": {
              "type": "string"
            },
            "example": "The EID \",!ö\" should be given as such \"%2C%21%C3%B6\". Hence the EID-list ,!ö, ,!ö becomes %2C%21%C3%B6, %2C%21%C3%B6"
          },
          {
            "name": "eidlist",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EPaarKlausurplanungConstraint"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_kpl_paarklausurplanungconstraint_getAll"
      }
    },
    "/v1/kpl/paarklausurplanungconstraint/{id}": {
      "get": {
        "tags": [
          "PaarKlausurplanungConstraint"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EPaarKlausurplanungConstraint"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_kpl_paarklausurplanungconstraint_{id}_getById"
      }
    },
    "/v1/kpl/paarklausurplanungconstrainttyp": {
      "get": {
        "tags": [
          "PaarKlausurplanungConstraintTyp"
        ],
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "maximum": 100000,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "idlist",
            "in": "query",
            "description": "A comma-separated list of URL-encoded EIDs. Each EID should be URL-encoded using percent-encoding.",
            "schema": {
              "type": "string"
            },
            "example": "The EID \",!ö\" should be given as such \"%2C%21%C3%B6\". Hence the EID-list ,!ö, ,!ö becomes %2C%21%C3%B6, %2C%21%C3%B6"
          },
          {
            "name": "eidlist",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EPaarKlausurplanungConstraintTyp"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_kpl_paarklausurplanungconstrainttyp_getAll"
      }
    },
    "/v1/kpl/paarklausurplanungconstrainttyp/{id}": {
      "get": {
        "tags": [
          "PaarKlausurplanungConstraintTyp"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EPaarKlausurplanungConstraintTyp"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_kpl_paarklausurplanungconstrainttyp_{id}_getById"
      }
    },
    "/v1/bolognamodul": {
      "get": {
        "tags": [
          "Bolognamodul"
        ],
        "parameters": [
          {
            "name": "modulNummer",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "lvvId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "semesterId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "maximum": 100000,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EBolognamodul"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_bolognamodul_getAll"
      }
    },
    "/v1/bolognamodul/{id}": {
      "get": {
        "tags": [
          "Bolognamodul"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EBolognamodul"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_bolognamodul_{id}_getById"
      }
    },
    "/v1/bolognamodulaufwand": {
      "get": {
        "tags": [
          "BolognamodulAufwand"
        ],
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "maximum": 100000,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "idlist",
            "in": "query",
            "description": "A comma-separated list of URL-encoded EIDs. Each EID should be URL-encoded using percent-encoding.",
            "schema": {
              "type": "string"
            },
            "example": "The EID \",!ö\" should be given as such \"%2C%21%C3%B6\". Hence the EID-list ,!ö, ,!ö becomes %2C%21%C3%B6, %2C%21%C3%B6"
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EBolognamodulAufwand"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_bolognamodulaufwand_getAll"
      }
    },
    "/v1/bolognamodulaufwand/{id}": {
      "get": {
        "tags": [
          "BolognamodulAufwand"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EBolognamodulAufwand"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_bolognamodulaufwand_{id}_getById"
      }
    },
    "/v1/bolognamodulbeschreibung": {
      "get": {
        "tags": [
          "Bolognamodulbeschreibungen"
        ],
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "maximum": 100000,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "idlist",
            "in": "query",
            "description": "A comma-separated list of URL-encoded EIDs. Each EID should be URL-encoded using percent-encoding.",
            "schema": {
              "type": "string"
            },
            "example": "The EID \",!ö\" should be given as such \"%2C%21%C3%B6\". Hence the EID-list ,!ö, ,!ö becomes %2C%21%C3%B6, %2C%21%C3%B6"
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EBolognamodulBeschreibung"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_bolognamodulbeschreibung_getAll"
      }
    },
    "/v1/bolognamodulbeschreibung/{id}": {
      "get": {
        "tags": [
          "Bolognamodulbeschreibungen"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EBolognamodulBeschreibung"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_bolognamodulbeschreibung_{id}_getById"
      }
    },
    "/v1/bolognamodulbestandteil": {
      "get": {
        "tags": [
          "Bolognamodulbestandteil"
        ],
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "maximum": 100000,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "idlist",
            "in": "query",
            "description": "A comma-separated list of URL-encoded EIDs. Each EID should be URL-encoded using percent-encoding.",
            "schema": {
              "type": "string"
            },
            "example": "The EID \",!ö\" should be given as such \"%2C%21%C3%B6\". Hence the EID-list ,!ö, ,!ö becomes %2C%21%C3%B6, %2C%21%C3%B6"
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EBolognamodulBestandteil"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_bolognamodulbestandteil_getAll"
      }
    },
    "/v1/bolognamodulbestandteil/{id}": {
      "get": {
        "tags": [
          "Bolognamodulbestandteil"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EBolognamodulBestandteil"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_bolognamodulbestandteil_{id}_getById"
      }
    },
    "/v1/bolognamodulbestandteilgruppe": {
      "get": {
        "tags": [
          "Bolognamodulbestandteilgruppe"
        ],
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "maximum": 100000,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "idlist",
            "in": "query",
            "description": "A comma-separated list of URL-encoded EIDs. Each EID should be URL-encoded using percent-encoding.",
            "schema": {
              "type": "string"
            },
            "example": "The EID \",!ö\" should be given as such \"%2C%21%C3%B6\". Hence the EID-list ,!ö, ,!ö becomes %2C%21%C3%B6, %2C%21%C3%B6"
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EBolognamodulBestandteilGruppe"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_bolognamodulbestandteilgruppe_getAll"
      }
    },
    "/v1/bolognamodulbestandteilgruppe/{id}": {
      "get": {
        "tags": [
          "Bolognamodulbestandteilgruppe"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EBolognamodulBestandteilGruppe"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_bolognamodulbestandteilgruppe_{id}_getById"
      }
    },
    "/v1/bolognamodulleistungsnachweis": {
      "get": {
        "tags": [
          "BolognamodulLeistungsnachweis"
        ],
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "maximum": 100000,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "idlist",
            "in": "query",
            "description": "A comma-separated list of URL-encoded EIDs. Each EID should be URL-encoded using percent-encoding.",
            "schema": {
              "type": "string"
            },
            "example": "The EID \",!ö\" should be given as such \"%2C%21%C3%B6\". Hence the EID-list ,!ö, ,!ö becomes %2C%21%C3%B6, %2C%21%C3%B6"
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EBolognamodulLeistungsnachweis"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_bolognamodulleistungsnachweis_getAll"
      }
    },
    "/v1/bolognamodulleistungsnachweis/{id}": {
      "get": {
        "tags": [
          "BolognamodulLeistungsnachweis"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EBolognamodulLeistungsnachweis"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_bolognamodulleistungsnachweis_{id}_getById"
      }
    },
    "/v1/bolognamodulliteratur": {
      "get": {
        "tags": [
          "BolognamodulLiteratur"
        ],
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "maximum": 100000,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "idlist",
            "in": "query",
            "description": "A comma-separated list of URL-encoded EIDs. Each EID should be URL-encoded using percent-encoding.",
            "schema": {
              "type": "string"
            },
            "example": "The EID \",!ö\" should be given as such \"%2C%21%C3%B6\". Hence the EID-list ,!ö, ,!ö becomes %2C%21%C3%B6, %2C%21%C3%B6"
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EBolognamodulLiteratur"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_bolognamodulliteratur_getAll"
      }
    },
    "/v1/bolognamodulliteratur/{id}": {
      "get": {
        "tags": [
          "BolognamodulLiteratur"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EBolognamodulLiteratur"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_bolognamodulliteratur_{id}_getById"
      }
    },
    "/v1/bolognamodulportfolioart": {
      "get": {
        "tags": [
          "BolognamodulPortfolioart"
        ],
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "maximum": 100000,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "idlist",
            "in": "query",
            "description": "A comma-separated list of URL-encoded EIDs. Each EID should be URL-encoded using percent-encoding.",
            "schema": {
              "type": "string"
            },
            "example": "The EID \",!ö\" should be given as such \"%2C%21%C3%B6\". Hence the EID-list ,!ö, ,!ö becomes %2C%21%C3%B6, %2C%21%C3%B6"
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EBolognamodulAufwand"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_bolognamodulportfolioart_getAll"
      }
    },
    "/v1/bolognamodulportfolioart/{id}": {
      "get": {
        "tags": [
          "BolognamodulPortfolioart"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EBolognamodulAufwand"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_bolognamodulportfolioart_{id}_getById"
      }
    },
    "/v1/bolognamodulpruefer": {
      "get": {
        "tags": [
          "BolognamodulPruefer"
        ],
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "maximum": 100000,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "idlist",
            "in": "query",
            "description": "A comma-separated list of URL-encoded EIDs. Each EID should be URL-encoded using percent-encoding.",
            "schema": {
              "type": "string"
            },
            "example": "The EID \",!ö\" should be given as such \"%2C%21%C3%B6\". Hence the EID-list ,!ö, ,!ö becomes %2C%21%C3%B6, %2C%21%C3%B6"
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EBolognamodulPruefer"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_bolognamodulpruefer_getAll"
      }
    },
    "/v1/bolognamodulpruefer/{id}": {
      "get": {
        "tags": [
          "BolognamodulPruefer"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EBolognamodulPruefer"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_bolognamodulpruefer_{id}_getById"
      }
    },
    "/v1/bolognamodulpruefung": {
      "get": {
        "tags": [
          "BolognamodulPruefung"
        ],
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "maximum": 100000,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "idlist",
            "in": "query",
            "description": "A comma-separated list of URL-encoded EIDs. Each EID should be URL-encoded using percent-encoding.",
            "schema": {
              "type": "string"
            },
            "example": "The EID \",!ö\" should be given as such \"%2C%21%C3%B6\". Hence the EID-list ,!ö, ,!ö becomes %2C%21%C3%B6, %2C%21%C3%B6"
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EBolognamodulPruefung"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_bolognamodulpruefung_getAll"
      }
    },
    "/v1/bolognamodulpruefung/{id}": {
      "get": {
        "tags": [
          "BolognamodulPruefung"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EBolognamodulPruefung"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_bolognamodulpruefung_{id}_getById"
      }
    },
    "/v1/bolognamodulpruefungsberechtigung": {
      "get": {
        "tags": [
          "BolognamodulPruefungsberechtigung"
        ],
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "maximum": 100000,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "idlist",
            "in": "query",
            "description": "A comma-separated list of URL-encoded EIDs. Each EID should be URL-encoded using percent-encoding.",
            "schema": {
              "type": "string"
            },
            "example": "The EID \",!ö\" should be given as such \"%2C%21%C3%B6\". Hence the EID-list ,!ö, ,!ö becomes %2C%21%C3%B6, %2C%21%C3%B6"
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EBolognamodulPruefungsberechtigung"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_bolognamodulpruefungsberechtigung_getAll"
      }
    },
    "/v1/bolognamodulpruefungsberechtigung/{id}": {
      "get": {
        "tags": [
          "BolognamodulPruefungsberechtigung"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EBolognamodulPruefungsberechtigung"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_bolognamodulpruefungsberechtigung_{id}_getById"
      }
    },
    "/v1/bolognamodulpruefungselement": {
      "get": {
        "tags": [
          "BolognamodulPruefungselement"
        ],
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "maximum": 100000,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "idlist",
            "in": "query",
            "description": "A comma-separated list of URL-encoded EIDs. Each EID should be URL-encoded using percent-encoding.",
            "schema": {
              "type": "string"
            },
            "example": "The EID \",!ö\" should be given as such \"%2C%21%C3%B6\". Hence the EID-list ,!ö, ,!ö becomes %2C%21%C3%B6, %2C%21%C3%B6"
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EBolognamodulPruefungselement"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_bolognamodulpruefungselement_getAll"
      }
    },
    "/v1/bolognamodulpruefungselement/{id}": {
      "get": {
        "tags": [
          "BolognamodulPruefungselement"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EBolognamodulPruefungselement"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_bolognamodulpruefungselement_{id}_getById"
      }
    },
    "/v1/bolognamodulpruefungselementkategorie": {
      "get": {
        "tags": [
          "BolognamodulPruefungselementKategorie"
        ],
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "maximum": 100000,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "idlist",
            "in": "query",
            "description": "A comma-separated list of URL-encoded EIDs. Each EID should be URL-encoded using percent-encoding.",
            "schema": {
              "type": "string"
            },
            "example": "The EID \",!ö\" should be given as such \"%2C%21%C3%B6\". Hence the EID-list ,!ö, ,!ö becomes %2C%21%C3%B6, %2C%21%C3%B6"
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EBolognamodulPruefungselementKategorie"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_bolognamodulpruefungselementkategorie_getAll"
      }
    },
    "/v1/bolognamodulpruefungselementkategorie/{id}": {
      "get": {
        "tags": [
          "BolognamodulPruefungselementKategorie"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EBolognamodulPruefungselementKategorie"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_bolognamodulpruefungselementkategorie_{id}_getById"
      }
    },
    "/v1/bolognamodulpruefungsform": {
      "get": {
        "tags": [
          "BolognamodulPruefungsform"
        ],
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "maximum": 100000,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "idlist",
            "in": "query",
            "description": "A comma-separated list of URL-encoded EIDs. Each EID should be URL-encoded using percent-encoding.",
            "schema": {
              "type": "string"
            },
            "example": "The EID \",!ö\" should be given as such \"%2C%21%C3%B6\". Hence the EID-list ,!ö, ,!ö becomes %2C%21%C3%B6, %2C%21%C3%B6"
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EBolognamodulPruefungsform"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_bolognamodulpruefungsform_getAll"
      }
    },
    "/v1/bolognamodulpruefungsform/{id}": {
      "get": {
        "tags": [
          "BolognamodulPruefungsform"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EBolognamodulPruefungsform"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_bolognamodulpruefungsform_{id}_getById"
      }
    },
    "/v1/bolognamodulpruefungsvoraussetzung": {
      "get": {
        "tags": [
          "BolognamodulPruefungsvoraussetzung"
        ],
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "maximum": 100000,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "idlist",
            "in": "query",
            "description": "A comma-separated list of URL-encoded EIDs. Each EID should be URL-encoded using percent-encoding.",
            "schema": {
              "type": "string"
            },
            "example": "The EID \",!ö\" should be given as such \"%2C%21%C3%B6\". Hence the EID-list ,!ö, ,!ö becomes %2C%21%C3%B6, %2C%21%C3%B6"
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EBolognamodulPruefungselement"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_bolognamodulpruefungsvoraussetzung_getAll"
      }
    },
    "/v1/bolognamodulpruefungsvoraussetzung/{id}": {
      "get": {
        "tags": [
          "BolognamodulPruefungsvoraussetzung"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EBolognamodulPruefungselement"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_bolognamodulpruefungsvoraussetzung_{id}_getById"
      }
    },
    "/v1/bolognamodulpruefungsvoraussetzungsblock": {
      "get": {
        "tags": [
          "BolognamodulPruefungsvoraussetzungsblock"
        ],
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "maximum": 100000,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "idlist",
            "in": "query",
            "description": "A comma-separated list of URL-encoded EIDs. Each EID should be URL-encoded using percent-encoding.",
            "schema": {
              "type": "string"
            },
            "example": "The EID \",!ö\" should be given as such \"%2C%21%C3%B6\". Hence the EID-list ,!ö, ,!ö becomes %2C%21%C3%B6, %2C%21%C3%B6"
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EBolognamodulPruefungselement"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_bolognamodulpruefungsvoraussetzungsblock_getAll"
      }
    },
    "/v1/bolognamodulpruefungsvoraussetzungsblock/{id}": {
      "get": {
        "tags": [
          "BolognamodulPruefungsvoraussetzungsblock"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EBolognamodulPruefungselement"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_bolognamodulpruefungsvoraussetzungsblock_{id}_getById"
      }
    },
    "/v1/bolognamodultitel": {
      "get": {
        "tags": [
          "BolognamodulTitel"
        ],
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "maximum": 100000,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "idlist",
            "in": "query",
            "description": "A comma-separated list of URL-encoded EIDs. Each EID should be URL-encoded using percent-encoding.",
            "schema": {
              "type": "string"
            },
            "example": "The EID \",!ö\" should be given as such \"%2C%21%C3%B6\". Hence the EID-list ,!ö, ,!ö becomes %2C%21%C3%B6, %2C%21%C3%B6"
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EBolognamodulTitel"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_bolognamodultitel_getAll"
      }
    },
    "/v1/bolognamodultitel/{id}": {
      "get": {
        "tags": [
          "BolognamodulTitel"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EBolognamodulTitel"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_bolognamodultitel_{id}_getById"
      }
    },
    "/v1/bolognamodulversion": {
      "get": {
        "tags": [
          "BolognamodulVersion"
        ],
        "parameters": [
          {
            "name": "modulTitel",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "modulNummer",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "lvvId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "maximum": 100000,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EBolognamodulVersion"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_bolognamodulversion_getAll"
      }
    },
    "/v1/bolognamodulversion/{id}": {
      "get": {
        "tags": [
          "BolognamodulVersion"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EBolognamodulVersion"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_bolognamodulversion_{id}_getById"
      }
    },
    "/v1/bolognamodulpruefunganmeldung": {
      "get": {
        "tags": [
          "BolognamodulpruefungAnmeldung"
        ],
        "parameters": [
          {
            "name": "pruefungInstanzId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "maximum": 100000,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EPruefungAnmeldung"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_bolognamodulpruefunganmeldung_getAll"
      }
    },
    "/v1/bolognamodulpruefunginstanz": {
      "get": {
        "tags": [
          "BolognamodulpruefungInstanz"
        ],
        "parameters": [
          {
            "name": "modulNummer",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "semesterId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "maximum": 100000,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EPruefungInstanz"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_bolognamodulpruefunginstanz_getAll"
      }
    },
    "/v1/bolognamodulpruefunginstanzrechte": {
      "get": {
        "tags": [
          "BolognamodulpruefungInstanzRechte"
        ],
        "parameters": [
          {
            "name": "nutzername",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pruefungInstanzId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "maximum": 100000,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EPruefungInstanz"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_bolognamodulpruefunginstanzrechte_getAll"
      }
    },
    "/v1/bolognamodulliste": {
      "get": {
        "tags": [
          "BolognamodulListe"
        ],
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "maximum": 100000,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "idlist",
            "in": "query",
            "description": "A comma-separated list of URL-encoded EIDs. Each EID should be URL-encoded using percent-encoding.",
            "schema": {
              "type": "string"
            },
            "example": "The EID \",!ö\" should be given as such \"%2C%21%C3%B6\". Hence the EID-list ,!ö, ,!ö becomes %2C%21%C3%B6, %2C%21%C3%B6"
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EModulliste"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_bolognamodulliste_getAll"
      }
    },
    "/v1/bolognamodulliste/{id}": {
      "get": {
        "tags": [
          "BolognamodulListe"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EModulliste"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_bolognamodulliste_{id}_getById"
      }
    },
    "/v1/bolognamodullistengruppe": {
      "get": {
        "tags": [
          "BolognamodulListengruppe"
        ],
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "maximum": 100000,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "idlist",
            "in": "query",
            "description": "A comma-separated list of URL-encoded EIDs. Each EID should be URL-encoded using percent-encoding.",
            "schema": {
              "type": "string"
            },
            "example": "The EID \",!ö\" should be given as such \"%2C%21%C3%B6\". Hence the EID-list ,!ö, ,!ö becomes %2C%21%C3%B6, %2C%21%C3%B6"
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EStudiengangsbereich"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_bolognamodullistengruppe_getAll"
      }
    },
    "/v1/bolognamodullistengruppe/{id}": {
      "get": {
        "tags": [
          "BolognamodulListengruppe"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EStudiengangsbereich"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_bolognamodullistengruppe_{id}_getById"
      }
    },
    "/v1/bolognamodullistenwahlregel": {
      "get": {
        "tags": [
          "BolognamodulListenwahlregel"
        ],
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "maximum": 100000,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "idlist",
            "in": "query",
            "description": "A comma-separated list of URL-encoded EIDs. Each EID should be URL-encoded using percent-encoding.",
            "schema": {
              "type": "string"
            },
            "example": "The EID \",!ö\" should be given as such \"%2C%21%C3%B6\". Hence the EID-list ,!ö, ,!ö becomes %2C%21%C3%B6, %2C%21%C3%B6"
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EBolognamodulListenwahlregel"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_bolognamodullistenwahlregel_getAll"
      }
    },
    "/v1/bolognamodullistenwahlregel/{id}": {
      "get": {
        "tags": [
          "BolognamodulListenwahlregel"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EBolognamodulListenwahlregel"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_bolognamodullistenwahlregel_{id}_getById"
      }
    },
    "/v1/bolognamodullistenzuordnung": {
      "get": {
        "tags": [
          "BolognamodulListenzuordnung"
        ],
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "maximum": 100000,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "idlist",
            "in": "query",
            "description": "A comma-separated list of URL-encoded EIDs. Each EID should be URL-encoded using percent-encoding.",
            "schema": {
              "type": "string"
            },
            "example": "The EID \",!ö\" should be given as such \"%2C%21%C3%B6\". Hence the EID-list ,!ö, ,!ö becomes %2C%21%C3%B6, %2C%21%C3%B6"
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EBolognamodulListenzuordnung"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_bolognamodullistenzuordnung_getAll"
      }
    },
    "/v1/bolognamodullistenzuordnung/{id}": {
      "get": {
        "tags": [
          "BolognamodulListenzuordnung"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EBolognamodulListenzuordnung"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_bolognamodullistenzuordnung_{id}_getById"
      }
    },
    "/v1/modulliste": {
      "get": {
        "tags": [
          "Modulliste"
        ],
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "maximum": 100000,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "idlist",
            "in": "query",
            "description": "A comma-separated list of URL-encoded EIDs. Each EID should be URL-encoded using percent-encoding.",
            "schema": {
              "type": "string"
            },
            "example": "The EID \",!ö\" should be given as such \"%2C%21%C3%B6\". Hence the EID-list ,!ö, ,!ö becomes %2C%21%C3%B6, %2C%21%C3%B6"
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EModulliste"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_modulliste_getAll"
      }
    },
    "/v1/modulliste/{id}": {
      "get": {
        "tags": [
          "Modulliste"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EModulliste"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_modulliste_{id}_getById"
      }
    },
    "/v1/studiengangsabbildung": {
      "get": {
        "tags": [
          "Studiengangsabbildung"
        ],
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "maximum": 100000,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "idlist",
            "in": "query",
            "description": "A comma-separated list of URL-encoded EIDs. Each EID should be URL-encoded using percent-encoding.",
            "schema": {
              "type": "string"
            },
            "example": "The EID \",!ö\" should be given as such \"%2C%21%C3%B6\". Hence the EID-list ,!ö, ,!ö becomes %2C%21%C3%B6, %2C%21%C3%B6"
          },
          {
            "name": "stupoId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EStudiengangsabbildung"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_studiengangsabbildung_getAll"
      }
    },
    "/v1/studiengangsabbildung/{id}": {
      "get": {
        "tags": [
          "Studiengangsabbildung"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EStudiengangsabbildung"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_studiengangsabbildung_{id}_getById"
      }
    },
    "/v1/studiengangsbereich": {
      "get": {
        "tags": [
          "Studiengangsbereich"
        ],
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "maximum": 100000,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "idlist",
            "in": "query",
            "description": "A comma-separated list of URL-encoded EIDs. Each EID should be URL-encoded using percent-encoding.",
            "schema": {
              "type": "string"
            },
            "example": "The EID \",!ö\" should be given as such \"%2C%21%C3%B6\". Hence the EID-list ,!ö, ,!ö becomes %2C%21%C3%B6, %2C%21%C3%B6"
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EStudiengangsbereich"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_studiengangsbereich_getAll"
      }
    },
    "/v1/studiengangsbereich/{id}": {
      "get": {
        "tags": [
          "Studiengangsbereich"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EStudiengangsbereich"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_studiengangsbereich_{id}_getById"
      }
    },
    "/v1/studiengangsbereichwahlregel": {
      "get": {
        "tags": [
          "Studiengangsbereichwahlregel"
        ],
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "maximum": 100000,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "idlist",
            "in": "query",
            "description": "A comma-separated list of URL-encoded EIDs. Each EID should be URL-encoded using percent-encoding.",
            "schema": {
              "type": "string"
            },
            "example": "The EID \",!ö\" should be given as such \"%2C%21%C3%B6\". Hence the EID-list ,!ö, ,!ö becomes %2C%21%C3%B6, %2C%21%C3%B6"
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EStudiengangsbereichWahlregel"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_studiengangsbereichwahlregel_getAll"
      }
    },
    "/v1/studiengangsbereichwahlregel/{id}": {
      "get": {
        "tags": [
          "Studiengangsbereichwahlregel"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EStudiengangsbereichWahlregel"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_studiengangsbereichwahlregel_{id}_getById"
      }
    },
    "/v1/studiengangssteckbrief": {
      "get": {
        "tags": [
          "Studiengangssteckbrief"
        ],
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "maximum": 100000,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "idlist",
            "in": "query",
            "description": "A comma-separated list of URL-encoded EIDs. Each EID should be URL-encoded using percent-encoding.",
            "schema": {
              "type": "string"
            },
            "example": "The EID \",!ö\" should be given as such \"%2C%21%C3%B6\". Hence the EID-list ,!ö, ,!ö becomes %2C%21%C3%B6, %2C%21%C3%B6"
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EStudiengangssteckbrief"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_studiengangssteckbrief_getAll"
      }
    },
    "/v1/studiengangssteckbrief/{id}": {
      "get": {
        "tags": [
          "Studiengangssteckbrief"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EStudiengangssteckbrief"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_studiengangssteckbrief_{id}_getById"
      }
    },
    "/v1/studiengangszuordnung": {
      "get": {
        "tags": [
          "Studiengangszuordnung"
        ],
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "maximum": 100000,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "idlist",
            "in": "query",
            "description": "A comma-separated list of URL-encoded EIDs. Each EID should be URL-encoded using percent-encoding.",
            "schema": {
              "type": "string"
            },
            "example": "The EID \",!ö\" should be given as such \"%2C%21%C3%B6\". Hence the EID-list ,!ö, ,!ö becomes %2C%21%C3%B6, %2C%21%C3%B6"
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EStudiengangszuordnung"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_studiengangszuordnung_getAll"
      }
    },
    "/v1/studiengangszuordnung/{id}": {
      "get": {
        "tags": [
          "Studiengangszuordnung"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EStudiengangszuordnung"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_studiengangszuordnung_{id}_getById"
      }
    },
    "/v1/mplbasisgruppe": {
      "get": {
        "tags": [
          "MplBasisgruppe"
        ],
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "maximum": 100000,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "idlist",
            "in": "query",
            "description": "A comma-separated list of URL-encoded EIDs. Each EID should be URL-encoded using percent-encoding.",
            "schema": {
              "type": "string"
            },
            "example": "The EID \",!ö\" should be given as such \"%2C%21%C3%B6\". Hence the EID-list ,!ö, ,!ö becomes %2C%21%C3%B6, %2C%21%C3%B6"
          },
          {
            "name": "eidlist",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {}
            }
          }
        },
        "operationId": "v1_mplbasisgruppe_getAll"
      }
    },
    "/v1/mplbasisgruppe/{studienordnungEid}/{fachsemesternummer}": {
      "get": {
        "tags": [
          "MplBasisgruppe"
        ],
        "parameters": [
          {
            "name": "studienordnungEid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fachsemesternummer",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "semesterEid",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "maximum": 100000,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {},
              "application/xml": {}
            }
          }
        },
        "operationId": "v1_mplbasisgruppe_{studienordnungEid}_{fachsemesternummer}_getAllWithFachsemester"
      }
    },
    "/v1/mplbasisgruppe/{studienordnungEid}": {
      "get": {
        "tags": [
          "MplBasisgruppe"
        ],
        "parameters": [
          {
            "name": "studienordnungEid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "semesterEid",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "maximum": 100000,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {}
            }
          }
        },
        "operationId": "v1_mplbasisgruppe_{studienordnungEid}_getAllWithStudienordnungEid"
      }
    },
    "/v1/mplbasisgruppe/{id}": {
      "get": {
        "tags": [
          "MplBasisgruppe"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {}
            }
          }
        },
        "operationId": "v1_mplbasisgruppe_{id}_getById"
      }
    },
    "/v1/mpleinschreibestatus": {
      "get": {
        "tags": [
          "MplEinschreibestatus"
        ],
        "parameters": [
          {
            "name": "semesterId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "maximum": 100000,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "idlist",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "eidlist",
            "in": "query",
            "description": "A comma-separated list of URL-encoded EIDs. Each EID should be URL-encoded using percent-encoding.",
            "schema": {
              "type": "string"
            },
            "example": "The EID \",!ö\" should be given as such \"%2C%21%C3%B6\". Hence the EID-list ,!ö, ,!ö becomes %2C%21%C3%B6, %2C%21%C3%B6"
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EMplEinschreibestatus"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_mpleinschreibestatus_getAll"
      }
    },
    "/v1/mpleinschreibestatus/mplstudium/{mplStudiumId}": {
      "get": {
        "tags": [
          "MplEinschreibestatus"
        ],
        "parameters": [
          {
            "name": "mplStudiumId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "semesterId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "maximum": 100000,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "idlist",
            "in": "query",
            "description": "A comma-separated list of URL-encoded EIDs. Each EID should be URL-encoded using percent-encoding.",
            "schema": {
              "type": "string"
            },
            "example": "The EID \",!ö\" should be given as such \"%2C%21%C3%B6\". Hence the EID-list ,!ö, ,!ö becomes %2C%21%C3%B6, %2C%21%C3%B6"
          },
          {
            "name": "eidlist",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EMplEinschreibestatus"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_mpleinschreibestatus_mplstudium_{mplStudiumId}_getAll"
      }
    },
    "/v1/mpleinschreibestatus/eid/{eidFromImport}": {
      "get": {
        "tags": [
          "MplEinschreibestatus"
        ],
        "parameters": [
          {
            "name": "eidFromImport",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EMplEinschreibestatus"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_mpleinschreibestatus_getByEid"
      }
    },
    "/v1/mpleinschreibestatus/{id}": {
      "get": {
        "tags": [
          "MplEinschreibestatus"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EMplEinschreibestatus"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_mpleinschreibestatus_{id}_getById"
      }
    },
    "/v1/mplfachsemestereinstufung": {
      "get": {
        "tags": [
          "MplFachsemesterEinstufung"
        ],
        "parameters": [
          {
            "name": "semesterId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "maximum": 100000,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "idlist",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "eidlist",
            "in": "query",
            "description": "A comma-separated list of URL-encoded EIDs. Each EID should be URL-encoded using percent-encoding.",
            "schema": {
              "type": "string"
            },
            "example": "The EID \",!ö\" should be given as such \"%2C%21%C3%B6\". Hence the EID-list ,!ö, ,!ö becomes %2C%21%C3%B6, %2C%21%C3%B6"
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EMplFachsemestereinstufung"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_mplfachsemestereinstufung_getAll"
      }
    },
    "/v1/mplfachsemestereinstufung/mplstudium/{mplStudiumId}": {
      "get": {
        "tags": [
          "MplFachsemesterEinstufung"
        ],
        "parameters": [
          {
            "name": "mplStudiumId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "semesterId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "maximum": 100000,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "idlist",
            "in": "query",
            "description": "A comma-separated list of URL-encoded EIDs. Each EID should be URL-encoded using percent-encoding.",
            "schema": {
              "type": "string"
            },
            "example": "The EID \",!ö\" should be given as such \"%2C%21%C3%B6\". Hence the EID-list ,!ö, ,!ö becomes %2C%21%C3%B6, %2C%21%C3%B6"
          },
          {
            "name": "eidlist",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EMplFachsemestereinstufung"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_mplfachsemestereinstufung_mplstudium_{mplStudiumId}_getAll"
      }
    },
    "/v1/mplfachsemestereinstufung/eid/{eidFromImport}": {
      "get": {
        "tags": [
          "MplFachsemesterEinstufung"
        ],
        "parameters": [
          {
            "name": "eidFromImport",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EMplFachsemestereinstufung"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_mplfachsemestereinstufung_getByEid"
      }
    },
    "/v1/mplfachsemestereinstufung/{id}": {
      "get": {
        "tags": [
          "MplFachsemesterEinstufung"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EMplFachsemestereinstufung"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_mplfachsemestereinstufung_{id}_getById"
      }
    },
    "/v1/mplfachsemestermoduleintrag": {
      "get": {
        "tags": [
          "MplFachsemesterModulEintrag"
        ],
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "maximum": 100000,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "idlist",
            "in": "query",
            "description": "A comma-separated list of URL-encoded EIDs. Each EID should be URL-encoded using percent-encoding.",
            "schema": {
              "type": "string"
            },
            "example": "The EID \",!ö\" should be given as such \"%2C%21%C3%B6\". Hence the EID-list ,!ö, ,!ö becomes %2C%21%C3%B6, %2C%21%C3%B6"
          },
          {
            "name": "eidlist",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EMplFachsemesterModulEintrag"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_mplfachsemestermoduleintrag_getAll"
      }
    },
    "/v1/mplfachsemestermoduleintrag/eid/{eidFromImport}": {
      "get": {
        "tags": [
          "MplFachsemesterModulEintrag"
        ],
        "parameters": [
          {
            "name": "eidFromImport",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EMplFachsemesterModulEintrag"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_mplfachsemestermoduleintrag_getByEid"
      }
    },
    "/v1/mplfachsemestermoduleintrag/{id}": {
      "get": {
        "tags": [
          "MplFachsemesterModulEintrag"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EMplFachsemesterModulEintrag"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_mplfachsemestermoduleintrag_{id}_getById"
      }
    },
    "/v1/mplmodul": {
      "get": {
        "tags": [
          "MplModul"
        ],
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "maximum": 100000,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "idlist",
            "in": "query",
            "description": "A comma-separated list of URL-encoded EIDs. Each EID should be URL-encoded using percent-encoding.",
            "schema": {
              "type": "string"
            },
            "example": "The EID \",!ö\" should be given as such \"%2C%21%C3%B6\". Hence the EID-list ,!ö, ,!ö becomes %2C%21%C3%B6, %2C%21%C3%B6"
          },
          {
            "name": "eidlist",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EMplModul"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_mplmodul_getAll"
      }
    },
    "/v1/mplmodul/eid/{eidFromImport}": {
      "get": {
        "tags": [
          "MplModul"
        ],
        "parameters": [
          {
            "name": "eidFromImport",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EMplModul"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_mplmodul_getByEid"
      }
    },
    "/v1/mplmodul/{id}": {
      "get": {
        "tags": [
          "MplModul"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EMplModul"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_mplmodul_{id}_getById"
      }
    },
    "/v1/mplmodullvvorlageeintrag": {
      "get": {
        "tags": [
          "MplModulLvVorlageEintrag"
        ],
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "maximum": 100000,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "idlist",
            "in": "query",
            "description": "A comma-separated list of URL-encoded EIDs. Each EID should be URL-encoded using percent-encoding.",
            "schema": {
              "type": "string"
            },
            "example": "The EID \",!ö\" should be given as such \"%2C%21%C3%B6\". Hence the EID-list ,!ö, ,!ö becomes %2C%21%C3%B6, %2C%21%C3%B6"
          },
          {
            "name": "eidlist",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EMplModulLvVorlageEintrag"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_mplmodullvvorlageeintrag_getAll"
      }
    },
    "/v1/mplmodullvvorlageeintrag/eid/{eidFromImport}": {
      "get": {
        "tags": [
          "MplModulLvVorlageEintrag"
        ],
        "parameters": [
          {
            "name": "eidFromImport",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EMplModulLvVorlageEintrag"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_mplmodullvvorlageeintrag_getByEid"
      }
    },
    "/v1/mplmodullvvorlageeintrag/{id}": {
      "get": {
        "tags": [
          "MplModulLvVorlageEintrag"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EMplModulLvVorlageEintrag"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_mplmodullvvorlageeintrag_{id}_getById"
      }
    },
    "/v1/mplmodullvvorlageeintrag/{mplLvVorlageId}": {
      "get": {
        "tags": [
          "MplModulLvVorlageEintrag"
        ],
        "parameters": [
          {
            "name": "mplLvVorlageId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "validOn",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EMplModulLvVorlageEintrag"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_mplmodullvvorlageeintrag_{mplLvVorlageId}_getByParents"
      }
    },
    "/v1/mplmodullvvorlageeintrag/{mplModulId}/{mplLvVorlageId}": {
      "get": {
        "tags": [
          "MplModulLvVorlageEintrag"
        ],
        "parameters": [
          {
            "name": "mplModulId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "mplLvVorlageId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "validOn",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EMplModulLvVorlageEintrag"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_mplmodullvvorlageeintrag_{mplModulId}_{mplLvVorlageId}_getByParents"
      }
    },
    "/v1/mplstudienordnung": {
      "get": {
        "tags": [
          "MplStudienordnung"
        ],
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "maximum": 100000,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "idlist",
            "in": "query",
            "description": "A comma-separated list of URL-encoded EIDs. Each EID should be URL-encoded using percent-encoding.",
            "schema": {
              "type": "string"
            },
            "example": "The EID \",!ö\" should be given as such \"%2C%21%C3%B6\". Hence the EID-list ,!ö, ,!ö becomes %2C%21%C3%B6, %2C%21%C3%B6"
          },
          {
            "name": "eidlist",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EMplStudienordnung"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_mplstudienordnung_getAll"
      }
    },
    "/v1/mplstudienordnung/eid/{eidFromImport}": {
      "get": {
        "tags": [
          "MplStudienordnung"
        ],
        "parameters": [
          {
            "name": "eidFromImport",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EMplStudienordnung"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_mplstudienordnung_getByEid"
      }
    },
    "/v1/mplstudienordnung/{id}": {
      "get": {
        "tags": [
          "MplStudienordnung"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EMplStudienordnung"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_mplstudienordnung_{id}_getById"
      }
    },
    "/v1/mplstudium/person/{personId}": {
      "get": {
        "tags": [
          "MplStudium"
        ],
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "maximum": 100000,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EMplStudium"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_mplstudium_person_{personId}_findAll"
      }
    },
    "/v1/mplstudium": {
      "get": {
        "tags": [
          "MplStudium"
        ],
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "maximum": 100000,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "idlist",
            "in": "query",
            "description": "A comma-separated list of URL-encoded EIDs. Each EID should be URL-encoded using percent-encoding.",
            "schema": {
              "type": "string"
            },
            "example": "The EID \",!ö\" should be given as such \"%2C%21%C3%B6\". Hence the EID-list ,!ö, ,!ö becomes %2C%21%C3%B6, %2C%21%C3%B6"
          },
          {
            "name": "eidlist",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EMplStudium"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_mplstudium_getAll"
      }
    },
    "/v1/mplstudium/eid/{eidFromImport}": {
      "get": {
        "tags": [
          "MplStudium"
        ],
        "parameters": [
          {
            "name": "eidFromImport",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EMplStudium"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_mplstudium_getByEid"
      }
    },
    "/v1/mplstudium/{id}": {
      "get": {
        "tags": [
          "MplStudium"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EMplStudium"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_mplstudium_{id}_getById"
      }
    },
    "/v1/mplstundenplan": {
      "get": {
        "tags": [
          "MplStundenplan"
        ],
        "parameters": [
          {
            "name": "semesterEid",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {}
            }
          }
        },
        "operationId": "v1_mplstundenplan_findAll"
      }
    },
    "/v1/mplstundenplan/basisgruppe/{basisgruppeId}": {
      "get": {
        "tags": [
          "MplStundenplan"
        ],
        "parameters": [
          {
            "name": "basisgruppeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "semesterEid",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {}
            }
          }
        },
        "operationId": "v1_mplstundenplan_basisgruppe_{basisgruppeId}_findAllByBasisgruppe"
      }
    },
    "/v1/mplstundenplan/gruppe/{gruppeId}": {
      "get": {
        "tags": [
          "MplStundenplan"
        ],
        "parameters": [
          {
            "name": "gruppeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "semesterEid",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {}
            }
          }
        },
        "operationId": "v1_mplstundenplan_gruppe_{gruppeId}_findAllByGruppe"
      }
    },
    "/v1/mplsubmodul": {
      "get": {
        "tags": [
          "MplSubmodul"
        ],
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "maximum": 100000,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "idlist",
            "in": "query",
            "description": "A comma-separated list of URL-encoded EIDs. Each EID should be URL-encoded using percent-encoding.",
            "schema": {
              "type": "string"
            },
            "example": "The EID \",!ö\" should be given as such \"%2C%21%C3%B6\". Hence the EID-list ,!ö, ,!ö becomes %2C%21%C3%B6, %2C%21%C3%B6"
          },
          {
            "name": "eidlist",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EMplSubmodul"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_mplsubmodul_getAll"
      }
    },
    "/v1/mplsubmodul/eid/{eidFromImport}": {
      "get": {
        "tags": [
          "MplSubmodul"
        ],
        "parameters": [
          {
            "name": "eidFromImport",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EMplSubmodul"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_mplsubmodul_getByEid"
      }
    },
    "/v1/mplsubmodul/{id}": {
      "get": {
        "tags": [
          "MplSubmodul"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EMplSubmodul"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_mplsubmodul_{id}_getById"
      }
    },
    "/v1/mplterminanmeldung": {
      "get": {
        "tags": [
          "MplTerminanmeldung"
        ],
        "parameters": [
          {
            "name": "semesterId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "maximum": 100000,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "idlist",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "eidlist",
            "in": "query",
            "description": "A comma-separated list of URL-encoded EIDs. Each EID should be URL-encoded using percent-encoding.",
            "schema": {
              "type": "string"
            },
            "example": "The EID \",!ö\" should be given as such \"%2C%21%C3%B6\". Hence the EID-list ,!ö, ,!ö becomes %2C%21%C3%B6, %2C%21%C3%B6"
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EMplTerminanmeldung"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_mplterminanmeldung_getAll"
      }
    },
    "/v1/mplterminanmeldung/mplstudium/{mplStudiumId}": {
      "get": {
        "tags": [
          "MplTerminanmeldung"
        ],
        "parameters": [
          {
            "name": "mplStudiumId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "semesterId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "maximum": 100000,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "idlist",
            "in": "query",
            "description": "A comma-separated list of URL-encoded EIDs. Each EID should be URL-encoded using percent-encoding.",
            "schema": {
              "type": "string"
            },
            "example": "The EID \",!ö\" should be given as such \"%2C%21%C3%B6\". Hence the EID-list ,!ö, ,!ö becomes %2C%21%C3%B6, %2C%21%C3%B6"
          },
          {
            "name": "eidlist",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EMplTerminanmeldung"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_mplterminanmeldung_mplstudium_{mplStudiumId}_getAll"
      }
    },
    "/v1/mplterminanmeldung/eid/{eidFromImport}": {
      "get": {
        "tags": [
          "MplTerminanmeldung"
        ],
        "parameters": [
          {
            "name": "eidFromImport",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EMplTerminanmeldung"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_mplterminanmeldung_getByEid"
      }
    },
    "/v1/mplterminanmeldung/{id}": {
      "get": {
        "tags": [
          "MplTerminanmeldung"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EMplTerminanmeldung"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_mplterminanmeldung_{id}_getById"
      }
    },
    "/v1/import": {
      "post": {
        "tags": [
          "Data import resource"
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/xml": {}
            }
          }
        },
        "operationId": "v1_import_postFile"
      }
    },
    "/v1/sospos/pord": {
      "get": {
        "tags": [
          "Pord"
        ],
        "parameters": [
          {
            "name": "pnr",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {}
            }
          }
        },
        "operationId": "v1_sospos_pord_getPord"
      }
    },
    "/v1/mikroturnus": {
      "get": {
        "tags": [
          "Mikroturnus"
        ],
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "maximum": 100000,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "idlist",
            "in": "query",
            "description": "A comma-separated list of URL-encoded EIDs. Each EID should be URL-encoded using percent-encoding.",
            "schema": {
              "type": "string"
            },
            "example": "The EID \",!ö\" should be given as such \"%2C%21%C3%B6\". Hence the EID-list ,!ö, ,!ö becomes %2C%21%C3%B6, %2C%21%C3%B6"
          },
          {
            "name": "eidlist",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EMikroturnus"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_mikroturnus_getAll"
      }
    },
    "/v1/mikroturnus/eid/{eidFromImport}": {
      "get": {
        "tags": [
          "Mikroturnus"
        ],
        "parameters": [
          {
            "name": "eidFromImport",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EMikroturnus"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_mikroturnus_getByEid"
      }
    },
    "/v1/mikroturnus/{id}": {
      "get": {
        "tags": [
          "Mikroturnus"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EMikroturnus"
                },
                "example": "No example provided."
              }
            }
          }
        },
        "operationId": "v1_mikroturnus_{id}_getById"
      }
    },
    "/v1/custom/terminplanungergebnis": {
      "get": {
        "tags": [
          "Terminplanungergebnis"
        ],
        "parameters": [
          {
            "name": "semesterId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {},
              "application/xml": {}
            }
          }
        },
        "operationId": "v1_custom_terminplanungergebnis_index"
      }
    }
  },
  "components": {
    "schemas": {
      "ETimeslot": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minimum": 1,
            "type": "integer",
            "description": "Datenbank-ID in Moses",
            "format": "int32"
          },
          "eidFromImport": {
            "type": "string",
            "description": "Extern-ID, wird beim Import aus anderen Systemen gesetzt. Muss keine Zahl sein, da intern als Zeichenkette gespeichert."
          },
          "name": {
            "type": "string",
            "description": "Name: Beste menschenlesbare Darstellung des Objekts."
          },
          "multiname": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
            },
            "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
          },
          "kurzname": {
            "type": "string",
            "description": "Wenn es einen abgekürzten Namen gibt, wird dieser hier zurückgegeben. Ansonsten wird der normale Name zurückgegeben."
          },
          "archivierungTimestamp": {
            "type": "string",
            "description": "Wenn dieses Objekt archiviert ist, ist dieses Element vorhanden und markiert den Archivierungszeitpunkt. Es gibt auch Objekte, die generell nicht archivierbar sind.",
            "format": "date-time"
          },
          "dayOfWeek": {
            "type": "string",
            "enum": [
              "MONDAY",
              "TUESDAY",
              "WEDNESDAY",
              "THURSDAY",
              "FRIDAY",
              "SATURDAY",
              "SUNDAY"
            ]
          },
          "startTime": {
            "$ref": "#/components/schemas/LocalTime"
          },
          "endTime": {
            "$ref": "#/components/schemas/LocalTime"
          }
        }
      },
      "LocalTime": {
        "type": "object",
        "properties": {
          "hour": {
            "type": "integer",
            "format": "int32"
          },
          "minute": {
            "type": "integer",
            "format": "int32"
          },
          "second": {
            "type": "integer",
            "format": "int32"
          },
          "nano": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "EBuchung": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minimum": 1,
            "type": "integer",
            "description": "Datenbank-ID in Moses",
            "format": "int32"
          },
          "eidFromImport": {
            "type": "string",
            "description": "Extern-ID, wird beim Import aus anderen Systemen gesetzt. Muss keine Zahl sein, da intern als Zeichenkette gespeichert."
          },
          "name": {
            "type": "string",
            "description": "Name: Beste menschenlesbare Darstellung des Objekts."
          },
          "multiname": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
            },
            "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
          },
          "kurzname": {
            "type": "string",
            "description": "Wenn es einen abgekürzten Namen gibt, wird dieser hier zurückgegeben. Ansonsten wird der normale Name zurückgegeben."
          },
          "archivierungTimestamp": {
            "type": "string",
            "description": "Wenn dieses Objekt archiviert ist, ist dieses Element vorhanden und markiert den Archivierungszeitpunkt. Es gibt auch Objekte, die generell nicht archivierbar sind.",
            "format": "date-time"
          },
          "startPoint": {
            "type": "string",
            "format": "date-time"
          },
          "endPoint": {
            "type": "string",
            "format": "date-time"
          },
          "startTime": {
            "$ref": "#/components/schemas/LocalTime"
          },
          "endTime": {
            "$ref": "#/components/schemas/LocalTime"
          },
          "onlineTermin": {
            "type": "boolean"
          },
          "raumList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EEntity"
            }
          },
          "dozierendeList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EEntity"
            }
          },
          "aufsichtList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EEntity"
            }
          },
          "pausendauer": {
            "type": "integer",
            "format": "int32"
          },
          "vorbereitungsdauer": {
            "type": "integer",
            "format": "int32"
          },
          "nachbereitungsdauer": {
            "type": "integer",
            "format": "int32"
          },
          "lveNummer": {
            "type": "string"
          },
          "lveBeschreibung": {
            "type": "string"
          },
          "notiz": {
            "type": "string"
          },
          "campusList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EEntity"
            }
          },
          "terminart": {
            "type": "string",
            "enum": [
              "EINZELTERMIN",
              "BLOCKTERMIN",
              "PERIODISCHER_TERMIN",
              "CUSTOM"
            ]
          },
          "calVeranstaltungstyp": {
            "type": "string",
            "enum": [
              "PRUEFUNG",
              "LEHRVERANSTALTUNG",
              "EVENT"
            ]
          },
          "lehrleistung": {
            "type": "number",
            "format": "double"
          },
          "campusIsDigital": {
            "type": "boolean"
          },
          "campusEid": {
            "type": "string"
          },
          "buchungsgruppe": {
            "$ref": "#/components/schemas/EEntity"
          }
        }
      },
      "EEntity": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minimum": 1,
            "type": "integer",
            "description": "Datenbank-ID in Moses",
            "format": "int32"
          },
          "eidFromImport": {
            "type": "string",
            "description": "Extern-ID, wird beim Import aus anderen Systemen gesetzt. Muss keine Zahl sein, da intern als Zeichenkette gespeichert."
          },
          "name": {
            "type": "string",
            "description": "Name: Beste menschenlesbare Darstellung des Objekts."
          },
          "multiname": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
            },
            "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
          },
          "kurzname": {
            "type": "string",
            "description": "Wenn es einen abgekürzten Namen gibt, wird dieser hier zurückgegeben. Ansonsten wird der normale Name zurückgegeben."
          },
          "archivierungTimestamp": {
            "type": "string",
            "description": "Wenn dieses Objekt archiviert ist, ist dieses Element vorhanden und markiert den Archivierungszeitpunkt. Es gibt auch Objekte, die generell nicht archivierbar sind.",
            "format": "date-time"
          }
        }
      },
      "EBuchungProto": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minimum": 1,
            "type": "integer",
            "description": "Datenbank-ID in Moses",
            "format": "int32"
          },
          "eidFromImport": {
            "type": "string",
            "description": "Extern-ID, wird beim Import aus anderen Systemen gesetzt. Muss keine Zahl sein, da intern als Zeichenkette gespeichert."
          },
          "name": {
            "type": "string",
            "description": "Name: Beste menschenlesbare Darstellung des Objekts."
          },
          "multiname": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
            },
            "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
          },
          "kurzname": {
            "type": "string",
            "description": "Wenn es einen abgekürzten Namen gibt, wird dieser hier zurückgegeben. Ansonsten wird der normale Name zurückgegeben."
          },
          "archivierungTimestamp": {
            "type": "string",
            "description": "Wenn dieses Objekt archiviert ist, ist dieses Element vorhanden und markiert den Archivierungszeitpunkt. Es gibt auch Objekte, die generell nicht archivierbar sind.",
            "format": "date-time"
          },
          "dateList": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date"
            }
          },
          "startTime": {
            "$ref": "#/components/schemas/LocalTime"
          },
          "endTime": {
            "$ref": "#/components/schemas/LocalTime"
          },
          "includeWeekend": {
            "type": "boolean"
          },
          "includeHoliday": {
            "type": "boolean"
          },
          "includeVacation": {
            "type": "boolean"
          },
          "pausendauer": {
            "type": "integer",
            "format": "int32"
          },
          "vorbereitungsdauer": {
            "type": "integer",
            "format": "int32"
          },
          "nachbereitungsdauer": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "EBuchungsgruppe": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minimum": 1,
            "type": "integer",
            "description": "Datenbank-ID in Moses",
            "format": "int32"
          },
          "eidFromImport": {
            "type": "string",
            "description": "Extern-ID, wird beim Import aus anderen Systemen gesetzt. Muss keine Zahl sein, da intern als Zeichenkette gespeichert."
          },
          "name": {
            "type": "string",
            "description": "Name: Beste menschenlesbare Darstellung des Objekts."
          },
          "multiname": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
            },
            "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
          },
          "kurzname": {
            "type": "string",
            "description": "Wenn es einen abgekürzten Namen gibt, wird dieser hier zurückgegeben. Ansonsten wird der normale Name zurückgegeben."
          },
          "archivierungTimestamp": {
            "type": "string",
            "description": "Wenn dieses Objekt archiviert ist, ist dieses Element vorhanden und markiert den Archivierungszeitpunkt. Es gibt auch Objekte, die generell nicht archivierbar sind.",
            "format": "date-time"
          },
          "startDate": {
            "type": "string",
            "format": "date"
          },
          "endDate": {
            "type": "string",
            "format": "date"
          },
          "startPoint": {
            "type": "string",
            "format": "date-time"
          },
          "endPoint": {
            "type": "string",
            "format": "date-time"
          },
          "campusList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EEntity"
            }
          },
          "calVeranstaltung": {
            "$ref": "#/components/schemas/ECalVeranstaltung"
          },
          "buchungProto": {
            "$ref": "#/components/schemas/EBuchungProto"
          },
          "buchungList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EBuchung"
            }
          },
          "dozierendeList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EEntity"
            }
          },
          "aufsichtList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EEntity"
            }
          },
          "raumList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ERaum"
            }
          },
          "terminart": {
            "type": "string",
            "enum": [
              "EINZELTERMIN",
              "BLOCKTERMIN",
              "PERIODISCHER_TERMIN",
              "CUSTOM"
            ]
          },
          "ort": {
            "type": "string"
          },
          "notiz": {
            "type": "string"
          },
          "lehrleistung": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "ECalBetreuungsplanung": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minimum": 1,
            "type": "integer",
            "description": "Datenbank-ID in Moses",
            "format": "int32"
          },
          "eidFromImport": {
            "type": "string",
            "description": "Extern-ID, wird beim Import aus anderen Systemen gesetzt. Muss keine Zahl sein, da intern als Zeichenkette gespeichert."
          },
          "name": {
            "type": "string",
            "description": "Name: Beste menschenlesbare Darstellung des Objekts."
          },
          "multiname": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
            },
            "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
          },
          "kurzname": {
            "type": "string",
            "description": "Wenn es einen abgekürzten Namen gibt, wird dieser hier zurückgegeben. Ansonsten wird der normale Name zurückgegeben."
          },
          "archivierungTimestamp": {
            "type": "string",
            "description": "Wenn dieses Objekt archiviert ist, ist dieses Element vorhanden und markiert den Archivierungszeitpunkt. Es gibt auch Objekte, die generell nicht archivierbar sind.",
            "format": "date-time"
          },
          "terminPlanung": {
            "$ref": "#/components/schemas/EEntity"
          },
          "person": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EEntity"
            }
          },
          "anzahl": {
            "type": "integer",
            "format": "int32"
          },
          "geplanteUe": {
            "type": "number",
            "format": "double"
          },
          "betreuungsArt": {
            "type": "string"
          }
        }
      },
      "ECalTerminplanung": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minimum": 1,
            "type": "integer",
            "description": "Datenbank-ID in Moses",
            "format": "int32"
          },
          "eidFromImport": {
            "type": "string",
            "description": "Extern-ID, wird beim Import aus anderen Systemen gesetzt. Muss keine Zahl sein, da intern als Zeichenkette gespeichert."
          },
          "name": {
            "type": "string",
            "description": "Name: Beste menschenlesbare Darstellung des Objekts."
          },
          "multiname": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
            },
            "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
          },
          "kurzname": {
            "type": "string",
            "description": "Wenn es einen abgekürzten Namen gibt, wird dieser hier zurückgegeben. Ansonsten wird der normale Name zurückgegeben."
          },
          "archivierungTimestamp": {
            "type": "string",
            "description": "Wenn dieses Objekt archiviert ist, ist dieses Element vorhanden und markiert den Archivierungszeitpunkt. Es gibt auch Objekte, die generell nicht archivierbar sind.",
            "format": "date-time"
          },
          "calPlanung": {
            "$ref": "#/components/schemas/EEntity"
          },
          "dauerInMinutes": {
            "type": "integer",
            "format": "int32"
          },
          "terminart": {
            "type": "string",
            "enum": [
              "EINZELTERMIN",
              "BLOCKTERMIN",
              "PERIODISCHER_TERMIN",
              "CUSTOM"
            ]
          },
          "vplGruppeList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EEntity"
            }
          },
          "betreuungsplanungList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ECalBetreuungsplanung"
            }
          }
        }
      },
      "ECalVeranstaltung": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minimum": 1,
            "type": "integer",
            "description": "Datenbank-ID in Moses",
            "format": "int32"
          },
          "eidFromImport": {
            "type": "string",
            "description": "Extern-ID, wird beim Import aus anderen Systemen gesetzt. Muss keine Zahl sein, da intern als Zeichenkette gespeichert."
          },
          "name": {
            "type": "string",
            "description": "Name: Beste menschenlesbare Darstellung des Objekts."
          },
          "multiname": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
            },
            "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
          },
          "kurzname": {
            "type": "string",
            "description": "Wenn es einen abgekürzten Namen gibt, wird dieser hier zurückgegeben. Ansonsten wird der normale Name zurückgegeben."
          },
          "archivierungTimestamp": {
            "type": "string",
            "description": "Wenn dieses Objekt archiviert ist, ist dieses Element vorhanden und markiert den Archivierungszeitpunkt. Es gibt auch Objekte, die generell nicht archivierbar sind.",
            "format": "date-time"
          },
          "calVeranstaltungstyp": {
            "type": "string",
            "enum": [
              "PRUEFUNG",
              "LEHRVERANSTALTUNG",
              "EVENT"
            ]
          },
          "lvVorlage": {
            "$ref": "#/components/schemas/ELvVorlage"
          },
          "termingruppe": {
            "$ref": "#/components/schemas/ETermingruppe"
          },
          "klausurplanung": {
            "$ref": "#/components/schemas/EEntity"
          },
          "calTerminplanung": {
            "$ref": "#/components/schemas/ECalTerminplanung"
          },
          "oeList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EOrganisationseinheit"
            }
          },
          "buchungsgruppeList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EBuchungsgruppe"
            }
          },
          "vplGruppeList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EEntity"
            }
          },
          "mplGruppe": {
            "type": "string"
          },
          "lvNummer": {
            "type": "string"
          },
          "veroeffentlicht": {
            "type": "boolean"
          },
          "semester": {
            "$ref": "#/components/schemas/ESemester"
          },
          "veranstaltungsformat": {
            "$ref": "#/components/schemas/EEntity"
          },
          "labelList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EEntity"
            }
          },
          "mplLvGruppe": {
            "$ref": "#/components/schemas/EEntity"
          },
          "pruefendeList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EEntity"
            }
          },
          "new": {
            "type": "boolean"
          },
          "geaendert": {
            "type": "boolean"
          }
        }
      },
      "EEmbeddedDateInterval": {
        "type": "object",
        "properties": {
          "startDate": {
            "type": "string",
            "format": "date"
          },
          "endDate": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "EKurs": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minimum": 1,
            "type": "integer",
            "description": "Datenbank-ID in Moses",
            "format": "int32"
          },
          "eidFromImport": {
            "type": "string",
            "description": "Extern-ID, wird beim Import aus anderen Systemen gesetzt. Muss keine Zahl sein, da intern als Zeichenkette gespeichert."
          },
          "name": {
            "type": "string",
            "description": "Name: Beste menschenlesbare Darstellung des Objekts."
          },
          "multiname": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
            },
            "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
          },
          "kurzname": {
            "type": "string",
            "description": "Wenn es einen abgekürzten Namen gibt, wird dieser hier zurückgegeben. Ansonsten wird der normale Name zurückgegeben."
          },
          "archivierungTimestamp": {
            "type": "string",
            "description": "Wenn dieses Objekt archiviert ist, ist dieses Element vorhanden und markiert den Archivierungszeitpunkt. Es gibt auch Objekte, die generell nicht archivierbar sind.",
            "format": "date-time"
          },
          "sws": {
            "type": "integer",
            "format": "int32"
          },
          "organisationseinheit": {
            "$ref": "#/components/schemas/EEntity"
          },
          "lvVorlage": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EEntity"
            }
          }
        }
      },
      "ELehrveranstaltung": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minimum": 1,
            "type": "integer",
            "description": "Datenbank-ID in Moses",
            "format": "int32"
          },
          "eidFromImport": {
            "type": "string",
            "description": "Extern-ID, wird beim Import aus anderen Systemen gesetzt. Muss keine Zahl sein, da intern als Zeichenkette gespeichert."
          },
          "name": {
            "type": "string",
            "description": "Name: Beste menschenlesbare Darstellung des Objekts."
          },
          "multiname": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
            },
            "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
          },
          "kurzname": {
            "type": "string",
            "description": "Wenn es einen abgekürzten Namen gibt, wird dieser hier zurückgegeben. Ansonsten wird der normale Name zurückgegeben."
          },
          "archivierungTimestamp": {
            "type": "string",
            "description": "Wenn dieses Objekt archiviert ist, ist dieses Element vorhanden und markiert den Archivierungszeitpunkt. Es gibt auch Objekte, die generell nicht archivierbar sind.",
            "format": "date-time"
          },
          "lvVorlage": {
            "$ref": "#/components/schemas/EEntity"
          },
          "semester": {
            "$ref": "#/components/schemas/EEntity"
          }
        }
      },
      "ELvVorlage": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minimum": 1,
            "type": "integer",
            "description": "Datenbank-ID in Moses",
            "format": "int32"
          },
          "eidFromImport": {
            "type": "string",
            "description": "Extern-ID, wird beim Import aus anderen Systemen gesetzt. Muss keine Zahl sein, da intern als Zeichenkette gespeichert."
          },
          "name": {
            "type": "string",
            "description": "Name: Beste menschenlesbare Darstellung des Objekts."
          },
          "multiname": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
            },
            "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
          },
          "kurzname": {
            "type": "string",
            "description": "Wenn es einen abgekürzten Namen gibt, wird dieser hier zurückgegeben. Ansonsten wird der normale Name zurückgegeben."
          },
          "archivierungTimestamp": {
            "type": "string",
            "description": "Wenn dieses Objekt archiviert ist, ist dieses Element vorhanden und markiert den Archivierungszeitpunkt. Es gibt auch Objekte, die generell nicht archivierbar sind.",
            "format": "date-time"
          },
          "kurs": {
            "$ref": "#/components/schemas/EKurs"
          },
          "isPruefung": {
            "type": "boolean"
          },
          "veranstaltungsformat": {
            "$ref": "#/components/schemas/EEntity"
          },
          "makroturnus": {
            "$ref": "#/components/schemas/EEntity"
          },
          "lvNummer": {
            "type": "string"
          }
        }
      },
      "EOrganisationseinheit": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minimum": 1,
            "type": "integer",
            "description": "Datenbank-ID in Moses",
            "format": "int32"
          },
          "eidFromImport": {
            "type": "string",
            "description": "Extern-ID, wird beim Import aus anderen Systemen gesetzt. Muss keine Zahl sein, da intern als Zeichenkette gespeichert."
          },
          "name": {
            "type": "string",
            "description": "Name: Beste menschenlesbare Darstellung des Objekts."
          },
          "multiname": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
            },
            "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
          },
          "kurzname": {
            "type": "string",
            "description": "Wenn es einen abgekürzten Namen gibt, wird dieser hier zurückgegeben. Ansonsten wird der normale Name zurückgegeben."
          },
          "archivierungTimestamp": {
            "type": "string",
            "description": "Wenn dieses Objekt archiviert ist, ist dieses Element vorhanden und markiert den Archivierungszeitpunkt. Es gibt auch Objekte, die generell nicht archivierbar sind.",
            "format": "date-time"
          },
          "gebaeude": {
            "$ref": "#/components/schemas/EEntity"
          },
          "oeTyp": {
            "$ref": "#/components/schemas/EEntity"
          },
          "kostenstelle": {
            "type": "string"
          },
          "parent": {
            "$ref": "#/components/schemas/EEntity"
          }
        }
      },
      "ERaum": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minimum": 1,
            "type": "integer",
            "description": "Datenbank-ID in Moses",
            "format": "int32"
          },
          "eidFromImport": {
            "type": "string",
            "description": "Extern-ID, wird beim Import aus anderen Systemen gesetzt. Muss keine Zahl sein, da intern als Zeichenkette gespeichert."
          },
          "name": {
            "type": "string",
            "description": "Name: Beste menschenlesbare Darstellung des Objekts."
          },
          "multiname": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
            },
            "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
          },
          "kurzname": {
            "type": "string",
            "description": "Wenn es einen abgekürzten Namen gibt, wird dieser hier zurückgegeben. Ansonsten wird der normale Name zurückgegeben."
          },
          "archivierungTimestamp": {
            "type": "string",
            "description": "Wenn dieses Objekt archiviert ist, ist dieses Element vorhanden und markiert den Archivierungszeitpunkt. Es gibt auch Objekte, die generell nicht archivierbar sind.",
            "format": "date-time"
          },
          "alternativname": {
            "type": "string"
          },
          "groesse": {
            "type": "number",
            "format": "double"
          },
          "klausurplaetzeEng": {
            "type": "integer",
            "format": "int32"
          },
          "klausurplaetzeWeit": {
            "type": "integer",
            "format": "int32"
          },
          "nummer": {
            "type": "string"
          },
          "stockwerk": {
            "type": "string"
          },
          "raumFreitextfeldList": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "raumeigenschaftList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ERaumEigenschaft"
            }
          },
          "oeffnungszeiten": {
            "$ref": "#/components/schemas/ETimeInterval"
          },
          "raumtyp": {
            "$ref": "#/components/schemas/EEntity"
          },
          "spacingtypeList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ESpacingType"
            }
          },
          "gebaeude": {
            "$ref": "#/components/schemas/EEntity"
          },
          "anzahlPlaetze": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ERaumEigenschaft": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minimum": 1,
            "type": "integer",
            "description": "Datenbank-ID in Moses",
            "format": "int32"
          },
          "eidFromImport": {
            "type": "string",
            "description": "Extern-ID, wird beim Import aus anderen Systemen gesetzt. Muss keine Zahl sein, da intern als Zeichenkette gespeichert."
          },
          "name": {
            "type": "string",
            "description": "Name: Beste menschenlesbare Darstellung des Objekts."
          },
          "multiname": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
            },
            "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
          },
          "kurzname": {
            "type": "string",
            "description": "Wenn es einen abgekürzten Namen gibt, wird dieser hier zurückgegeben. Ansonsten wird der normale Name zurückgegeben."
          },
          "archivierungTimestamp": {
            "type": "string",
            "description": "Wenn dieses Objekt archiviert ist, ist dieses Element vorhanden und markiert den Archivierungszeitpunkt. Es gibt auch Objekte, die generell nicht archivierbar sind.",
            "format": "date-time"
          },
          "beschreibung": {
            "type": "string"
          },
          "langnameKurzversionImKontext": {
            "type": "string"
          },
          "nichttrivialeKategorie": {
            "type": "boolean"
          },
          "nichttrivialeVariante": {
            "type": "boolean"
          },
          "variantenList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EEntity"
            }
          },
          "kategorie": {
            "$ref": "#/components/schemas/EEntity"
          }
        }
      },
      "ESemester": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minimum": 1,
            "type": "integer",
            "description": "Datenbank-ID in Moses",
            "format": "int32"
          },
          "eidFromImport": {
            "type": "string",
            "description": "Extern-ID, wird beim Import aus anderen Systemen gesetzt. Muss keine Zahl sein, da intern als Zeichenkette gespeichert."
          },
          "name": {
            "type": "string",
            "description": "Name: Beste menschenlesbare Darstellung des Objekts."
          },
          "multiname": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
            },
            "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
          },
          "kurzname": {
            "type": "string",
            "description": "Wenn es einen abgekürzten Namen gibt, wird dieser hier zurückgegeben. Ansonsten wird der normale Name zurückgegeben."
          },
          "archivierungTimestamp": {
            "type": "string",
            "description": "Wenn dieses Objekt archiviert ist, ist dieses Element vorhanden und markiert den Archivierungszeitpunkt. Es gibt auch Objekte, die generell nicht archivierbar sind.",
            "format": "date-time"
          },
          "startDate": {
            "type": "string",
            "format": "date"
          },
          "endDate": {
            "type": "string",
            "format": "date"
          },
          "vorlesungszeit": {
            "$ref": "#/components/schemas/EEmbeddedDateInterval"
          },
          "semesterTyp": {
            "type": "string",
            "enum": [
              "WINTER",
              "SOMMER"
            ]
          }
        }
      },
      "ESpacingType": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minimum": 1,
            "type": "integer",
            "description": "Datenbank-ID in Moses",
            "format": "int32"
          },
          "eidFromImport": {
            "type": "string",
            "description": "Extern-ID, wird beim Import aus anderen Systemen gesetzt. Muss keine Zahl sein, da intern als Zeichenkette gespeichert."
          },
          "name": {
            "type": "string",
            "description": "Name: Beste menschenlesbare Darstellung des Objekts."
          },
          "multiname": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
            },
            "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
          },
          "kurzname": {
            "type": "string",
            "description": "Wenn es einen abgekürzten Namen gibt, wird dieser hier zurückgegeben. Ansonsten wird der normale Name zurückgegeben."
          },
          "archivierungTimestamp": {
            "type": "string",
            "description": "Wenn dieses Objekt archiviert ist, ist dieses Element vorhanden und markiert den Archivierungszeitpunkt. Es gibt auch Objekte, die generell nicht archivierbar sind.",
            "format": "date-time"
          },
          "standardFactor": {
            "type": "number",
            "format": "double"
          },
          "amountOfSeats": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ETermingruppe": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minimum": 1,
            "type": "integer",
            "description": "Datenbank-ID in Moses",
            "format": "int32"
          },
          "eidFromImport": {
            "type": "string",
            "description": "Extern-ID, wird beim Import aus anderen Systemen gesetzt. Muss keine Zahl sein, da intern als Zeichenkette gespeichert."
          },
          "name": {
            "type": "string",
            "description": "Name: Beste menschenlesbare Darstellung des Objekts."
          },
          "multiname": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
            },
            "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
          },
          "kurzname": {
            "type": "string",
            "description": "Wenn es einen abgekürzten Namen gibt, wird dieser hier zurückgegeben. Ansonsten wird der normale Name zurückgegeben."
          },
          "archivierungTimestamp": {
            "type": "string",
            "description": "Wenn dieses Objekt archiviert ist, ist dieses Element vorhanden und markiert den Archivierungszeitpunkt. Es gibt auch Objekte, die generell nicht archivierbar sind.",
            "format": "date-time"
          },
          "anzahlStunden": {
            "type": "integer",
            "format": "int32"
          },
          "veranstaltungsplanung": {
            "$ref": "#/components/schemas/EVeranstaltungsplanung"
          },
          "vplGruppeList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EEntity"
            }
          },
          "dozierenden": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EEntity"
            }
          }
        }
      },
      "ETimeInterval": {
        "type": "object",
        "properties": {
          "startTime": {
            "$ref": "#/components/schemas/LocalTime"
          },
          "endTime": {
            "$ref": "#/components/schemas/LocalTime"
          }
        }
      },
      "EVeranstaltungsplanung": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minimum": 1,
            "type": "integer",
            "description": "Datenbank-ID in Moses",
            "format": "int32"
          },
          "eidFromImport": {
            "type": "string",
            "description": "Extern-ID, wird beim Import aus anderen Systemen gesetzt. Muss keine Zahl sein, da intern als Zeichenkette gespeichert."
          },
          "name": {
            "type": "string",
            "description": "Name: Beste menschenlesbare Darstellung des Objekts."
          },
          "multiname": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
            },
            "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
          },
          "kurzname": {
            "type": "string",
            "description": "Wenn es einen abgekürzten Namen gibt, wird dieser hier zurückgegeben. Ansonsten wird der normale Name zurückgegeben."
          },
          "archivierungTimestamp": {
            "type": "string",
            "description": "Wenn dieses Objekt archiviert ist, ist dieses Element vorhanden und markiert den Archivierungszeitpunkt. Es gibt auch Objekte, die generell nicht archivierbar sind.",
            "format": "date-time"
          },
          "lehrveranstaltung": {
            "$ref": "#/components/schemas/ELehrveranstaltung"
          }
        }
      },
      "ELlpBuchung": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Konstruierte ID der Buchung für die LLP"
          },
          "moses_id": {
            "type": "integer",
            "description": "Datenbank-ID der Buchung in Moses",
            "format": "int32"
          },
          "lve_nummer": {
            "type": "string",
            "description": "Nummer der LV-Einheit"
          },
          "semester": {
            "type": "string",
            "description": "EID des Semesters"
          },
          "start": {
            "type": "string",
            "description": "ISO-Zeitstempel des Beginns der Buchung",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "description": "ISO-Zeitstempel des Endes der Buchung",
            "format": "date-time"
          },
          "feiertag": {
            "type": "boolean",
            "description": "Liegt die Buchung auf einem Feiertag?"
          },
          "pausendauer": {
            "type": "integer",
            "description": "Pausendauer in Minuten",
            "format": "int32"
          },
          "gruppe": {
            "type": "string",
            "description": "Gruppe der Buchung (mit LLP-Umformungen des Namens)"
          },
          "raumgruppeEids": {
            "type": "array",
            "description": "Liste der EIDs der Raumgruppen (zusammengesetzte Räume haben hier ihre eigene ID)",
            "items": {
              "type": "string",
              "description": "Liste der EIDs der Raumgruppen (zusammengesetzte Räume haben hier ihre eigene ID)"
            }
          },
          "raumEids": {
            "type": "array",
            "description": "Liste der EIDs der Räume (zusammengesetzte Räume haben hier ihre eigene ID)",
            "items": {
              "type": "string",
              "description": "Liste der EIDs der Räume (zusammengesetzte Räume haben hier ihre eigene ID)"
            }
          },
          "dozent_list": {
            "type": "array",
            "description": "Liste der EIDs der Dozierenden",
            "items": {
              "type": "string",
              "description": "Liste der EIDs der Dozierenden"
            }
          },
          "campus": {
            "type": "string",
            "description": "Kurznamen der Campusse, verkettet mit \u0027, \u0027"
          },
          "organisationseinheit_list": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Object-Map der Organisationseinheiten z.B. {\"oe0\":\"\u003ceid0\u003e\", \"oe1\":\"\u003ceid1\u003e\"}"
            },
            "description": "Object-Map der Organisationseinheiten z.B. {\"oe0\":\"\u003ceid0\u003e\", \"oe1\":\"\u003ceid1\u003e\"}"
          }
        }
      },
      "EPerson": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minimum": 1,
            "type": "integer",
            "description": "Datenbank-ID in Moses",
            "format": "int32"
          },
          "eidFromImport": {
            "type": "string",
            "description": "Extern-ID, wird beim Import aus anderen Systemen gesetzt. Muss keine Zahl sein, da intern als Zeichenkette gespeichert."
          },
          "name": {
            "type": "string",
            "description": "Name: Beste menschenlesbare Darstellung des Objekts."
          },
          "multiname": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
            },
            "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
          },
          "kurzname": {
            "type": "string",
            "description": "Wenn es einen abgekürzten Namen gibt, wird dieser hier zurückgegeben. Ansonsten wird der normale Name zurückgegeben."
          },
          "archivierungTimestamp": {
            "type": "string",
            "description": "Wenn dieses Objekt archiviert ist, ist dieses Element vorhanden und markiert den Archivierungszeitpunkt. Es gibt auch Objekte, die generell nicht archivierbar sind.",
            "format": "date-time"
          },
          "ordnungsmerkmal": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "matrikelnummer": {
            "type": "string"
          },
          "benutzername": {
            "type": "string"
          },
          "vorname": {
            "type": "string"
          },
          "nachname": {
            "type": "string"
          },
          "geburtsdatum": {
            "type": "string",
            "format": "date"
          },
          "email": {
            "type": "string"
          },
          "studierend": {
            "type": "boolean"
          },
          "lehrend": {
            "type": "boolean"
          },
          "verwaltend": {
            "type": "boolean"
          },
          "externerDozent": {
            "type": "boolean"
          },
          "professor": {
            "type": "boolean"
          },
          "organisationseinheit": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EEntity"
            }
          },
          "geschlecht": {
            "type": "string",
            "enum": [
              "MALE",
              "FEMALE",
              "OTHER",
              "DIVERS"
            ]
          },
          "titel": {
            "$ref": "#/components/schemas/EEntity"
          },
          "qualifikation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EEntity"
            }
          },
          "adresse": {
            "type": "string"
          }
        }
      },
      "ECampus": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minimum": 1,
            "type": "integer",
            "description": "Datenbank-ID in Moses",
            "format": "int32"
          },
          "eidFromImport": {
            "type": "string",
            "description": "Extern-ID, wird beim Import aus anderen Systemen gesetzt. Muss keine Zahl sein, da intern als Zeichenkette gespeichert."
          },
          "name": {
            "type": "string",
            "description": "Name: Beste menschenlesbare Darstellung des Objekts."
          },
          "multiname": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
            },
            "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
          },
          "kurzname": {
            "type": "string",
            "description": "Wenn es einen abgekürzten Namen gibt, wird dieser hier zurückgegeben. Ansonsten wird der normale Name zurückgegeben."
          },
          "archivierungTimestamp": {
            "type": "string",
            "description": "Wenn dieses Objekt archiviert ist, ist dieses Element vorhanden und markiert den Archivierungszeitpunkt. Es gibt auch Objekte, die generell nicht archivierbar sind.",
            "format": "date-time"
          },
          "gebaeudeList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EGebaeude"
            }
          },
          "digital": {
            "type": "boolean"
          }
        }
      },
      "EGebaeude": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minimum": 1,
            "type": "integer",
            "description": "Datenbank-ID in Moses",
            "format": "int32"
          },
          "eidFromImport": {
            "type": "string",
            "description": "Extern-ID, wird beim Import aus anderen Systemen gesetzt. Muss keine Zahl sein, da intern als Zeichenkette gespeichert."
          },
          "name": {
            "type": "string",
            "description": "Name: Beste menschenlesbare Darstellung des Objekts."
          },
          "multiname": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
            },
            "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
          },
          "kurzname": {
            "type": "string",
            "description": "Wenn es einen abgekürzten Namen gibt, wird dieser hier zurückgegeben. Ansonsten wird der normale Name zurückgegeben."
          },
          "archivierungTimestamp": {
            "type": "string",
            "description": "Wenn dieses Objekt archiviert ist, ist dieses Element vorhanden und markiert den Archivierungszeitpunkt. Es gibt auch Objekte, die generell nicht archivierbar sind.",
            "format": "date-time"
          },
          "adresse": {
            "type": "string"
          },
          "adresseInline": {
            "type": "string"
          },
          "oeffnungszeiten": {
            "$ref": "#/components/schemas/ETimeInterval"
          },
          "raumList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EEntity"
            }
          },
          "campus": {
            "$ref": "#/components/schemas/EEntity"
          }
        }
      },
      "EMetakursGruppeMetakurs": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minimum": 1,
            "type": "integer",
            "description": "Datenbank-ID in Moses",
            "format": "int32"
          },
          "eidFromImport": {
            "type": "string",
            "description": "Extern-ID, wird beim Import aus anderen Systemen gesetzt. Muss keine Zahl sein, da intern als Zeichenkette gespeichert."
          },
          "name": {
            "type": "string",
            "description": "Name: Beste menschenlesbare Darstellung des Objekts."
          },
          "multiname": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
            },
            "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
          },
          "kurzname": {
            "type": "string",
            "description": "Wenn es einen abgekürzten Namen gibt, wird dieser hier zurückgegeben. Ansonsten wird der normale Name zurückgegeben."
          },
          "archivierungTimestamp": {
            "type": "string",
            "description": "Wenn dieses Objekt archiviert ist, ist dieses Element vorhanden und markiert den Archivierungszeitpunkt. Es gibt auch Objekte, die generell nicht archivierbar sind.",
            "format": "date-time"
          },
          "pflichttyp": {
            "type": "string",
            "enum": [
              "PFLICHT",
              "WAHLPFLICHT",
              "WAHL"
            ]
          },
          "lvVorlage": {
            "$ref": "#/components/schemas/EEntity"
          },
          "metakursGruppe": {
            "$ref": "#/components/schemas/EEntity"
          }
        }
      },
      "EMetakursPlanEintrag": {
        "required": [
          "fachsemester",
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minimum": 1,
            "type": "integer",
            "description": "Datenbank-ID in Moses",
            "format": "int32"
          },
          "eidFromImport": {
            "type": "string",
            "description": "Extern-ID, wird beim Import aus anderen Systemen gesetzt. Muss keine Zahl sein, da intern als Zeichenkette gespeichert."
          },
          "name": {
            "type": "string",
            "description": "Name: Beste menschenlesbare Darstellung des Objekts."
          },
          "multiname": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
            },
            "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
          },
          "kurzname": {
            "type": "string",
            "description": "Wenn es einen abgekürzten Namen gibt, wird dieser hier zurückgegeben. Ansonsten wird der normale Name zurückgegeben."
          },
          "archivierungTimestamp": {
            "type": "string",
            "description": "Wenn dieses Objekt archiviert ist, ist dieses Element vorhanden und markiert den Archivierungszeitpunkt. Es gibt auch Objekte, die generell nicht archivierbar sind.",
            "format": "date-time"
          },
          "lvVorlage": {
            "$ref": "#/components/schemas/EEntity"
          },
          "metakursGruppe": {
            "$ref": "#/components/schemas/EEntity"
          },
          "semesterTyp": {
            "type": "string",
            "enum": [
              "WINTER",
              "SOMMER"
            ]
          },
          "fachsemester": {
            "type": "integer",
            "format": "int32"
          },
          "teilnahmeQuote": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "EStudiengang": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minimum": 1,
            "type": "integer",
            "description": "Datenbank-ID in Moses",
            "format": "int32"
          },
          "eidFromImport": {
            "type": "string",
            "description": "Extern-ID, wird beim Import aus anderen Systemen gesetzt. Muss keine Zahl sein, da intern als Zeichenkette gespeichert."
          },
          "name": {
            "type": "string",
            "description": "Name: Beste menschenlesbare Darstellung des Objekts."
          },
          "multiname": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
            },
            "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
          },
          "kurzname": {
            "type": "string",
            "description": "Wenn es einen abgekürzten Namen gibt, wird dieser hier zurückgegeben. Ansonsten wird der normale Name zurückgegeben."
          },
          "archivierungTimestamp": {
            "type": "string",
            "description": "Wenn dieses Objekt archiviert ist, ist dieses Element vorhanden und markiert den Archivierungszeitpunkt. Es gibt auch Objekte, die generell nicht archivierbar sind.",
            "format": "date-time"
          },
          "description": {
            "type": "string"
          },
          "link": {
            "type": "string"
          },
          "visible": {
            "type": "boolean"
          },
          "studiengangart": {
            "$ref": "#/components/schemas/EEntity"
          },
          "makroturnus": {
            "$ref": "#/components/schemas/EEntity"
          },
          "organisationseinheit": {
            "$ref": "#/components/schemas/EEntity"
          },
          "stupoList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EEntity"
            }
          },
          "studiengangTitelList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EStudiengangTitel"
            }
          }
        }
      },
      "EStudiengangTitel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minimum": 1,
            "type": "integer",
            "description": "Datenbank-ID in Moses",
            "format": "int32"
          },
          "eidFromImport": {
            "type": "string",
            "description": "Extern-ID, wird beim Import aus anderen Systemen gesetzt. Muss keine Zahl sein, da intern als Zeichenkette gespeichert."
          },
          "name": {
            "type": "string",
            "description": "Name: Beste menschenlesbare Darstellung des Objekts."
          },
          "multiname": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
            },
            "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
          },
          "kurzname": {
            "type": "string",
            "description": "Wenn es einen abgekürzten Namen gibt, wird dieser hier zurückgegeben. Ansonsten wird der normale Name zurückgegeben."
          },
          "archivierungTimestamp": {
            "type": "string",
            "description": "Wenn dieses Objekt archiviert ist, ist dieses Element vorhanden und markiert den Archivierungszeitpunkt. Es gibt auch Objekte, die generell nicht archivierbar sind.",
            "format": "date-time"
          },
          "sprache": {
            "type": "string"
          },
          "titel": {
            "type": "string"
          },
          "kurztitel": {
            "type": "string"
          },
          "standard": {
            "type": "boolean"
          },
          "studiengang": {
            "$ref": "#/components/schemas/EEntity"
          }
        }
      },
      "EStupo": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minimum": 1,
            "type": "integer",
            "description": "Datenbank-ID in Moses",
            "format": "int32"
          },
          "eidFromImport": {
            "type": "string",
            "description": "Extern-ID, wird beim Import aus anderen Systemen gesetzt. Muss keine Zahl sein, da intern als Zeichenkette gespeichert."
          },
          "name": {
            "type": "string",
            "description": "Name: Beste menschenlesbare Darstellung des Objekts."
          },
          "multiname": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
            },
            "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
          },
          "kurzname": {
            "type": "string",
            "description": "Wenn es einen abgekürzten Namen gibt, wird dieser hier zurückgegeben. Ansonsten wird der normale Name zurückgegeben."
          },
          "archivierungTimestamp": {
            "type": "string",
            "description": "Wenn dieses Objekt archiviert ist, ist dieses Element vorhanden und markiert den Archivierungszeitpunkt. Es gibt auch Objekte, die generell nicht archivierbar sind.",
            "format": "date-time"
          },
          "ausgelaufen": {
            "type": "boolean"
          },
          "ausland": {
            "type": "string"
          },
          "beschreibung": {
            "type": "string"
          },
          "gueltigkeitStartdatum": {
            "type": "string",
            "format": "date"
          },
          "inhalt": {
            "type": "string"
          },
          "jahr": {
            "type": "integer",
            "format": "int32"
          },
          "letztesEinschreibesemester": {
            "$ref": "#/components/schemas/EEntity"
          },
          "kompetenzen": {
            "type": "string"
          },
          "kontrolliert": {
            "type": "boolean"
          },
          "leistungspunkte": {
            "type": "integer",
            "format": "int32"
          },
          "numerusclausus": {
            "type": "boolean"
          },
          "perspektiven": {
            "type": "string"
          },
          "praktika": {
            "type": "string"
          },
          "pruefungsordnungURL": {
            "type": "string"
          },
          "regelstudienzeit": {
            "type": "integer",
            "format": "int32"
          },
          "studienordnungURL": {
            "type": "string"
          },
          "studiengang": {
            "$ref": "#/components/schemas/EEntity"
          },
          "studiengangsstruktur": {
            "$ref": "#/components/schemas/EEntity"
          },
          "typkuerzel": {
            "type": "string"
          },
          "typname": {
            "type": "string"
          },
          "unterrichtssprache": {
            "type": "string"
          },
          "verlauf": {
            "type": "string"
          },
          "vertiefungsrichtungList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EEntity"
            }
          },
          "visible": {
            "type": "boolean"
          },
          "voraussetzungen": {
            "type": "string"
          },
          "zusatzinfos": {
            "type": "string"
          }
        }
      },
      "EVertiefungsrichtung": {
        "required": [
          "id",
          "kuerzel",
          "stupo"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minimum": 1,
            "type": "integer",
            "description": "Datenbank-ID in Moses",
            "format": "int32"
          },
          "eidFromImport": {
            "type": "string",
            "description": "Extern-ID, wird beim Import aus anderen Systemen gesetzt. Muss keine Zahl sein, da intern als Zeichenkette gespeichert."
          },
          "name": {
            "type": "string",
            "description": "Name: Beste menschenlesbare Darstellung des Objekts."
          },
          "multiname": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
            },
            "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
          },
          "kurzname": {
            "type": "string",
            "description": "Wenn es einen abgekürzten Namen gibt, wird dieser hier zurückgegeben. Ansonsten wird der normale Name zurückgegeben."
          },
          "archivierungTimestamp": {
            "type": "string",
            "description": "Wenn dieses Objekt archiviert ist, ist dieses Element vorhanden und markiert den Archivierungszeitpunkt. Es gibt auch Objekte, die generell nicht archivierbar sind.",
            "format": "date-time"
          },
          "kuerzel": {
            "type": "string"
          },
          "teilnahmeQuote": {
            "type": "integer",
            "format": "int32"
          },
          "stupo": {
            "$ref": "#/components/schemas/EEntity"
          },
          "studiumList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EEntity"
            }
          },
          "klausurkriterienList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EEntity"
            }
          }
        }
      },
      "EVerwaltungseinheit": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minimum": 1,
            "type": "integer",
            "description": "Datenbank-ID in Moses",
            "format": "int32"
          },
          "eidFromImport": {
            "type": "string",
            "description": "Extern-ID, wird beim Import aus anderen Systemen gesetzt. Muss keine Zahl sein, da intern als Zeichenkette gespeichert."
          },
          "name": {
            "type": "string",
            "description": "Name: Beste menschenlesbare Darstellung des Objekts."
          },
          "multiname": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
            },
            "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
          },
          "kurzname": {
            "type": "string",
            "description": "Wenn es einen abgekürzten Namen gibt, wird dieser hier zurückgegeben. Ansonsten wird der normale Name zurückgegeben."
          },
          "archivierungTimestamp": {
            "type": "string",
            "description": "Wenn dieses Objekt archiviert ist, ist dieses Element vorhanden und markiert den Archivierungszeitpunkt. Es gibt auch Objekte, die generell nicht archivierbar sind.",
            "format": "date-time"
          },
          "oeTyp": {
            "$ref": "#/components/schemas/EEntity"
          }
        }
      },
      "EDauer": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minimum": 1,
            "type": "integer",
            "description": "Datenbank-ID in Moses",
            "format": "int32"
          },
          "eidFromImport": {
            "type": "string",
            "description": "Extern-ID, wird beim Import aus anderen Systemen gesetzt. Muss keine Zahl sein, da intern als Zeichenkette gespeichert."
          },
          "name": {
            "type": "string",
            "description": "Name: Beste menschenlesbare Darstellung des Objekts."
          },
          "multiname": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
            },
            "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
          },
          "kurzname": {
            "type": "string",
            "description": "Wenn es einen abgekürzten Namen gibt, wird dieser hier zurückgegeben. Ansonsten wird der normale Name zurückgegeben."
          },
          "archivierungTimestamp": {
            "type": "string",
            "description": "Wenn dieses Objekt archiviert ist, ist dieses Element vorhanden und markiert den Archivierungszeitpunkt. Es gibt auch Objekte, die generell nicht archivierbar sind.",
            "format": "date-time"
          },
          "minuten": {
            "type": "integer",
            "format": "int32"
          },
          "sws": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ECalPlanung": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minimum": 1,
            "type": "integer",
            "description": "Datenbank-ID in Moses",
            "format": "int32"
          },
          "eidFromImport": {
            "type": "string",
            "description": "Extern-ID, wird beim Import aus anderen Systemen gesetzt. Muss keine Zahl sein, da intern als Zeichenkette gespeichert."
          },
          "name": {
            "type": "string",
            "description": "Name: Beste menschenlesbare Darstellung des Objekts."
          },
          "multiname": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
            },
            "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
          },
          "kurzname": {
            "type": "string",
            "description": "Wenn es einen abgekürzten Namen gibt, wird dieser hier zurückgegeben. Ansonsten wird der normale Name zurückgegeben."
          },
          "archivierungTimestamp": {
            "type": "string",
            "description": "Wenn dieses Objekt archiviert ist, ist dieses Element vorhanden und markiert den Archivierungszeitpunkt. Es gibt auch Objekte, die generell nicht archivierbar sind.",
            "format": "date-time"
          },
          "lvVorlage": {
            "$ref": "#/components/schemas/ELvVorlage"
          },
          "semester": {
            "$ref": "#/components/schemas/ESemester"
          },
          "calTerminplanungList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ECalTerminplanung"
            }
          }
        }
      },
      "ECalVeranstaltungKplAuto": {
        "required": [
          "buchungen",
          "id",
          "klausurplanung",
          "szenario"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minimum": 1,
            "type": "integer",
            "description": "Datenbank-ID in Moses",
            "format": "int32"
          },
          "eidFromImport": {
            "type": "string",
            "description": "Extern-ID, wird beim Import aus anderen Systemen gesetzt. Muss keine Zahl sein, da intern als Zeichenkette gespeichert."
          },
          "name": {
            "type": "string",
            "description": "Name: Beste menschenlesbare Darstellung des Objekts."
          },
          "multiname": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
            },
            "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
          },
          "kurzname": {
            "type": "string",
            "description": "Wenn es einen abgekürzten Namen gibt, wird dieser hier zurückgegeben. Ansonsten wird der normale Name zurückgegeben."
          },
          "archivierungTimestamp": {
            "type": "string",
            "description": "Wenn dieses Objekt archiviert ist, ist dieses Element vorhanden und markiert den Archivierungszeitpunkt. Es gibt auch Objekte, die generell nicht archivierbar sind.",
            "format": "date-time"
          },
          "szenario": {
            "$ref": "#/components/schemas/EEntity"
          },
          "klausurplanung": {
            "$ref": "#/components/schemas/EKlausurplanung"
          },
          "buchungen": {
            "type": "array",
            "description": "Liste von Buchungen. Zur Zeit ist genau eine Buchung enthalten (die unter Umständen mehrere Räume bucht). Möglicherweise sind in Zukunft auch mehrere Buchungen möglich.",
            "items": {
              "$ref": "#/components/schemas/EKplBuchung"
            }
          }
        }
      },
      "EKlausurplanung": {
        "required": [
          "dauer",
          "id",
          "kurs",
          "lehrveranstaltung",
          "nachbereitungszeit",
          "oe",
          "vorbereitungszeit"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minimum": 1,
            "type": "integer",
            "description": "Datenbank-ID in Moses",
            "format": "int32"
          },
          "eidFromImport": {
            "type": "string",
            "description": "Extern-ID, wird beim Import aus anderen Systemen gesetzt. Muss keine Zahl sein, da intern als Zeichenkette gespeichert."
          },
          "name": {
            "type": "string",
            "description": "Name: Beste menschenlesbare Darstellung des Objekts."
          },
          "multiname": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
            },
            "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
          },
          "kurzname": {
            "type": "string",
            "description": "Wenn es einen abgekürzten Namen gibt, wird dieser hier zurückgegeben. Ansonsten wird der normale Name zurückgegeben."
          },
          "archivierungTimestamp": {
            "type": "string",
            "description": "Wenn dieses Objekt archiviert ist, ist dieses Element vorhanden und markiert den Archivierungszeitpunkt. Es gibt auch Objekte, die generell nicht archivierbar sind.",
            "format": "date-time"
          },
          "lehrveranstaltung": {
            "$ref": "#/components/schemas/EEntity"
          },
          "kurs": {
            "$ref": "#/components/schemas/EEntity"
          },
          "oe": {
            "$ref": "#/components/schemas/EEntity"
          },
          "terminart": {
            "$ref": "#/components/schemas/EEntity"
          },
          "vorbereitungszeit": {
            "type": "integer",
            "description": "Vorbereitungszeit (Raumreservierung vor der eigentlichen Prüfung) in Minuten.",
            "format": "int32",
            "default": 0
          },
          "nachbereitungszeit": {
            "type": "integer",
            "description": "Nachbereitungszeit (Raumreservierung nach der eigentlichen Prüfung in Minuten.",
            "format": "int32",
            "default": 0
          },
          "dauer": {
            "type": "integer",
            "description": "Prüfungsdauer der eigentlichen Prüfung in Minuten.",
            "format": "int32"
          },
          "onlineMode": {
            "type": "string",
            "description": "Arte der Prüfung -z.B. Klassisch, Online, Online Remote"
          }
        }
      },
      "EKplBuchung": {
        "required": [
          "endpoint",
          "id",
          "startpoint"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minimum": 1,
            "type": "integer",
            "description": "Datenbank-ID in Moses",
            "format": "int32"
          },
          "eidFromImport": {
            "type": "string",
            "description": "Extern-ID, wird beim Import aus anderen Systemen gesetzt. Muss keine Zahl sein, da intern als Zeichenkette gespeichert."
          },
          "name": {
            "type": "string",
            "description": "Name: Beste menschenlesbare Darstellung des Objekts."
          },
          "multiname": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
            },
            "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
          },
          "kurzname": {
            "type": "string",
            "description": "Wenn es einen abgekürzten Namen gibt, wird dieser hier zurückgegeben. Ansonsten wird der normale Name zurückgegeben."
          },
          "archivierungTimestamp": {
            "type": "string",
            "description": "Wenn dieses Objekt archiviert ist, ist dieses Element vorhanden und markiert den Archivierungszeitpunkt. Es gibt auch Objekte, die generell nicht archivierbar sind.",
            "format": "date-time"
          },
          "raumList": {
            "type": "array",
            "description": "Gebuchte Räume, kann auch eine leere Liste sein.",
            "items": {
              "$ref": "#/components/schemas/EEntity"
            }
          },
          "startpoint": {
            "type": "string",
            "description": "Startzeitpunkt der Buchung.",
            "format": "date-time"
          },
          "endpoint": {
            "type": "string",
            "description": "Endzeitpunkt der Buchung.",
            "format": "date-time"
          }
        },
        "description": "Liste von Buchungen. Zur Zeit ist genau eine Buchung enthalten (die unter Umständen mehrere Räume bucht). Möglicherweise sind in Zukunft auch mehrere Buchungen möglich."
      },
      "EKlausurplanungPeriode": {
        "required": [
          "id",
          "semester"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minimum": 1,
            "type": "integer",
            "description": "Datenbank-ID in Moses",
            "format": "int32"
          },
          "eidFromImport": {
            "type": "string",
            "description": "Extern-ID, wird beim Import aus anderen Systemen gesetzt. Muss keine Zahl sein, da intern als Zeichenkette gespeichert."
          },
          "name": {
            "type": "string",
            "description": "Name: Beste menschenlesbare Darstellung des Objekts."
          },
          "multiname": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
            },
            "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
          },
          "kurzname": {
            "type": "string",
            "description": "Wenn es einen abgekürzten Namen gibt, wird dieser hier zurückgegeben. Ansonsten wird der normale Name zurückgegeben."
          },
          "archivierungTimestamp": {
            "type": "string",
            "description": "Wenn dieses Objekt archiviert ist, ist dieses Element vorhanden und markiert den Archivierungszeitpunkt. Es gibt auch Objekte, die generell nicht archivierbar sind.",
            "format": "date-time"
          },
          "semester": {
            "$ref": "#/components/schemas/EEntity"
          }
        }
      },
      "EKlausurplanungSzenario": {
        "required": [
          "id",
          "semester",
          "veroeffentlicht"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minimum": 1,
            "type": "integer",
            "description": "Datenbank-ID in Moses",
            "format": "int32"
          },
          "eidFromImport": {
            "type": "string",
            "description": "Extern-ID, wird beim Import aus anderen Systemen gesetzt. Muss keine Zahl sein, da intern als Zeichenkette gespeichert."
          },
          "name": {
            "type": "string",
            "description": "Name: Beste menschenlesbare Darstellung des Objekts."
          },
          "multiname": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
            },
            "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
          },
          "kurzname": {
            "type": "string",
            "description": "Wenn es einen abgekürzten Namen gibt, wird dieser hier zurückgegeben. Ansonsten wird der normale Name zurückgegeben."
          },
          "archivierungTimestamp": {
            "type": "string",
            "description": "Wenn dieses Objekt archiviert ist, ist dieses Element vorhanden und markiert den Archivierungszeitpunkt. Es gibt auch Objekte, die generell nicht archivierbar sind.",
            "format": "date-time"
          },
          "semester": {
            "$ref": "#/components/schemas/EEntity"
          },
          "veroeffentlicht": {
            "type": "boolean",
            "description": "Es kann nur ein veröffentlichtes Szenario pro Semester geben.",
            "default": false
          }
        }
      },
      "EMengeKlausurplanungConstraint": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minimum": 1,
            "type": "integer",
            "description": "Datenbank-ID in Moses",
            "format": "int32"
          },
          "eidFromImport": {
            "type": "string",
            "description": "Extern-ID, wird beim Import aus anderen Systemen gesetzt. Muss keine Zahl sein, da intern als Zeichenkette gespeichert."
          },
          "name": {
            "type": "string",
            "description": "Name: Beste menschenlesbare Darstellung des Objekts."
          },
          "multiname": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
            },
            "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
          },
          "kurzname": {
            "type": "string",
            "description": "Wenn es einen abgekürzten Namen gibt, wird dieser hier zurückgegeben. Ansonsten wird der normale Name zurückgegeben."
          },
          "archivierungTimestamp": {
            "type": "string",
            "description": "Wenn dieses Objekt archiviert ist, ist dieses Element vorhanden und markiert den Archivierungszeitpunkt. Es gibt auch Objekte, die generell nicht archivierbar sind.",
            "format": "date-time"
          }
        }
      },
      "EPaarKlausurplanungConstraint": {
        "required": [
          "id",
          "semester"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minimum": 1,
            "type": "integer",
            "description": "Datenbank-ID in Moses",
            "format": "int32"
          },
          "eidFromImport": {
            "type": "string",
            "description": "Extern-ID, wird beim Import aus anderen Systemen gesetzt. Muss keine Zahl sein, da intern als Zeichenkette gespeichert."
          },
          "name": {
            "type": "string",
            "description": "Name: Beste menschenlesbare Darstellung des Objekts."
          },
          "multiname": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
            },
            "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
          },
          "kurzname": {
            "type": "string",
            "description": "Wenn es einen abgekürzten Namen gibt, wird dieser hier zurückgegeben. Ansonsten wird der normale Name zurückgegeben."
          },
          "archivierungTimestamp": {
            "type": "string",
            "description": "Wenn dieses Objekt archiviert ist, ist dieses Element vorhanden und markiert den Archivierungszeitpunkt. Es gibt auch Objekte, die generell nicht archivierbar sind.",
            "format": "date-time"
          },
          "semester": {
            "$ref": "#/components/schemas/EEntity"
          }
        }
      },
      "EPaarKlausurplanungConstraintTyp": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minimum": 1,
            "type": "integer",
            "description": "Datenbank-ID in Moses",
            "format": "int32"
          },
          "eidFromImport": {
            "type": "string",
            "description": "Extern-ID, wird beim Import aus anderen Systemen gesetzt. Muss keine Zahl sein, da intern als Zeichenkette gespeichert."
          },
          "name": {
            "type": "string",
            "description": "Name: Beste menschenlesbare Darstellung des Objekts."
          },
          "multiname": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
            },
            "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
          },
          "kurzname": {
            "type": "string",
            "description": "Wenn es einen abgekürzten Namen gibt, wird dieser hier zurückgegeben. Ansonsten wird der normale Name zurückgegeben."
          },
          "archivierungTimestamp": {
            "type": "string",
            "description": "Wenn dieses Objekt archiviert ist, ist dieses Element vorhanden und markiert den Archivierungszeitpunkt. Es gibt auch Objekte, die generell nicht archivierbar sind.",
            "format": "date-time"
          }
        }
      },
      "EBolognamodul": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minimum": 1,
            "type": "integer",
            "description": "Datenbank-ID in Moses",
            "format": "int32"
          },
          "eidFromImport": {
            "type": "string",
            "description": "Extern-ID, wird beim Import aus anderen Systemen gesetzt. Muss keine Zahl sein, da intern als Zeichenkette gespeichert."
          },
          "name": {
            "type": "string",
            "description": "Name: Beste menschenlesbare Darstellung des Objekts."
          },
          "multiname": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
            },
            "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
          },
          "kurzname": {
            "type": "string",
            "description": "Wenn es einen abgekürzten Namen gibt, wird dieser hier zurückgegeben. Ansonsten wird der normale Name zurückgegeben."
          },
          "archivierungTimestamp": {
            "type": "string",
            "description": "Wenn dieses Objekt archiviert ist, ist dieses Element vorhanden und markiert den Archivierungszeitpunkt. Es gibt auch Objekte, die generell nicht archivierbar sind.",
            "format": "date-time"
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "verantwortlicher": {
            "$ref": "#/components/schemas/EEntity"
          },
          "oe": {
            "$ref": "#/components/schemas/EEntity"
          },
          "sekretariat": {
            "$ref": "#/components/schemas/EEntity"
          },
          "ansprechpartner": {
            "$ref": "#/components/schemas/EEntity"
          },
          "email": {
            "type": "string"
          },
          "webseite": {
            "type": "string"
          }
        }
      },
      "EBolognamodulAufwand": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minimum": 1,
            "type": "integer",
            "description": "Datenbank-ID in Moses",
            "format": "int32"
          },
          "eidFromImport": {
            "type": "string",
            "description": "Extern-ID, wird beim Import aus anderen Systemen gesetzt. Muss keine Zahl sein, da intern als Zeichenkette gespeichert."
          },
          "name": {
            "type": "string",
            "description": "Name: Beste menschenlesbare Darstellung des Objekts."
          },
          "multiname": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
            },
            "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
          },
          "kurzname": {
            "type": "string",
            "description": "Wenn es einen abgekürzten Namen gibt, wird dieser hier zurückgegeben. Ansonsten wird der normale Name zurückgegeben."
          },
          "archivierungTimestamp": {
            "type": "string",
            "description": "Wenn dieses Objekt archiviert ist, ist dieses Element vorhanden und markiert den Archivierungszeitpunkt. Es gibt auch Objekte, die generell nicht archivierbar sind.",
            "format": "date-time"
          },
          "bestandteil": {
            "$ref": "#/components/schemas/EEntity"
          },
          "rang": {
            "type": "integer",
            "format": "int32"
          },
          "multiplikator": {
            "type": "number",
            "format": "double"
          },
          "stunden": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "EBolognamodulBeschreibung": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minimum": 1,
            "type": "integer",
            "description": "Datenbank-ID in Moses",
            "format": "int32"
          },
          "eidFromImport": {
            "type": "string",
            "description": "Extern-ID, wird beim Import aus anderen Systemen gesetzt. Muss keine Zahl sein, da intern als Zeichenkette gespeichert."
          },
          "name": {
            "type": "string",
            "description": "Name: Beste menschenlesbare Darstellung des Objekts."
          },
          "multiname": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
            },
            "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
          },
          "kurzname": {
            "type": "string",
            "description": "Wenn es einen abgekürzten Namen gibt, wird dieser hier zurückgegeben. Ansonsten wird der normale Name zurückgegeben."
          },
          "archivierungTimestamp": {
            "type": "string",
            "description": "Wenn dieses Objekt archiviert ist, ist dieses Element vorhanden und markiert den Archivierungszeitpunkt. Es gibt auch Objekte, die generell nicht archivierbar sind.",
            "format": "date-time"
          },
          "version": {
            "$ref": "#/components/schemas/EEntity"
          },
          "titelList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EEntity"
            }
          },
          "lp": {
            "type": "integer",
            "format": "int32"
          },
          "verantwortlicher": {
            "$ref": "#/components/schemas/EEntity"
          },
          "lernergebnisseDE": {
            "type": "string"
          },
          "lernergebnisseEN": {
            "type": "string"
          },
          "lehrinhalteDE": {
            "type": "string"
          },
          "lehrinhalteEN": {
            "type": "string"
          },
          "bestandteilGruppeList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EEntity"
            }
          },
          "bestandteilList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EEntity"
            }
          },
          "lehrlernformenDE": {
            "type": "string"
          },
          "lehrlernformenEN": {
            "type": "string"
          },
          "lehrveranstaltungsvoraussetzungenDE": {
            "type": "string"
          },
          "lehrveranstaltungsvoraussetzungenEN": {
            "type": "string"
          },
          "pruefungsvoraussetzungsblockList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EEntity"
            }
          },
          "pruefung": {
            "$ref": "#/components/schemas/EEntity"
          },
          "semesterDauer": {
            "type": "integer",
            "format": "int32"
          },
          "makroturnus": {
            "$ref": "#/components/schemas/EEntity"
          },
          "studentenAnzahlBegrenzt": {
            "type": "boolean"
          },
          "studentenAnzahlBegrenzung": {
            "type": "integer",
            "format": "int32"
          },
          "anmeldeformalitaetenDE": {
            "type": "string"
          },
          "anmeldeformalitaetenEN": {
            "type": "string"
          },
          "skriptVorhanden": {
            "type": "boolean"
          },
          "skriptBeschreibungDE": {
            "type": "string"
          },
          "skriptBeschreibungEN": {
            "type": "string"
          },
          "skriptElektronischVorhanden": {
            "type": "boolean"
          },
          "skriptElektronischBeschreibungDE": {
            "type": "string"
          },
          "skriptElektronischBeschreibungEN": {
            "type": "string"
          },
          "literaturList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EEntity"
            }
          },
          "verwendbarkeitsbeschreibungDE": {
            "type": "string"
          },
          "verwendbarkeitsbeschreibungEN": {
            "type": "string"
          },
          "sonstigesDE": {
            "type": "string"
          },
          "sonstigesEN": {
            "type": "string"
          }
        }
      },
      "EBolognamodulBestandteil": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minimum": 1,
            "type": "integer",
            "description": "Datenbank-ID in Moses",
            "format": "int32"
          },
          "eidFromImport": {
            "type": "string",
            "description": "Extern-ID, wird beim Import aus anderen Systemen gesetzt. Muss keine Zahl sein, da intern als Zeichenkette gespeichert."
          },
          "name": {
            "type": "string",
            "description": "Name: Beste menschenlesbare Darstellung des Objekts."
          },
          "multiname": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
            },
            "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
          },
          "kurzname": {
            "type": "string",
            "description": "Wenn es einen abgekürzten Namen gibt, wird dieser hier zurückgegeben. Ansonsten wird der normale Name zurückgegeben."
          },
          "archivierungTimestamp": {
            "type": "string",
            "description": "Wenn dieses Objekt archiviert ist, ist dieses Element vorhanden und markiert den Archivierungszeitpunkt. Es gibt auch Objekte, die generell nicht archivierbar sind.",
            "format": "date-time"
          },
          "bestandteilGruppe": {
            "$ref": "#/components/schemas/EEntity"
          },
          "beschreibung": {
            "$ref": "#/components/schemas/EEntity"
          },
          "rang": {
            "type": "integer",
            "format": "int32"
          },
          "lvVorlage": {
            "$ref": "#/components/schemas/EEntity"
          },
          "lvTitel": {
            "type": "string"
          },
          "lvLehrformat": {
            "$ref": "#/components/schemas/EEntity"
          },
          "lvNummer": {
            "type": "string"
          },
          "lvMakroturnus": {
            "$ref": "#/components/schemas/EEntity"
          },
          "lvSprache": {
            "type": "string"
          },
          "lvSws": {
            "type": "integer",
            "format": "int32"
          },
          "aufwandList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EEntity"
            }
          }
        }
      },
      "EBolognamodulBestandteilGruppe": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minimum": 1,
            "type": "integer",
            "description": "Datenbank-ID in Moses",
            "format": "int32"
          },
          "eidFromImport": {
            "type": "string",
            "description": "Extern-ID, wird beim Import aus anderen Systemen gesetzt. Muss keine Zahl sein, da intern als Zeichenkette gespeichert."
          },
          "name": {
            "type": "string",
            "description": "Name: Beste menschenlesbare Darstellung des Objekts."
          },
          "multiname": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
            },
            "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
          },
          "kurzname": {
            "type": "string",
            "description": "Wenn es einen abgekürzten Namen gibt, wird dieser hier zurückgegeben. Ansonsten wird der normale Name zurückgegeben."
          },
          "archivierungTimestamp": {
            "type": "string",
            "description": "Wenn dieses Objekt archiviert ist, ist dieses Element vorhanden und markiert den Archivierungszeitpunkt. Es gibt auch Objekte, die generell nicht archivierbar sind.",
            "format": "date-time"
          },
          "beschreibung": {
            "$ref": "#/components/schemas/EEntity"
          },
          "typ": {
            "type": "string"
          },
          "typNummerMin": {
            "type": "integer",
            "format": "int32"
          },
          "typNummerMax": {
            "type": "integer",
            "format": "int32"
          },
          "bestandteilList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EEntity"
            }
          }
        }
      },
      "EBolognamodulLeistungsnachweis": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minimum": 1,
            "type": "integer",
            "description": "Datenbank-ID in Moses",
            "format": "int32"
          },
          "eidFromImport": {
            "type": "string",
            "description": "Extern-ID, wird beim Import aus anderen Systemen gesetzt. Muss keine Zahl sein, da intern als Zeichenkette gespeichert."
          },
          "name": {
            "type": "string",
            "description": "Name: Beste menschenlesbare Darstellung des Objekts."
          },
          "multiname": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
            },
            "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
          },
          "kurzname": {
            "type": "string",
            "description": "Wenn es einen abgekürzten Namen gibt, wird dieser hier zurückgegeben. Ansonsten wird der normale Name zurückgegeben."
          },
          "archivierungTimestamp": {
            "type": "string",
            "description": "Wenn dieses Objekt archiviert ist, ist dieses Element vorhanden und markiert den Archivierungszeitpunkt. Es gibt auch Objekte, die generell nicht archivierbar sind.",
            "format": "date-time"
          },
          "beschreibung": {
            "type": "string"
          },
          "oe": {
            "$ref": "#/components/schemas/EEntity"
          },
          "qisposId": {
            "type": "integer",
            "format": "int64"
          },
          "voraussetzungList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EEntity"
            }
          }
        }
      },
      "EBolognamodulLiteratur": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minimum": 1,
            "type": "integer",
            "description": "Datenbank-ID in Moses",
            "format": "int32"
          },
          "eidFromImport": {
            "type": "string",
            "description": "Extern-ID, wird beim Import aus anderen Systemen gesetzt. Muss keine Zahl sein, da intern als Zeichenkette gespeichert."
          },
          "name": {
            "type": "string",
            "description": "Name: Beste menschenlesbare Darstellung des Objekts."
          },
          "multiname": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
            },
            "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
          },
          "kurzname": {
            "type": "string",
            "description": "Wenn es einen abgekürzten Namen gibt, wird dieser hier zurückgegeben. Ansonsten wird der normale Name zurückgegeben."
          },
          "archivierungTimestamp": {
            "type": "string",
            "description": "Wenn dieses Objekt archiviert ist, ist dieses Element vorhanden und markiert den Archivierungszeitpunkt. Es gibt auch Objekte, die generell nicht archivierbar sind.",
            "format": "date-time"
          },
          "beschreibung": {
            "$ref": "#/components/schemas/EEntity"
          },
          "rang": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "EBolognamodulPruefer": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minimum": 1,
            "type": "integer",
            "description": "Datenbank-ID in Moses",
            "format": "int32"
          },
          "eidFromImport": {
            "type": "string",
            "description": "Extern-ID, wird beim Import aus anderen Systemen gesetzt. Muss keine Zahl sein, da intern als Zeichenkette gespeichert."
          },
          "name": {
            "type": "string",
            "description": "Name: Beste menschenlesbare Darstellung des Objekts."
          },
          "multiname": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
            },
            "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
          },
          "kurzname": {
            "type": "string",
            "description": "Wenn es einen abgekürzten Namen gibt, wird dieser hier zurückgegeben. Ansonsten wird der normale Name zurückgegeben."
          },
          "archivierungTimestamp": {
            "type": "string",
            "description": "Wenn dieses Objekt archiviert ist, ist dieses Element vorhanden und markiert den Archivierungszeitpunkt. Es gibt auch Objekte, die generell nicht archivierbar sind.",
            "format": "date-time"
          },
          "bolognamodul": {
            "$ref": "#/components/schemas/EEntity"
          },
          "person": {
            "$ref": "#/components/schemas/EEntity"
          },
          "vorname": {
            "type": "string"
          },
          "nachname": {
            "type": "string"
          },
          "geschlecht": {
            "type": "string"
          },
          "titel": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "sekretariat": {
            "type": "string"
          },
          "pruefungsberechtigungList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EEntity"
            }
          }
        }
      },
      "EBolognamodulPruefung": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minimum": 1,
            "type": "integer",
            "description": "Datenbank-ID in Moses",
            "format": "int32"
          },
          "eidFromImport": {
            "type": "string",
            "description": "Extern-ID, wird beim Import aus anderen Systemen gesetzt. Muss keine Zahl sein, da intern als Zeichenkette gespeichert."
          },
          "name": {
            "type": "string",
            "description": "Name: Beste menschenlesbare Darstellung des Objekts."
          },
          "multiname": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
            },
            "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
          },
          "kurzname": {
            "type": "string",
            "description": "Wenn es einen abgekürzten Namen gibt, wird dieser hier zurückgegeben. Ansonsten wird der normale Name zurückgegeben."
          },
          "archivierungTimestamp": {
            "type": "string",
            "description": "Wenn dieses Objekt archiviert ist, ist dieses Element vorhanden und markiert den Archivierungszeitpunkt. Es gibt auch Objekte, die generell nicht archivierbar sind.",
            "format": "date-time"
          },
          "beschreibung": {
            "$ref": "#/components/schemas/EEntity"
          },
          "benotet": {
            "type": "boolean"
          },
          "pruefungsform": {
            "$ref": "#/components/schemas/EEntity"
          },
          "sprache": {
            "type": "string"
          },
          "dauerumfangDE": {
            "type": "string"
          },
          "dauerumfangEN": {
            "type": "string"
          },
          "notenschluessel": {
            "$ref": "#/components/schemas/EEntity"
          },
          "eigenerNotenschluessel": {
            "type": "boolean"
          },
          "unbenotetSchwellenwert": {
            "type": "integer",
            "format": "int32"
          },
          "beschreibungDE": {
            "type": "string"
          },
          "beschreibungEN": {
            "type": "string"
          },
          "portfolioart": {
            "$ref": "#/components/schemas/EEntity"
          },
          "pruefungselementList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EEntity"
            }
          }
        }
      },
      "EBolognamodulPruefungsberechtigung": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minimum": 1,
            "type": "integer",
            "description": "Datenbank-ID in Moses",
            "format": "int32"
          },
          "eidFromImport": {
            "type": "string",
            "description": "Extern-ID, wird beim Import aus anderen Systemen gesetzt. Muss keine Zahl sein, da intern als Zeichenkette gespeichert."
          },
          "name": {
            "type": "string",
            "description": "Name: Beste menschenlesbare Darstellung des Objekts."
          },
          "multiname": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
            },
            "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
          },
          "kurzname": {
            "type": "string",
            "description": "Wenn es einen abgekürzten Namen gibt, wird dieser hier zurückgegeben. Ansonsten wird der normale Name zurückgegeben."
          },
          "archivierungTimestamp": {
            "type": "string",
            "description": "Wenn dieses Objekt archiviert ist, ist dieses Element vorhanden und markiert den Archivierungszeitpunkt. Es gibt auch Objekte, die generell nicht archivierbar sind.",
            "format": "date-time"
          },
          "bolognamodulpruefer": {
            "$ref": "#/components/schemas/EEntity"
          },
          "semesterAb": {
            "$ref": "#/components/schemas/EEntity"
          },
          "semesterBis": {
            "$ref": "#/components/schemas/EEntity"
          },
          "zweitewdh": {
            "type": "boolean"
          }
        }
      },
      "EBolognamodulPruefungselement": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minimum": 1,
            "type": "integer",
            "description": "Datenbank-ID in Moses",
            "format": "int32"
          },
          "eidFromImport": {
            "type": "string",
            "description": "Extern-ID, wird beim Import aus anderen Systemen gesetzt. Muss keine Zahl sein, da intern als Zeichenkette gespeichert."
          },
          "name": {
            "type": "string",
            "description": "Name: Beste menschenlesbare Darstellung des Objekts."
          },
          "multiname": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
            },
            "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
          },
          "kurzname": {
            "type": "string",
            "description": "Wenn es einen abgekürzten Namen gibt, wird dieser hier zurückgegeben. Ansonsten wird der normale Name zurückgegeben."
          },
          "archivierungTimestamp": {
            "type": "string",
            "description": "Wenn dieses Objekt archiviert ist, ist dieses Element vorhanden und markiert den Archivierungszeitpunkt. Es gibt auch Objekte, die generell nicht archivierbar sind.",
            "format": "date-time"
          },
          "pruefung": {
            "$ref": "#/components/schemas/EEntity"
          },
          "rang": {
            "type": "integer",
            "format": "int32"
          },
          "kategorie": {
            "$ref": "#/components/schemas/EEntity"
          },
          "dauerumfangDE": {
            "type": "string"
          },
          "dauerumfangEN": {
            "type": "string"
          },
          "gewicht": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "EBolognamodulPruefungselementKategorie": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minimum": 1,
            "type": "integer",
            "description": "Datenbank-ID in Moses",
            "format": "int32"
          },
          "eidFromImport": {
            "type": "string",
            "description": "Extern-ID, wird beim Import aus anderen Systemen gesetzt. Muss keine Zahl sein, da intern als Zeichenkette gespeichert."
          },
          "name": {
            "type": "string",
            "description": "Name: Beste menschenlesbare Darstellung des Objekts."
          },
          "multiname": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
            },
            "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
          },
          "kurzname": {
            "type": "string",
            "description": "Wenn es einen abgekürzten Namen gibt, wird dieser hier zurückgegeben. Ansonsten wird der normale Name zurückgegeben."
          },
          "archivierungTimestamp": {
            "type": "string",
            "description": "Wenn dieses Objekt archiviert ist, ist dieses Element vorhanden und markiert den Archivierungszeitpunkt. Es gibt auch Objekte, die generell nicht archivierbar sind.",
            "format": "date-time"
          }
        }
      },
      "EBolognamodulPruefungsform": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minimum": 1,
            "type": "integer",
            "description": "Datenbank-ID in Moses",
            "format": "int32"
          },
          "eidFromImport": {
            "type": "string",
            "description": "Extern-ID, wird beim Import aus anderen Systemen gesetzt. Muss keine Zahl sein, da intern als Zeichenkette gespeichert."
          },
          "name": {
            "type": "string",
            "description": "Name: Beste menschenlesbare Darstellung des Objekts."
          },
          "multiname": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
            },
            "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
          },
          "kurzname": {
            "type": "string",
            "description": "Wenn es einen abgekürzten Namen gibt, wird dieser hier zurückgegeben. Ansonsten wird der normale Name zurückgegeben."
          },
          "archivierungTimestamp": {
            "type": "string",
            "description": "Wenn dieses Objekt archiviert ist, ist dieses Element vorhanden und markiert den Archivierungszeitpunkt. Es gibt auch Objekte, die generell nicht archivierbar sind.",
            "format": "date-time"
          }
        }
      },
      "EBolognamodulTitel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minimum": 1,
            "type": "integer",
            "description": "Datenbank-ID in Moses",
            "format": "int32"
          },
          "eidFromImport": {
            "type": "string",
            "description": "Extern-ID, wird beim Import aus anderen Systemen gesetzt. Muss keine Zahl sein, da intern als Zeichenkette gespeichert."
          },
          "name": {
            "type": "string",
            "description": "Name: Beste menschenlesbare Darstellung des Objekts."
          },
          "multiname": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
            },
            "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
          },
          "kurzname": {
            "type": "string",
            "description": "Wenn es einen abgekürzten Namen gibt, wird dieser hier zurückgegeben. Ansonsten wird der normale Name zurückgegeben."
          },
          "archivierungTimestamp": {
            "type": "string",
            "description": "Wenn dieses Objekt archiviert ist, ist dieses Element vorhanden und markiert den Archivierungszeitpunkt. Es gibt auch Objekte, die generell nicht archivierbar sind.",
            "format": "date-time"
          },
          "beschreibung": {
            "$ref": "#/components/schemas/EEntity"
          },
          "sprache": {
            "type": "string"
          },
          "standard": {
            "type": "boolean"
          },
          "titel": {
            "type": "string"
          },
          "zeugnistitel": {
            "type": "string"
          }
        }
      },
      "EBolognamodulVersion": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minimum": 1,
            "type": "integer",
            "description": "Datenbank-ID in Moses",
            "format": "int32"
          },
          "eidFromImport": {
            "type": "string",
            "description": "Extern-ID, wird beim Import aus anderen Systemen gesetzt. Muss keine Zahl sein, da intern als Zeichenkette gespeichert."
          },
          "name": {
            "type": "string",
            "description": "Name: Beste menschenlesbare Darstellung des Objekts."
          },
          "multiname": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
            },
            "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
          },
          "kurzname": {
            "type": "string",
            "description": "Wenn es einen abgekürzten Namen gibt, wird dieser hier zurückgegeben. Ansonsten wird der normale Name zurückgegeben."
          },
          "archivierungTimestamp": {
            "type": "string",
            "description": "Wenn dieses Objekt archiviert ist, ist dieses Element vorhanden und markiert den Archivierungszeitpunkt. Es gibt auch Objekte, die generell nicht archivierbar sind.",
            "format": "date-time"
          },
          "bolognamodul": {
            "$ref": "#/components/schemas/EEntity"
          },
          "versionsnummer": {
            "type": "integer",
            "format": "int32"
          },
          "semesterAb": {
            "$ref": "#/components/schemas/EEntity"
          },
          "semesterBis": {
            "$ref": "#/components/schemas/EEntity"
          },
          "bolognamodulBeschreibung": {
            "$ref": "#/components/schemas/EEntity"
          }
        }
      },
      "EPruefungAnmeldung": {
        "required": [
          "anmeldungErstellt",
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minimum": 1,
            "type": "integer",
            "description": "Datenbank-ID in Moses",
            "format": "int32"
          },
          "eidFromImport": {
            "type": "string",
            "description": "Extern-ID, wird beim Import aus anderen Systemen gesetzt. Muss keine Zahl sein, da intern als Zeichenkette gespeichert."
          },
          "name": {
            "type": "string",
            "description": "Name: Beste menschenlesbare Darstellung des Objekts."
          },
          "multiname": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
            },
            "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
          },
          "kurzname": {
            "type": "string",
            "description": "Wenn es einen abgekürzten Namen gibt, wird dieser hier zurückgegeben. Ansonsten wird der normale Name zurückgegeben."
          },
          "archivierungTimestamp": {
            "type": "string",
            "description": "Wenn dieses Objekt archiviert ist, ist dieses Element vorhanden und markiert den Archivierungszeitpunkt. Es gibt auch Objekte, die generell nicht archivierbar sind.",
            "format": "date-time"
          },
          "instanz": {
            "$ref": "#/components/schemas/EEntity"
          },
          "person": {
            "$ref": "#/components/schemas/EEntity"
          },
          "nutzername": {
            "type": "string"
          },
          "matrikelnummer": {
            "type": "string"
          },
          "studiumTyp": {
            "type": "string"
          },
          "studiengang": {
            "$ref": "#/components/schemas/EEntity"
          },
          "stupo": {
            "$ref": "#/components/schemas/EEntity"
          },
          "studiengangsbereichTyp": {
            "type": "string"
          },
          "studiengangsbereich": {
            "$ref": "#/components/schemas/EEntity"
          },
          "anmeldungErstellt": {
            "type": "string",
            "format": "date-time"
          },
          "abmeldungErstellt": {
            "type": "string",
            "format": "date-time"
          },
          "zulassungErstellt": {
            "type": "string",
            "format": "date-time"
          },
          "zulassungStatus": {
            "type": "boolean"
          }
        }
      },
      "EPruefungInstanz": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minimum": 1,
            "type": "integer",
            "description": "Datenbank-ID in Moses",
            "format": "int32"
          },
          "eidFromImport": {
            "type": "string",
            "description": "Extern-ID, wird beim Import aus anderen Systemen gesetzt. Muss keine Zahl sein, da intern als Zeichenkette gespeichert."
          },
          "name": {
            "type": "string",
            "description": "Name: Beste menschenlesbare Darstellung des Objekts."
          },
          "multiname": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
            },
            "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
          },
          "kurzname": {
            "type": "string",
            "description": "Wenn es einen abgekürzten Namen gibt, wird dieser hier zurückgegeben. Ansonsten wird der normale Name zurückgegeben."
          },
          "archivierungTimestamp": {
            "type": "string",
            "description": "Wenn dieses Objekt archiviert ist, ist dieses Element vorhanden und markiert den Archivierungszeitpunkt. Es gibt auch Objekte, die generell nicht archivierbar sind.",
            "format": "date-time"
          },
          "bolognamodul": {
            "$ref": "#/components/schemas/EEntity"
          },
          "bolognamodulversion": {
            "$ref": "#/components/schemas/EEntity"
          },
          "semester": {
            "$ref": "#/components/schemas/EEntity"
          },
          "anmeldefristbeginn": {
            "type": "string",
            "format": "date-time"
          },
          "anmeldefristende": {
            "type": "string",
            "format": "date-time"
          },
          "sichtbarVorAnmeldefrist": {
            "type": "boolean"
          },
          "abmeldefristende": {
            "type": "string",
            "format": "date-time"
          },
          "automatischeZulassung": {
            "type": "boolean"
          }
        }
      },
      "EModulliste": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minimum": 1,
            "type": "integer",
            "description": "Datenbank-ID in Moses",
            "format": "int32"
          },
          "eidFromImport": {
            "type": "string",
            "description": "Extern-ID, wird beim Import aus anderen Systemen gesetzt. Muss keine Zahl sein, da intern als Zeichenkette gespeichert."
          },
          "name": {
            "type": "string",
            "description": "Name: Beste menschenlesbare Darstellung des Objekts."
          },
          "multiname": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
            },
            "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
          },
          "kurzname": {
            "type": "string",
            "description": "Wenn es einen abgekürzten Namen gibt, wird dieser hier zurückgegeben. Ansonsten wird der normale Name zurückgegeben."
          },
          "archivierungTimestamp": {
            "type": "string",
            "description": "Wenn dieses Objekt archiviert ist, ist dieses Element vorhanden und markiert den Archivierungszeitpunkt. Es gibt auch Objekte, die generell nicht archivierbar sind.",
            "format": "date-time"
          },
          "studiengangsabbildung": {
            "$ref": "#/components/schemas/EEntity"
          },
          "semester": {
            "$ref": "#/components/schemas/EEntity"
          },
          "freigabe": {
            "type": "boolean"
          },
          "studiengangsbereichList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EEntity"
            }
          },
          "studiengangszuordnungList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EEntity"
            }
          }
        }
      },
      "EStudiengangsbereich": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minimum": 1,
            "type": "integer",
            "description": "Datenbank-ID in Moses",
            "format": "int32"
          },
          "eidFromImport": {
            "type": "string",
            "description": "Extern-ID, wird beim Import aus anderen Systemen gesetzt. Muss keine Zahl sein, da intern als Zeichenkette gespeichert."
          },
          "name": {
            "type": "string",
            "description": "Name: Beste menschenlesbare Darstellung des Objekts."
          },
          "multiname": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
            },
            "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
          },
          "kurzname": {
            "type": "string",
            "description": "Wenn es einen abgekürzten Namen gibt, wird dieser hier zurückgegeben. Ansonsten wird der normale Name zurückgegeben."
          },
          "archivierungTimestamp": {
            "type": "string",
            "description": "Wenn dieses Objekt archiviert ist, ist dieses Element vorhanden und markiert den Archivierungszeitpunkt. Es gibt auch Objekte, die generell nicht archivierbar sind.",
            "format": "date-time"
          },
          "studiengangsabbildung": {
            "$ref": "#/components/schemas/EEntity"
          },
          "studiengangsbereichstyp": {
            "type": "string"
          },
          "rang": {
            "type": "integer",
            "format": "int32"
          },
          "beschreibung": {
            "type": "string"
          },
          "studienrichtungsbereich": {
            "type": "boolean"
          },
          "vertiefungsrichtung": {
            "$ref": "#/components/schemas/EEntity"
          },
          "studiengangswahlregelList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EEntity"
            }
          },
          "studiengangszuordnungList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EEntity"
            }
          },
          "parent": {
            "$ref": "#/components/schemas/EEntity"
          },
          "childrenList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EEntity"
            }
          }
        }
      },
      "EBolognamodulListenwahlregel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minimum": 1,
            "type": "integer",
            "description": "Datenbank-ID in Moses",
            "format": "int32"
          },
          "eidFromImport": {
            "type": "string",
            "description": "Extern-ID, wird beim Import aus anderen Systemen gesetzt. Muss keine Zahl sein, da intern als Zeichenkette gespeichert."
          },
          "name": {
            "type": "string",
            "description": "Name: Beste menschenlesbare Darstellung des Objekts."
          },
          "multiname": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
            },
            "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
          },
          "kurzname": {
            "type": "string",
            "description": "Wenn es einen abgekürzten Namen gibt, wird dieser hier zurückgegeben. Ansonsten wird der normale Name zurückgegeben."
          },
          "archivierungTimestamp": {
            "type": "string",
            "description": "Wenn dieses Objekt archiviert ist, ist dieses Element vorhanden und markiert den Archivierungszeitpunkt. Es gibt auch Objekte, die generell nicht archivierbar sind.",
            "format": "date-time"
          },
          "bolognamodulListengruppe": {
            "$ref": "#/components/schemas/EEntity"
          },
          "wahlregeltyp": {
            "type": "string"
          },
          "wertmin": {
            "type": "integer",
            "format": "int32"
          },
          "wertmax": {
            "type": "integer",
            "format": "int32"
          },
          "bolognamodulListengruppeList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EEntity"
            }
          }
        }
      },
      "EBolognamodulListenzuordnung": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minimum": 1,
            "type": "integer",
            "description": "Datenbank-ID in Moses",
            "format": "int32"
          },
          "eidFromImport": {
            "type": "string",
            "description": "Extern-ID, wird beim Import aus anderen Systemen gesetzt. Muss keine Zahl sein, da intern als Zeichenkette gespeichert."
          },
          "name": {
            "type": "string",
            "description": "Name: Beste menschenlesbare Darstellung des Objekts."
          },
          "multiname": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
            },
            "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
          },
          "kurzname": {
            "type": "string",
            "description": "Wenn es einen abgekürzten Namen gibt, wird dieser hier zurückgegeben. Ansonsten wird der normale Name zurückgegeben."
          },
          "archivierungTimestamp": {
            "type": "string",
            "description": "Wenn dieses Objekt archiviert ist, ist dieses Element vorhanden und markiert den Archivierungszeitpunkt. Es gibt auch Objekte, die generell nicht archivierbar sind.",
            "format": "date-time"
          },
          "bolognamodulVersion": {
            "$ref": "#/components/schemas/EEntity"
          },
          "bolognamodulListengruppe": {
            "$ref": "#/components/schemas/EEntity"
          },
          "bolognamodulListe": {
            "$ref": "#/components/schemas/EEntity"
          },
          "modultitel": {
            "type": "string"
          },
          "modullp": {
            "type": "integer",
            "format": "int32"
          },
          "modulbenotet": {
            "type": "boolean"
          },
          "makroturnus": {
            "$ref": "#/components/schemas/EEntity"
          },
          "bolognamodulPruefungsform": {
            "$ref": "#/components/schemas/EEntity"
          },
          "modulgewichtung": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "EStudiengangsabbildung": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minimum": 1,
            "type": "integer",
            "description": "Datenbank-ID in Moses",
            "format": "int32"
          },
          "eidFromImport": {
            "type": "string",
            "description": "Extern-ID, wird beim Import aus anderen Systemen gesetzt. Muss keine Zahl sein, da intern als Zeichenkette gespeichert."
          },
          "name": {
            "type": "string",
            "description": "Name: Beste menschenlesbare Darstellung des Objekts."
          },
          "multiname": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
            },
            "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
          },
          "kurzname": {
            "type": "string",
            "description": "Wenn es einen abgekürzten Namen gibt, wird dieser hier zurückgegeben. Ansonsten wird der normale Name zurückgegeben."
          },
          "archivierungTimestamp": {
            "type": "string",
            "description": "Wenn dieses Objekt archiviert ist, ist dieses Element vorhanden und markiert den Archivierungszeitpunkt. Es gibt auch Objekte, die generell nicht archivierbar sind.",
            "format": "date-time"
          },
          "stupo": {
            "$ref": "#/components/schemas/EEntity"
          },
          "bereicheFreigegeben": {
            "type": "boolean"
          },
          "studiengangsbereichList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EEntity"
            }
          },
          "modullisteList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EEntity"
            }
          },
          "bolognamodullisteList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EEntity"
            }
          }
        }
      },
      "EStudiengangsbereichWahlregel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minimum": 1,
            "type": "integer",
            "description": "Datenbank-ID in Moses",
            "format": "int32"
          },
          "eidFromImport": {
            "type": "string",
            "description": "Extern-ID, wird beim Import aus anderen Systemen gesetzt. Muss keine Zahl sein, da intern als Zeichenkette gespeichert."
          },
          "name": {
            "type": "string",
            "description": "Name: Beste menschenlesbare Darstellung des Objekts."
          },
          "multiname": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
            },
            "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
          },
          "kurzname": {
            "type": "string",
            "description": "Wenn es einen abgekürzten Namen gibt, wird dieser hier zurückgegeben. Ansonsten wird der normale Name zurückgegeben."
          },
          "archivierungTimestamp": {
            "type": "string",
            "description": "Wenn dieses Objekt archiviert ist, ist dieses Element vorhanden und markiert den Archivierungszeitpunkt. Es gibt auch Objekte, die generell nicht archivierbar sind.",
            "format": "date-time"
          },
          "studiengangsbereich": {
            "$ref": "#/components/schemas/EEntity"
          },
          "wahlregeltyp": {
            "type": "string"
          },
          "wert": {
            "type": "integer",
            "format": "int32"
          },
          "studiengangsbereichList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EEntity"
            }
          }
        }
      },
      "EStudiengangssteckbrief": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minimum": 1,
            "type": "integer",
            "description": "Datenbank-ID in Moses",
            "format": "int32"
          },
          "eidFromImport": {
            "type": "string",
            "description": "Extern-ID, wird beim Import aus anderen Systemen gesetzt. Muss keine Zahl sein, da intern als Zeichenkette gespeichert."
          },
          "name": {
            "type": "string",
            "description": "Name: Beste menschenlesbare Darstellung des Objekts."
          },
          "multiname": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
            },
            "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
          },
          "kurzname": {
            "type": "string",
            "description": "Wenn es einen abgekürzten Namen gibt, wird dieser hier zurückgegeben. Ansonsten wird der normale Name zurückgegeben."
          },
          "archivierungTimestamp": {
            "type": "string",
            "description": "Wenn dieses Objekt archiviert ist, ist dieses Element vorhanden und markiert den Archivierungszeitpunkt. Es gibt auch Objekte, die generell nicht archivierbar sind.",
            "format": "date-time"
          },
          "studiengang": {
            "$ref": "#/components/schemas/EEntity"
          },
          "stupo": {
            "$ref": "#/components/schemas/EEntity"
          },
          "freigegeben": {
            "type": "boolean"
          },
          "makroturnus": {
            "$ref": "#/components/schemas/EEntity"
          },
          "numerusclausus": {
            "type": "boolean"
          },
          "language": {
            "type": "string"
          },
          "regelstudienzeit": {
            "type": "integer",
            "format": "int32"
          },
          "leistungspunkte": {
            "type": "integer",
            "format": "int32"
          },
          "kurzprofilDE": {
            "type": "string"
          },
          "kurzprofilEN": {
            "type": "string"
          },
          "zulassungsvorausseztungenDE": {
            "type": "string"
          },
          "zulassungsvorausseztungenEN": {
            "type": "string"
          },
          "studienverlaufDE": {
            "type": "string"
          },
          "studienverlaufEN": {
            "type": "string"
          },
          "inhalteDE": {
            "type": "string"
          },
          "inhalteEN": {
            "type": "string"
          },
          "praktikaDE": {
            "type": "string"
          },
          "praktikaEN": {
            "type": "string"
          },
          "auslandsaufenthaltDE": {
            "type": "string"
          },
          "auslandsaufenthaltEN": {
            "type": "string"
          },
          "kompetenzenDE": {
            "type": "string"
          },
          "kompetenzenEN": {
            "type": "string"
          },
          "perspektivenDE": {
            "type": "string"
          },
          "perspektivenEN": {
            "type": "string"
          },
          "zusatzinfosDE": {
            "type": "string"
          },
          "zusatzinfosEN": {
            "type": "string"
          }
        }
      },
      "EStudiengangszuordnung": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minimum": 1,
            "type": "integer",
            "description": "Datenbank-ID in Moses",
            "format": "int32"
          },
          "eidFromImport": {
            "type": "string",
            "description": "Extern-ID, wird beim Import aus anderen Systemen gesetzt. Muss keine Zahl sein, da intern als Zeichenkette gespeichert."
          },
          "name": {
            "type": "string",
            "description": "Name: Beste menschenlesbare Darstellung des Objekts."
          },
          "multiname": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
            },
            "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
          },
          "kurzname": {
            "type": "string",
            "description": "Wenn es einen abgekürzten Namen gibt, wird dieser hier zurückgegeben. Ansonsten wird der normale Name zurückgegeben."
          },
          "archivierungTimestamp": {
            "type": "string",
            "description": "Wenn dieses Objekt archiviert ist, ist dieses Element vorhanden und markiert den Archivierungszeitpunkt. Es gibt auch Objekte, die generell nicht archivierbar sind.",
            "format": "date-time"
          },
          "bolognamodulVersion": {
            "$ref": "#/components/schemas/EEntity"
          },
          "studiengangsbereich": {
            "$ref": "#/components/schemas/EEntity"
          },
          "modulliste": {
            "$ref": "#/components/schemas/EEntity"
          },
          "modultitel": {
            "type": "string"
          },
          "modullp": {
            "type": "integer",
            "format": "int32"
          },
          "modulbenotet": {
            "type": "boolean"
          },
          "makroturnus": {
            "$ref": "#/components/schemas/EEntity"
          },
          "bolognamodulPruefungsform": {
            "$ref": "#/components/schemas/EEntity"
          },
          "modulgewichtung": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "EMplEinschreibestatus": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minimum": 1,
            "type": "integer",
            "description": "Datenbank-ID in Moses",
            "format": "int32"
          },
          "eidFromImport": {
            "type": "string",
            "description": "Extern-ID, wird beim Import aus anderen Systemen gesetzt. Muss keine Zahl sein, da intern als Zeichenkette gespeichert."
          },
          "name": {
            "type": "string",
            "description": "Name: Beste menschenlesbare Darstellung des Objekts."
          },
          "multiname": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
            },
            "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
          },
          "kurzname": {
            "type": "string",
            "description": "Wenn es einen abgekürzten Namen gibt, wird dieser hier zurückgegeben. Ansonsten wird der normale Name zurückgegeben."
          },
          "archivierungTimestamp": {
            "type": "string",
            "description": "Wenn dieses Objekt archiviert ist, ist dieses Element vorhanden und markiert den Archivierungszeitpunkt. Es gibt auch Objekte, die generell nicht archivierbar sind.",
            "format": "date-time"
          },
          "mplStudium": {
            "$ref": "#/components/schemas/EEntity"
          },
          "semester": {
            "$ref": "#/components/schemas/EEntity"
          },
          "status": {
            "type": "string",
            "enum": [
              "ERSTMALSEINGESCHRIEBEN",
              "NEUEINGESCHRIEBEN",
              "BEURLAUBT",
              "ZURUECKGEMELDET",
              "ABWEICHEND"
            ]
          }
        }
      },
      "EMplFachsemester": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minimum": 1,
            "type": "integer",
            "description": "Datenbank-ID in Moses",
            "format": "int32"
          },
          "eidFromImport": {
            "type": "string",
            "description": "Extern-ID, wird beim Import aus anderen Systemen gesetzt. Muss keine Zahl sein, da intern als Zeichenkette gespeichert."
          },
          "name": {
            "type": "string",
            "description": "Name: Beste menschenlesbare Darstellung des Objekts."
          },
          "multiname": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
            },
            "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
          },
          "kurzname": {
            "type": "string",
            "description": "Wenn es einen abgekürzten Namen gibt, wird dieser hier zurückgegeben. Ansonsten wird der normale Name zurückgegeben."
          },
          "archivierungTimestamp": {
            "type": "string",
            "description": "Wenn dieses Objekt archiviert ist, ist dieses Element vorhanden und markiert den Archivierungszeitpunkt. Es gibt auch Objekte, die generell nicht archivierbar sind.",
            "format": "date-time"
          },
          "mplStudienordnung": {
            "$ref": "#/components/schemas/EEntity"
          },
          "nummer": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "EMplFachsemestereinstufung": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minimum": 1,
            "type": "integer",
            "description": "Datenbank-ID in Moses",
            "format": "int32"
          },
          "eidFromImport": {
            "type": "string",
            "description": "Extern-ID, wird beim Import aus anderen Systemen gesetzt. Muss keine Zahl sein, da intern als Zeichenkette gespeichert."
          },
          "name": {
            "type": "string",
            "description": "Name: Beste menschenlesbare Darstellung des Objekts."
          },
          "multiname": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
            },
            "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
          },
          "kurzname": {
            "type": "string",
            "description": "Wenn es einen abgekürzten Namen gibt, wird dieser hier zurückgegeben. Ansonsten wird der normale Name zurückgegeben."
          },
          "archivierungTimestamp": {
            "type": "string",
            "description": "Wenn dieses Objekt archiviert ist, ist dieses Element vorhanden und markiert den Archivierungszeitpunkt. Es gibt auch Objekte, die generell nicht archivierbar sind.",
            "format": "date-time"
          },
          "mplStudium": {
            "$ref": "#/components/schemas/EEntity"
          },
          "semester": {
            "$ref": "#/components/schemas/EEntity"
          },
          "mplFachsemester": {
            "$ref": "#/components/schemas/EMplFachsemester"
          },
          "mplBasisgruppe": {
            "$ref": "#/components/schemas/EEntity"
          }
        }
      },
      "EMplFachsemesterModulEintrag": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minimum": 1,
            "type": "integer",
            "description": "Datenbank-ID in Moses",
            "format": "int32"
          },
          "eidFromImport": {
            "type": "string",
            "description": "Extern-ID, wird beim Import aus anderen Systemen gesetzt. Muss keine Zahl sein, da intern als Zeichenkette gespeichert."
          },
          "name": {
            "type": "string",
            "description": "Name: Beste menschenlesbare Darstellung des Objekts."
          },
          "multiname": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
            },
            "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
          },
          "kurzname": {
            "type": "string",
            "description": "Wenn es einen abgekürzten Namen gibt, wird dieser hier zurückgegeben. Ansonsten wird der normale Name zurückgegeben."
          },
          "archivierungTimestamp": {
            "type": "string",
            "description": "Wenn dieses Objekt archiviert ist, ist dieses Element vorhanden und markiert den Archivierungszeitpunkt. Es gibt auch Objekte, die generell nicht archivierbar sind.",
            "format": "date-time"
          },
          "mplFachsemester": {
            "$ref": "#/components/schemas/EMplFachsemester"
          },
          "mplModul": {
            "$ref": "#/components/schemas/EEntity"
          },
          "pflichttyp": {
            "type": "string",
            "enum": [
              "PFLICHT",
              "WAHLPFLICHT",
              "WAHL"
            ]
          }
        }
      },
      "EMplModul": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minimum": 1,
            "type": "integer",
            "description": "Datenbank-ID in Moses",
            "format": "int32"
          },
          "eidFromImport": {
            "type": "string",
            "description": "Extern-ID, wird beim Import aus anderen Systemen gesetzt. Muss keine Zahl sein, da intern als Zeichenkette gespeichert."
          },
          "name": {
            "type": "string",
            "description": "Name: Beste menschenlesbare Darstellung des Objekts."
          },
          "multiname": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
            },
            "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
          },
          "kurzname": {
            "type": "string",
            "description": "Wenn es einen abgekürzten Namen gibt, wird dieser hier zurückgegeben. Ansonsten wird der normale Name zurückgegeben."
          },
          "archivierungTimestamp": {
            "type": "string",
            "description": "Wenn dieses Objekt archiviert ist, ist dieses Element vorhanden und markiert den Archivierungszeitpunkt. Es gibt auch Objekte, die generell nicht archivierbar sind.",
            "format": "date-time"
          }
        }
      },
      "EDateInterval": {
        "type": "object",
        "properties": {
          "startDate": {
            "type": "string",
            "format": "date"
          },
          "endDate": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "EMplModulLvVorlageEintrag": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minimum": 1,
            "type": "integer",
            "description": "Datenbank-ID in Moses",
            "format": "int32"
          },
          "eidFromImport": {
            "type": "string",
            "description": "Extern-ID, wird beim Import aus anderen Systemen gesetzt. Muss keine Zahl sein, da intern als Zeichenkette gespeichert."
          },
          "name": {
            "type": "string",
            "description": "Name: Beste menschenlesbare Darstellung des Objekts."
          },
          "multiname": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
            },
            "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
          },
          "kurzname": {
            "type": "string",
            "description": "Wenn es einen abgekürzten Namen gibt, wird dieser hier zurückgegeben. Ansonsten wird der normale Name zurückgegeben."
          },
          "archivierungTimestamp": {
            "type": "string",
            "description": "Wenn dieses Objekt archiviert ist, ist dieses Element vorhanden und markiert den Archivierungszeitpunkt. Es gibt auch Objekte, die generell nicht archivierbar sind.",
            "format": "date-time"
          },
          "mplModul": {
            "$ref": "#/components/schemas/EEntity"
          },
          "mplSubmodul": {
            "$ref": "#/components/schemas/EEntity"
          },
          "mplLvVorlage": {
            "$ref": "#/components/schemas/EEntity"
          },
          "gueltigkeit": {
            "$ref": "#/components/schemas/EDateInterval"
          }
        }
      },
      "EMplStudienordnung": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minimum": 1,
            "type": "integer",
            "description": "Datenbank-ID in Moses",
            "format": "int32"
          },
          "eidFromImport": {
            "type": "string",
            "description": "Extern-ID, wird beim Import aus anderen Systemen gesetzt. Muss keine Zahl sein, da intern als Zeichenkette gespeichert."
          },
          "name": {
            "type": "string",
            "description": "Name: Beste menschenlesbare Darstellung des Objekts."
          },
          "multiname": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
            },
            "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
          },
          "kurzname": {
            "type": "string",
            "description": "Wenn es einen abgekürzten Namen gibt, wird dieser hier zurückgegeben. Ansonsten wird der normale Name zurückgegeben."
          },
          "archivierungTimestamp": {
            "type": "string",
            "description": "Wenn dieses Objekt archiviert ist, ist dieses Element vorhanden und markiert den Archivierungszeitpunkt. Es gibt auch Objekte, die generell nicht archivierbar sind.",
            "format": "date-time"
          },
          "studiengang": {
            "$ref": "#/components/schemas/EEntity"
          }
        }
      },
      "EMplStudium": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minimum": 1,
            "type": "integer",
            "description": "Datenbank-ID in Moses",
            "format": "int32"
          },
          "eidFromImport": {
            "type": "string",
            "description": "Extern-ID, wird beim Import aus anderen Systemen gesetzt. Muss keine Zahl sein, da intern als Zeichenkette gespeichert."
          },
          "name": {
            "type": "string",
            "description": "Name: Beste menschenlesbare Darstellung des Objekts."
          },
          "multiname": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
            },
            "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
          },
          "kurzname": {
            "type": "string",
            "description": "Wenn es einen abgekürzten Namen gibt, wird dieser hier zurückgegeben. Ansonsten wird der normale Name zurückgegeben."
          },
          "archivierungTimestamp": {
            "type": "string",
            "description": "Wenn dieses Objekt archiviert ist, ist dieses Element vorhanden und markiert den Archivierungszeitpunkt. Es gibt auch Objekte, die generell nicht archivierbar sind.",
            "format": "date-time"
          },
          "person": {
            "$ref": "#/components/schemas/EEntity"
          },
          "studiengang": {
            "$ref": "#/components/schemas/EEntity"
          },
          "fachstatus": {
            "type": "string",
            "enum": [
              "HAUPTFACH",
              "NEBENFACH"
            ]
          },
          "fachsemesterAnzahl": {
            "type": "integer",
            "format": "int32"
          },
          "einschreibedatum": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "EMplSubmodul": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minimum": 1,
            "type": "integer",
            "description": "Datenbank-ID in Moses",
            "format": "int32"
          },
          "eidFromImport": {
            "type": "string",
            "description": "Extern-ID, wird beim Import aus anderen Systemen gesetzt. Muss keine Zahl sein, da intern als Zeichenkette gespeichert."
          },
          "name": {
            "type": "string",
            "description": "Name: Beste menschenlesbare Darstellung des Objekts."
          },
          "multiname": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
            },
            "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
          },
          "kurzname": {
            "type": "string",
            "description": "Wenn es einen abgekürzten Namen gibt, wird dieser hier zurückgegeben. Ansonsten wird der normale Name zurückgegeben."
          },
          "archivierungTimestamp": {
            "type": "string",
            "description": "Wenn dieses Objekt archiviert ist, ist dieses Element vorhanden und markiert den Archivierungszeitpunkt. Es gibt auch Objekte, die generell nicht archivierbar sind.",
            "format": "date-time"
          },
          "mplModul": {
            "$ref": "#/components/schemas/EEntity"
          }
        }
      },
      "EMplTerminanmeldung": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minimum": 1,
            "type": "integer",
            "description": "Datenbank-ID in Moses",
            "format": "int32"
          },
          "eidFromImport": {
            "type": "string",
            "description": "Extern-ID, wird beim Import aus anderen Systemen gesetzt. Muss keine Zahl sein, da intern als Zeichenkette gespeichert."
          },
          "name": {
            "type": "string",
            "description": "Name: Beste menschenlesbare Darstellung des Objekts."
          },
          "multiname": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
            },
            "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
          },
          "kurzname": {
            "type": "string",
            "description": "Wenn es einen abgekürzten Namen gibt, wird dieser hier zurückgegeben. Ansonsten wird der normale Name zurückgegeben."
          },
          "archivierungTimestamp": {
            "type": "string",
            "description": "Wenn dieses Objekt archiviert ist, ist dieses Element vorhanden und markiert den Archivierungszeitpunkt. Es gibt auch Objekte, die generell nicht archivierbar sind.",
            "format": "date-time"
          },
          "mplStudium": {
            "$ref": "#/components/schemas/EEntity"
          },
          "calVeranstaltung": {
            "$ref": "#/components/schemas/EEntity"
          },
          "mplBasisgruppe": {
            "$ref": "#/components/schemas/EEntity"
          },
          "mplPoModulList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EEntity"
            }
          },
          "mplLvEinheitWhiteList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EEntity"
            }
          }
        }
      },
      "EMikroturnus": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minimum": 1,
            "type": "integer",
            "description": "Datenbank-ID in Moses",
            "format": "int32"
          },
          "eidFromImport": {
            "type": "string",
            "description": "Extern-ID, wird beim Import aus anderen Systemen gesetzt. Muss keine Zahl sein, da intern als Zeichenkette gespeichert."
          },
          "name": {
            "type": "string",
            "description": "Name: Beste menschenlesbare Darstellung des Objekts."
          },
          "multiname": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
            },
            "description": "Name: Beste menschenlesbare Darstellung des Objekts nach Sprache (Map Key: LanguageID z.B. de_DE oder en_US; Map Value: Der Name in der jeweiligen Sprache)."
          },
          "kurzname": {
            "type": "string",
            "description": "Wenn es einen abgekürzten Namen gibt, wird dieser hier zurückgegeben. Ansonsten wird der normale Name zurückgegeben."
          },
          "archivierungTimestamp": {
            "type": "string",
            "description": "Wenn dieses Objekt archiviert ist, ist dieses Element vorhanden und markiert den Archivierungszeitpunkt. Es gibt auch Objekte, die generell nicht archivierbar sind.",
            "format": "date-time"
          },
          "dayPeriodicity": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    }
  }
}